window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "cpom", "modulename": "cpom", "kind": "module", "doc": "<p>Automated documentation for the CPOM Software Package, hosted on GitHub at\n<a href=\"https://github.com/CPOM-Altimetry/cpom_software2\">github.com/CPOM-Altimetry/cpom_software2</a>.</p>\n\n<h1 id=\"installation\">Installation</h1>\n\n<h2 id=\"installation-of-the-cpom-software-package\">Installation of the CPOM Software Package</h2>\n\n<p>Note that the package has been tested on Linux and MacOS systems. Use on\nother operating systems is possible but may require additional install steps.</p>\n\n<p>Make sure you have <em>git</em> installed on your target system.</p>\n\n<p>Clone the git public repository in to a suitable directory on your system.\nThis will create a directory called <strong>/cpom_software2</strong> in your current directory.</p>\n\n<p>with https:\n<code>git clone https://github.com/CPOM-Altimetry/cpom_software2.git</code></p>\n\n<p>or with ssh:\n<code>git clone git@github.com:CPOM-Altimetry/cpom_software2.git</code></p>\n\n<p>or with the GitHub CLI:\n<code>gh repo clone CPOM-Altimetry/cpom_software2</code></p>\n\n<h2 id=\"quick-setup\">Quick Setup</h2>\n\n<p>This quick setup runs a script to do all the setup work.\nIt is recommended in most cases (tested on macos, linux)</p>\n\n<p>Run the install script:</p>\n\n<pre><code>cd cpom_software2\n./install.sh\n</code></pre>\n\n<p>This will install </p>\n\n<ul>\n<li>python 3.12</li>\n<li>poetry</li>\n<li>project packages (using poetry)</li>\n<li>create a file ./setup_env.sh which is used to setup the correct environment variables</li>\n</ul>\n\n<h3 id=\"load-the-virtual-environment\">Load the Virtual Environment</h3>\n\n<p>Now you are all setup to go. Whenever you want to run any cpom software tools you\nmust first activate the virtual environment as follows:</p>\n\n<pre><code>cd $CPOM_SOFTWARE_DIR\nsource activate.sh\n</code></pre>\n\n<p>or the identical</p>\n\n<pre><code>. activate.sh\n</code></pre>\n\n<h1 id=\"tool-list\">Tool List</h1>\n\n<p>This section provides a list of current command line tools available in the\ncpom software v2. This is in addition to in-code usage of the cpom v2 modules.</p>\n\n<ul>\n<li><p><strong>plot_map.py</strong>\ngeneric program to plot parameter(s) from netcdf files(s) on cryosphere maps.\nWorks with any netcdf file(s) containing latitude, longitude and parameter data,\nbut also has knowledge of most common altimetry formats to self discover lat,lon names. \nContains command line options for many of the cpom Polarplot.plot_points() class function.\nSee <code>cpom.altimetry.tools.plot_map</code> for all options.</p></li>\n<li><p><strong>find_files_in_area.py</strong> \nidentify netcdf files within a directory (or recursive sub-dir) containing lat,lon \nlocations within a cpom area mask or within a radius of a specified lat,lon point. \nFor example you could use it to list CS2 L1b files passing over the Greenland ice \nsheet for validation purposes. Optionally plots the tracks as well. \nFor all the many search options see:\n<code>cpom.altimetry.tools.find_files_in_area</code> </p></li>\n</ul>\n\n<h1 id=\"development\">Development</h1>\n\n<h2 id=\"development-process\">Development Process</h2>\n\n<p>This section details the main development processes to contribute to the CPOM software.</p>\n\n<ul>\n<li><p>Create a new feature branch</p>\n\n<pre><code>git checkout -b yourinitials_featurename\n</code></pre></li>\n<li><p>Create new local commits as you develop your feature</p>\n\n<pre><code>git commit -a -m \"commit description\"\n</code></pre>\n\n<p>During the git commit the automated code checks (lint, mypy, ruff, etc) should run \n(using the pre-installed <strong>pre-commit</strong> tool). These must pass in order for the \ncommit to succeed. \nIf these checks do not run then your <strong>pre-commit</strong> setup (during installation) is not correct.</p></li>\n<li><p>push your branch to GitHub</p>\n\n<pre><code>git push\n</code></pre></li>\n<li><p>Create a <strong>Pull Request (PR)</strong> on GitHub for your new branch.</p>\n\n<p>This just starts a dialog on your new feature. You can continue to develop the feature with \nadditional commits and pushes.</p>\n\n<p>This will also automatically run the <strong>GitHub Actions</strong> tests on your full branch. \nThis runs the static code checks (as per pre-commit and also all the pytests in the full branch). \nThe success or failure (including reasons) will be reported in the PR page.</p></li>\n<li><p>Finally, once your feature is fully tested request a review on GitHub in your Pull Request page.</p></li>\n<li><p>Once the review is passed, the feature will be merged in to the main branch.</p></li>\n</ul>\n\n<h2 id=\"test-development\">Test Development</h2>\n\n<p>Each module should have an associated pytest unit or integration test. Place these in\na <strong>tests/</strong> directory inside your module directory. ie:</p>\n\n<pre><code>mymodule.py\ntests/test_mymodule.py\n</code></pre>\n\n<p>If your test accesses data outside the repository then you need to exclude\nit from running on GitHub Actions CI. To do this just include one of the following\nat the top of your test code:</p>\n\n<p><code>pytestmark = pytest.mark.requires_external_data</code></p>\n\n<p>or</p>\n\n<p><code>pytestmark = pytest.mark.non_core</code></p>\n\n<h1 id=\"automatic-documentation\">Automatic Documentation</h1>\n\n<p>Documentation is automatically generated to this page \n<a href=\"https://cpom-altimetry.github.io/cpom_software2\">https://cpom-altimetry.github.io/cpom_software2</a> \nfrom docstrings in the code when the <strong>main</strong> branch is updated on GitHub. \nA few things to note:</p>\n\n<ul>\n<li>docstrings should use Markdown syntax for basic formatting. See \n<a href=\"https://www.markdownguide.org/basic-syntax\">markdownguide.org/basic-syntax</a>.</li>\n<li>within each directory there should be a __init__.py file. The docstring in these files\nare displayed as the introduction page of that module or set of modules.</li>\n<li>the top level page (ie this page) is in <strong>src/cpom/__init__.py</strong></li>\n<li>you can display images within docstrings by putting the images in \n<strong>docs/images/</strong>some_image.png and then in the module's docstring put\n<code>![](/cpom_software2/images/some_image.png \"\")</code>. Note you should do a <code>git add docs/images</code>\nwithin your branch as well so that the image is included. See the docstring example in\n<code>cpom.altimetry.tools.plot_map</code></li>\n<li>you can create diagrams using <strong>mermaid</strong> syntax within the docstring. \nSee this \n<a href=\"https://github.blog/developer-skills/github/include-diagrams-markdown-files-mermaid/\">link</a>.</li>\n<li><strong>documentation is only included in the web page when the main branch is updated</strong> so\nyou won't see any update when you modify a separate branch. Your docstrings will only be\nprocessed after a successful pull request to the main branch.</li>\n<li>further info on how auto-documentation works from docstrings and more advanced syntax\nat the <strong>pdoc</strong> documentation: <a href=\"https://pdoc.dev/docs/pdoc.html#what-is-pdoc\">https://pdoc.dev/docs/pdoc.html#what-is-pdoc</a></li>\n</ul>\n"}, {"fullname": "cpom.altimetry", "modulename": "cpom.altimetry", "kind": "module", "doc": "<h1 id=\"altimetry-related-directories\">Altimetry related directories</h1>\n\n<ul>\n<li><code>cpom.altimetry.missions</code>\n<ul>\n<li>code for the altimetry Mission class (stores info and \ngeneric functions for a range of altimetry missions)</li>\n</ul></li>\n<li><code>cpom.altimetry.projects</code>\n<ul>\n<li>contains sub-directories of code for specific projects (ESA or other)</li>\n</ul></li>\n<li><code>cpom.altimetry.tools</code>\n<ul>\n<li>contains executable tools for various tasks</li>\n</ul></li>\n</ul>\n"}, {"fullname": "cpom.altimetry.geolocation", "modulename": "cpom.altimetry.geolocation", "kind": "module", "doc": "<h1 id=\"geolocation-functions\">Geolocation functions</h1>\n"}, {"fullname": "cpom.altimetry.geolocation.geolocate_roemer", "modulename": "cpom.altimetry.geolocation.geolocate_roemer", "kind": "module", "doc": "<p>cpom.altimetry.geolocation.geolocate_roemer.py</p>\n\n<h1 id=\"purpose\">Purpose</h1>\n\n<p>Slope correction/geolocation function using an adapted Roemer method \nfrom :\nRoemer, S., Legr\u00e9sy, B., Horwath, M., and Dietrich, R.: Refined\nanalysis of radar altimetry data applied to the region of the\nsubglacial Lake Vostok/Antarctica, Remote Sens. Environ., 106,\n269\u2013284, <a href=\"https://doi.org/10.1016/j.rse.2006.02.026\">https://doi.org/10.1016/j.rse.2006.02.026</a>, 2007.</p>\n\n<p>Adaption by A.Muir, M.McMillan, Q.Huang (CPOM), includes a two stage POCA location, \nperformed by minimizing the range to the satellite from DEM points located within firstly\na circular area around the nadir location of radius equal to half the beam width, \nand then within the pulse limited footprint around the initial POCA\nat a finer resampled DEM resolution.</p>\n\n<p>Next the calculated POCA's range to satellite is checked to see if it is\nwithin the range window (configurably trimmed). If not the slope\ncorrection is failed.</p>\n\n<p>Finally the slope correction and height is calculated from</p>\n\n<p>height[i] = altitudes[i]\n                    - (geo_corrected_tracker_range[i] + retracker_correction[i])\n                    + slope_correction[i]</p>\n\n<h1 id=\"main-function\">Main function</h1>\n\n<p>geolocate_roemer()</p>\n"}, {"fullname": "cpom.altimetry.geolocation.geolocate_roemer.log", "modulename": "cpom.altimetry.geolocation.geolocate_roemer", "qualname": "log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger cpom.altimetry.geolocation.geolocate_roemer (WARNING)&gt;"}, {"fullname": "cpom.altimetry.geolocation.geolocate_roemer.EARTH_RADIUS", "modulename": "cpom.altimetry.geolocation.geolocate_roemer", "qualname": "EARTH_RADIUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "6378137.0"}, {"fullname": "cpom.altimetry.geolocation.geolocate_roemer.calculate_distances3d", "modulename": "cpom.altimetry.geolocation.geolocate_roemer", "qualname": "calculate_distances3d", "kind": "function", "doc": "<p>calculates the distances between a  refernce cartesian point (x1,y1,z1) in 3d space\nand a list of other points : x2[],y2[],z2[]</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x1_coord (float):</strong>  x coordinate of ref point</li>\n<li><strong>y1_coord (float):</strong>  y coordinate of ref point</li>\n<li><strong>z1_coord (float):</strong>  z coordinate of ref point</li>\n<li><strong>x2_array (np.ndarray):</strong>  list of x coordinates</li>\n<li><strong>y2_array (np.ndarray):</strong>  list of y coordinates</li>\n<li><strong>z2_array (np.ndarray):</strong>  list of z coordinates</li>\n<li><strong>squared_only (bool) :</strong>  if True, only calculate the squares of diffs and not sqrt\nthis will be faster, but doesn't give actual distances</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list[float]: list of distances between points x1,y1,z1 and x2[],y2[],z2[]</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x1_coord</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y1_coord</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z1_coord</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x2_array</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">y2_array</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">z2_array</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">squared_only</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.geolocation.geolocate_roemer.calculate_distances2d", "modulename": "cpom.altimetry.geolocation.geolocate_roemer", "qualname": "calculate_distances2d", "kind": "function", "doc": "<p>calculates the distances between a  refernce cartesian point (x1,y1) in 2d space\nand a list of other points : x2[],y2[]</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x1_coord (float):</strong>  x coordinate of ref point</li>\n<li><strong>y1_coord (float):</strong>  y coordinate of ref point</li>\n<li><strong>x2_array (np.ndarray):</strong>  list of x coordinates</li>\n<li><strong>y2_array (np.ndarray):</strong>  list of y coordinates</li>\n<li><strong>squared_only (bool) :</strong>  if True, only calculate the squares of diffs and not sqrt\nthis will be faster, but doesn't give actual distances</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: list of distances between points x1,y1,z1 and x2[],y2[]</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x1_coord</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y1_coord</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x2_array</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y2_array</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">squared_only</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.geolocation.geolocate_roemer.find_poca", "modulename": "cpom.altimetry.geolocation.geolocate_roemer", "qualname": "find_poca", "kind": "function", "doc": "<p>Function that finds the POCA using method similar to Roemer et al. (2007)\n   Finds the point with the shortest range to the satellite in the DEM segment and\n   computes the slope correction to height\n   Adapted from original : CLS (python) of McMillan (Matlab) code</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>zdem (np.ndarray):</strong>  DEM height values</li>\n<li><strong>xdem (np.ndarray):</strong>  x locations of DEM in polar stereo coordinates (m)</li>\n<li><strong>ydem (np.ndarray):</strong>  y locations of DEM in polar stereo coordinates (m)</li>\n<li><strong>nadir_x (float):</strong>  x location of nadir in polar stereo coordinates (m)</li>\n<li><strong>nadir_y (float):</strong>  y location of nadir in polar stereo coordinates (m)</li>\n<li><strong>alt_pt (float):</strong>  altitude at nadir (m)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>(float,float,float,float,float,bool): poca_x, poca_y, poca_z, slope_correction_to_height,\n  range_to_satellite_of_poca,\n  flg_success</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">zdem</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">xdem</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">ydem</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">nadir_x</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">nadir_y</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">alt_pt</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.geolocation.geolocate_roemer.datetime2year", "modulename": "cpom.altimetry.geolocation.geolocate_roemer", "qualname": "datetime2year", "kind": "function", "doc": "<p>calculate decimal year from datetime</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>date_dt (datetime):</strong>  datetime obj to process</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: decimal year</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">date_dt</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.geolocation.geolocate_roemer.geolocate_roemer", "modulename": "cpom.altimetry.geolocation.geolocate_roemer", "qualname": "geolocate_roemer", "kind": "function", "doc": "<p>Geolocate CS2 LRM measurements using an adapted Roemer (Roemer et al, 2007) method</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>l1b (Dataset):</strong>  NetCDF Dataset of L1b file</li>\n<li><strong>thisdem (Dem):</strong>  Dem object used for Roemer correction</li>\n<li><strong>thisdem_fine (Dem):</strong>  Dem object used for fine Roemer correction (maybe same obj as thisdem)</li>\n<li><strong>config (dict):</strong>  config dictionary containing\n\"roemer_geolocation\": {\n    \"fine_grid_sampling\": 10, # DEM sampling of second stage\n    \"max_poca_reloc_distance\": 6600, # meters. Max distance from nadir allowed\n    \"median_filter\": False, # apply a median filter to DEM area of interest around nadir\n    \"median_filter_width\": 7,\n    \"reject_outside_range_window\": True, # reject POCA is outside trimmed range window\n    \"range_window_lower_trim\": 0, # meters\n    \"range_window_upper_trim\": 0, # meters\n    \"use_sliding_window\": False, # sliding window method is much slower.\n                                 # Needs further testing to see if it improves results\n}\n\"instrument\": {\n    \"across_track_beam_width\": 15000, # meters\n    \"pulse_limited_footprint_size\": 1600, # meters\n}</li>\n<li><strong>surface_type_20_ku (np.ndarray):</strong>  surface type for track, where 1 == grounded_ice</li>\n<li><strong>geo_corrected_tracker_range (np.ndarray) :</strong>  geo-corrected tracker range (NOT retracked)</li>\n<li><strong>retracker_correction (np.ndarray) :</strong>  retracker correction to range (m)</li>\n<li><strong>points_to_include (np.ndarray) :</strong>  boolean array of points to include (False == reject)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>(np.ndarray, np.ndarray, np.ndarray, np.ndarray, np.ndarray):\n  (height_20_ku, lat_poca_20_ku, lon_poca_20_ku, slope_ok, relocation_distance)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">altitudes</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">thisdem</span><span class=\"p\">:</span> <span class=\"n\">cpom</span><span class=\"o\">.</span><span class=\"n\">dems</span><span class=\"o\">.</span><span class=\"n\">dems</span><span class=\"o\">.</span><span class=\"n\">Dem</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">thisdem_fine</span><span class=\"p\">:</span> <span class=\"n\">cpom</span><span class=\"o\">.</span><span class=\"n\">dems</span><span class=\"o\">.</span><span class=\"n\">dems</span><span class=\"o\">.</span><span class=\"n\">Dem</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">surface_type_20_ku</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">geo_corrected_tracker_range</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">retracker_correction</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">points_to_include</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.geolocation.geolocate_roemer_sar", "modulename": "cpom.altimetry.geolocation.geolocate_roemer_sar", "kind": "module", "doc": "<p>cpom.altimetry.geolocation.geolocate_roemer_sar.py</p>\n\n<h1 id=\"purpose\">Purpose</h1>\n\n<p>Slope correction/geolocation function for SAR using an adapted Roemer method\nfrom :\nRoemer, S., Legr\u00e9sy, B., Horwath, M., and Dietrich, R.: Refined\nanalysis of radar altimetry data applied to the region of the\nsubglacial Lake Vostok/Antarctica, Remote Sens. Environ., 106,\n269\u2013284, <a href=\"https://doi.org/10.1016/j.rse.2006.02.026\">https://doi.org/10.1016/j.rse.2006.02.026</a>, 2007.</p>\n\n<p>Adaption by A.Muir, M.McMillan, Q.Huang (CPOM), includes a two stage POCA location,\nperformed by minimizing the range to the satellite from DEM points located within firstly\nan across track rectangular area (multi-looked Doppler footprint) centered on the nadir\nlocation of width equal to the beam width,\nand then within the pulse doppler limited footprint around the initial POCA\nat a finer resampled DEM resolution.</p>\n\n<p>Next the calculated POCA's range to satellite is checked to see if it is\nwithin the range window (configurably trimmed). If not the slope\ncorrection is failed.</p>\n\n<p>Finally the slope correction and height is calculated from</p>\n\n<p>height[i] = altitudes[i]\n                    - (geo_corrected_tracker_range[i] + retracker_correction[i])\n                    + slope_correction[i]</p>\n\n<h1 id=\"main-function\">Main function</h1>\n\n<p>geolocate_roemeri_sar()</p>\n"}, {"fullname": "cpom.altimetry.geolocation.geolocate_roemer_sar.log", "modulename": "cpom.altimetry.geolocation.geolocate_roemer_sar", "qualname": "log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger cpom.altimetry.geolocation.geolocate_roemer_sar (WARNING)&gt;"}, {"fullname": "cpom.altimetry.geolocation.geolocate_roemer_sar.EARTH_RADIUS", "modulename": "cpom.altimetry.geolocation.geolocate_roemer_sar", "qualname": "EARTH_RADIUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "6378137.0"}, {"fullname": "cpom.altimetry.geolocation.geolocate_roemer_sar.find_poca", "modulename": "cpom.altimetry.geolocation.geolocate_roemer_sar", "qualname": "find_poca", "kind": "function", "doc": "<p>Function that finds the POCA using method similar to Roemer et al. (2007)\n   Finds the point with the shortest range to the satellite in the DEM segment and\n   computes the slope correction to height\n   Adapted from original : CLS (python) of McMillan (Matlab) code</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>zdem (np.ndarray):</strong>  DEM height values</li>\n<li><strong>xdem (np.ndarray):</strong>  x locations of DEM in polar stereo coordinates (m)</li>\n<li><strong>ydem (np.ndarray):</strong>  y locations of DEM in polar stereo coordinates (m)</li>\n<li><strong>nadir_x (float):</strong>  x location of nadir in polar stereo coordinates (m)</li>\n<li><strong>nadir_y (float):</strong>  y location of nadir in polar stereo coordinates (m)</li>\n<li><strong>alt_pt (float):</strong>  altitude at nadir (m)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>(float,float,float,float,float,bool): poca_x, poca_y, poca_z, slope_correction_to_height,\n  range_to_satellite_of_poca,\n  flg_success</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">zdem</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">xdem</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">ydem</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">nadir_x</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">nadir_y</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">alt_pt</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.geolocation.geolocate_roemer_sar.datetime2year", "modulename": "cpom.altimetry.geolocation.geolocate_roemer_sar", "qualname": "datetime2year", "kind": "function", "doc": "<p>calculate decimal year from datetime</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>date_dt (datetime):</strong>  datetime obj to process</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: decimal year</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">date_dt</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.geolocation.geolocate_roemer_sar.geolocate_roemer_sar", "modulename": "cpom.altimetry.geolocation.geolocate_roemer_sar", "qualname": "geolocate_roemer_sar", "kind": "function", "doc": "<p>Geolocate SAR measurements using an adapted Roemer (Roemer et al, 2007) method</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>l1b (Dataset):</strong>  NetCDF Dataset of L1b file</li>\n<li><strong>thisdem (Dem):</strong>  Dem object used for Roemer correction</li>\n<li><strong>thisdem_fine (Dem):</strong>  Dem object used for fine Roemer correction (maybe same obj as thisdem)</li>\n<li><strong>config (dict):</strong>  config dictionary containing\n\"roemer_geolocation\": {\n    \"fine_grid_sampling\": 10, # DEM sampling of second stage\n    \"max_poca_reloc_distance\": 6600, # meters. Max distance from nadir allowed\n    \"reject_outside_range_window\": True, # reject POCA is outside trimmed range window\n    \"range_window_lower_trim\": 0, # meters\n    \"range_window_upper_trim\": 0, # meters\n}\n\"instrument\": {\n    \"across_track_beam_width\": 15000, # meters\n    \"pulse_limited_footprint_size\": 1600, # meters\n    \"across_track_doppler_footprint_width\": 1600, # meters\n}</li>\n<li><strong>geo_corrected_tracker_range (np.ndarray) :</strong>  geo-corrected tracker range (NOT retracked)</li>\n<li><strong>points_to_include (np.ndarray) :</strong>  boolean array of points to include (False == reject)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>(np.ndarray, np.ndarray, np.ndarray, np.ndarray, np.ndarray):\n  (slope_correction, lat_poca, lon_poca, slope_ok, relocation_distance)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">altitudes</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">thisdem</span><span class=\"p\">:</span> <span class=\"n\">cpom</span><span class=\"o\">.</span><span class=\"n\">dems</span><span class=\"o\">.</span><span class=\"n\">dems</span><span class=\"o\">.</span><span class=\"n\">Dem</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">thisdem_fine</span><span class=\"p\">:</span> <span class=\"n\">cpom</span><span class=\"o\">.</span><span class=\"n\">dems</span><span class=\"o\">.</span><span class=\"n\">dems</span><span class=\"o\">.</span><span class=\"n\">Dem</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">geo_corrected_tracker_range</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">points_to_include</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.geolocation.get_heading", "modulename": "cpom.altimetry.geolocation.get_heading", "kind": "module", "doc": "<h1 id=\"cpomaltimetrygeolocationget_headingpy\">cpom.altimetry.geolocation.get_heading.py</h1>\n\n<p>utility functions for slope correction\nget_heading()       :   Function to get heading angles from [x1,y1,x2,y2,..]\n                        (requires at least 2 records)</p>\n"}, {"fullname": "cpom.altimetry.geolocation.get_heading.get_heading", "modulename": "cpom.altimetry.geolocation.get_heading", "qualname": "get_heading", "kind": "function", "doc": "<p>Function to get track headings (requires at least 2 records)</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x_locs (List[float]):</strong>  list of nadir x locations</li>\n<li><strong>y_locs (List[float]):</strong>  list of nadir y locations</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>headings (np.ndarray) : list of heading angles in degrees (0..360)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x_locs</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">y_locs</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.geolocation.tests", "modulename": "cpom.altimetry.geolocation.tests", "kind": "module", "doc": "<h1 id=\"pytest-functions-for-geolocation\">pytest functions for geolocation</h1>\n"}, {"fullname": "cpom.altimetry.geolocation.tests.test_geolocate_roemer", "modulename": "cpom.altimetry.geolocation.tests.test_geolocate_roemer", "kind": "module", "doc": "<p>cpom.altimetry.geolocation.tests.test_geolocate_roemer.py</p>\n\n<h1 id=\"pytest-functions-for-geolocate_roemerpy\">pytest functions for geolocate_roemer.py</h1>\n"}, {"fullname": "cpom.altimetry.geolocation.tests.test_geolocate_roemer.log", "modulename": "cpom.altimetry.geolocation.tests.test_geolocate_roemer", "qualname": "log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger cpom.altimetry.geolocation.tests.test_geolocate_roemer (WARNING)&gt;"}, {"fullname": "cpom.altimetry.geolocation.tests.test_geolocate_roemer.pytestmark", "modulename": "cpom.altimetry.geolocation.tests.test_geolocate_roemer", "qualname": "pytestmark", "kind": "variable", "doc": "<p></p>\n", "default_value": "MarkDecorator(mark=Mark(name=&#x27;requires_external_data&#x27;, args=(), kwargs={}))"}, {"fullname": "cpom.altimetry.geolocation.tests.test_geolocate_roemer.test_geolocate_roemer", "modulename": "cpom.altimetry.geolocation.tests.test_geolocate_roemer", "qualname": "test_geolocate_roemer", "kind": "function", "doc": "<p>pytest function for geolocate_roemer()</p>\n\n<p>This function inputs 3 nadir locations from a CS2 L1b track over Greenland\n(CS_LTA__SIR_LRM_1B_20200930T235609_20200930T235758_E001.nc) and checks that the\ncalculated POCA location is as expected when compared to those calculated by\nCryoTEMPO Baseline-D.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.geolocation.tests.test_geolocate_roemer_sar", "modulename": "cpom.altimetry.geolocation.tests.test_geolocate_roemer_sar", "kind": "module", "doc": "<p>cpom.altimetry.geolocation.tests.test_geolocate_roemer_sar.py</p>\n\n<h1 id=\"pytest-functions-for-geolocate_roemer_sarpy\">pytest functions for geolocate_roemer_sar.py</h1>\n"}, {"fullname": "cpom.altimetry.geolocation.tests.test_geolocate_roemer_sar.log", "modulename": "cpom.altimetry.geolocation.tests.test_geolocate_roemer_sar", "qualname": "log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger cpom.altimetry.geolocation.tests.test_geolocate_roemer_sar (WARNING)&gt;"}, {"fullname": "cpom.altimetry.geolocation.tests.test_geolocate_roemer_sar.pytestmark", "modulename": "cpom.altimetry.geolocation.tests.test_geolocate_roemer_sar", "qualname": "pytestmark", "kind": "variable", "doc": "<p></p>\n", "default_value": "MarkDecorator(mark=Mark(name=&#x27;requires_external_data&#x27;, args=(), kwargs={}))"}, {"fullname": "cpom.altimetry.geolocation.tests.test_geolocate_roemer_sar.test_geolocate_roemer_sar", "modulename": "cpom.altimetry.geolocation.tests.test_geolocate_roemer_sar", "qualname": "test_geolocate_roemer_sar", "kind": "function", "doc": "<p>pytest function for geolocate_roemer_sar()</p>\n\n<p>This function inputs 3 nadir locations from a CS2 L1b track over Greenland\n(CS_LTA__SIR_LRM_1B_20200930T235609_20200930T235758_E001.nc) and checks that the\ncalculated POCA location is as expected when compared to those calculated by\nCryoTEMPO Baseline-D.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.geolocation.tests.test_get_heading", "modulename": "cpom.altimetry.geolocation.tests.test_get_heading", "kind": "module", "doc": "<p>pytest of cpom.altimetry.geolocation.get_heading.py</p>\n"}, {"fullname": "cpom.altimetry.geolocation.tests.test_get_heading.test_get_heading", "modulename": "cpom.altimetry.geolocation.tests.test_get_heading", "qualname": "test_get_heading", "kind": "function", "doc": "<p>test get_heading() function</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.missions", "modulename": "cpom.altimetry.missions", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "cpom.altimetry.projects", "modulename": "cpom.altimetry.projects", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "cpom.altimetry.projects.cryotempo_li", "modulename": "cpom.altimetry.projects.cryotempo_li", "kind": "module", "doc": "<h1 id=\"cryotempo-land-ice-project\">CryoTEMPO Land Ice Project</h1>\n"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty", "kind": "module", "doc": "<h1 id=\"uncertainty-code-for-cryotempo-li\">Uncertainty code for CryoTEMPO LI</h1>\n"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_bilinear_fit", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_bilinear_fit", "kind": "module", "doc": "<p>Converts 2d uncertainty table to a bilinear model fit</p>\n"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_bilinear_fit.load_table_from_pickle", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_bilinear_fit", "qualname": "load_table_from_pickle", "kind": "function", "doc": "<p>Load the binned table from a Pickle file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_bilinear_fit.save_table_as_pickle", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_bilinear_fit", "qualname": "save_table_as_pickle", "kind": "function", "doc": "<p>Save the binned table as a Pickle file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>binned_table (pd.DataFrame):</strong>  The binned median absolute elevation difference table.</li>\n<li><strong>filename (str):</strong>  The path to the file where the table will be saved.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">binned_table</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_bilinear_fit.main", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_bilinear_fit", "qualname": "main", "kind": "function", "doc": "<p>main function for tool</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty", "kind": "module", "doc": "<p>cryotempo_2d_uncertainty</p>\n\n<p>Purpose: Calculate a 2D uncertainty table using  slope &amp; roughness bins\nat 0.1 degree steps from 0 to 2 degrees, and m</p>\n\n<p>Slope &amp; Roughness interpolated from\nAIS:\nSlopes(\"rema_100m_900ws_slopes_zarr\") or Slopes(\"cpom_ant_2018_1km_slopes\")\nRoughness(\"rema_100m_900ws_roughness_zarr\")\nGrn:\nSlopes(\"arcticdem_100m_900ws_slopes_zarr\")\nRoughness(\"arcticdem_100m_900ws_roughness_zarr\")</p>\n\n<p>Input is dh values, lat, lon from CS2-IS2 differences npz files, for example:\n[cs2_minus_is2_gt2lgt2r_p2p_diffs_antarctica_icesheets.npz\n[cs2_minus_is2_gt2lgt2r_p2p_diffs_greenland.npz</p>\n\n<p>example usage: \npython cryotempo_2d_uncertainty.py -a -m median     -dh_file ~/downloads/cs2_minus_is2_gt2lgt2r_p2p_diffs_antarctica_icesheets.npz\npython cryotempo_2d_uncertainty.py -g -m median     -dh_file ~/downloads/cs2_minus_is2_gt2lgt2r_p2p_diffs_greenland.npz</p>\n"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty.calculate_binned_median", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty", "qualname": "calculate_binned_median", "kind": "function", "doc": "<p>Calculate the median absolute elevation differences within slope and roughness bins.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>delta_elevation (np.ndarray):</strong>  Array of elevation differences between\ntwo measurement techniques.</li>\n<li><strong>slope (np.ndarray):</strong>  Array of surface slopes in meters.</li>\n<li><strong>roughness (np.ndarray):</strong>  Array of surface roughness values in meters.</li>\n<li><strong>slope_bins (np.ndarray):</strong>  Bins to categorize slope values.</li>\n<li><strong>roughness_bins (np.ndarray):</strong>  Bins to categorize roughness values.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>pd.DataFrame: A pivot table where rows correspond to slope bins, columns to roughness bins,\n                and values to the median absolute elevation difference within each bin.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">delta_elevation</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">slope</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">roughness</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">slope_bins</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">roughness_bins</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty.calculate_binned_mad", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty", "qualname": "calculate_binned_mad", "kind": "function", "doc": "<p>Calculate the median absolute deviation (MAD) of elevation differences within slope\n  and roughness bins.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>delta_elevation (np.ndarray):</strong>  Array of elevation differences between two measurement\ntechniques.</li>\n<li><strong>slope (np.ndarray):</strong>  Array of surface slopes in meters.</li>\n<li><strong>roughness (np.ndarray):</strong>  Array of surface roughness values in meters.</li>\n<li><strong>slope_bins (np.ndarray):</strong>  Bins to categorize slope values.</li>\n<li><strong>roughness_bins (np.ndarray):</strong>  Bins to categorize roughness values.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>pd.DataFrame: A pivot table where rows correspond to slope bins, columns to roughness bins,\n                and values to the MAD of the elevation differences within each bin.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">delta_elevation</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">slope</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">roughness</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">slope_bins</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">roughness_bins</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty.interpolate_missing_values_with_nearest_neighbour", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty", "qualname": "interpolate_missing_values_with_nearest_neighbour", "kind": "function", "doc": "<p>Interpolate missing values in the binned median table using bilinear and\nnearest-neighbor interpolation.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>binned_median_pivot (pd.DataFrame):</strong>  A pivot table of binned median absolute</li>\n<li>elevation differences.</li>\n<li><strong>slope_bins (np.ndarray):</strong>  Bins to categorize slope values.</li>\n<li><strong>roughness_bins (np.ndarray):</strong>  Bins to categorize roughness values.</li>\n<li><strong>secondary_fill (bool):</strong>  perform a second fill</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>pd.DataFrame: The pivot table with missing values interpolated.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">binned_median_pivot</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">slope_bins</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">roughness_bins</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">secondary_fill</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty.get_binned_values", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty", "qualname": "get_binned_values", "kind": "function", "doc": "<p>Retrieve the median absolute elevation difference for arrays of slope and roughness values.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>slope_values (np.ndarray):</strong>  Array of slope values for which to retrieve median differences.</li>\n<li><strong>roughness_values (np.ndarray):</strong>  Array of roughness values for which to retrieve\nmedian differences.</li>\n<li><strong>binned_table (pd.DataFrame):</strong>  A pivot table of binned median absolute elevation differences.</li>\n<li><strong>slope_bins (np.ndarray):</strong>  Bins to categorize slope values.</li>\n<li><strong>roughness_bins (np.ndarray):</strong>  Bins to categorize roughness values.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: An array of median absolute elevation differences corresponding to the\n              input slope and roughness pairs.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">slope_values</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">roughness_values</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">binned_table</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">slope_bins</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">roughness_bins</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty.calc_2d_uncertainty_table", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty", "qualname": "calc_2d_uncertainty_table", "kind": "function", "doc": "<p>Main function to calculate the 2D uncertainty table with interpolated missing values.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>delta_elevation (np.ndarray):</strong>  Array of elevation differences between two\nmeasurement techniques.</li>\n<li><strong>slope (np.ndarray):</strong>  Array of surface slopes in meters.</li>\n<li><strong>roughness (np.ndarray):</strong>  Array of surface roughness values in meters.</li>\n<li><strong>method (str):</strong>  Method to calculate the uncertainty ('median' or 'mad'). Default is 'median'</li>\n<li><strong>fill (bool):</strong>  Whether to fill missing values using bilinear interpolation.</li>\n<li><strong>secondary_fill (bool):</strong>  Whether to use nearest neighbor fill if bilinear\ninterpolation leaves NaNs.</li>\n<li><strong>slope_bins (np.ndarray):</strong>  Bins to categorize slope values.</li>\n<li><strong>roughness_bins (np.ndarray):</strong>  Bins to categorize roughness values.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>pd.DataFrame: A pivot table where rows correspond to slope bins, columns to roughness bins,\n                and values to the interpolated uncertainty metric within each bin.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">delta_elevation</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">slope</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">roughness</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">slope_bins</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">roughness_bins</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;median&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">secondary_fill</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty.save_table_as_pickle", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty", "qualname": "save_table_as_pickle", "kind": "function", "doc": "<p>Save the binned table as a Pickle file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>binned_table (pd.DataFrame):</strong>  The binned median absolute elevation difference table.</li>\n<li><strong>filename (str):</strong>  The path to the file where the table will be saved.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">binned_table</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty.load_table_from_pickle", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty", "qualname": "load_table_from_pickle", "kind": "function", "doc": "<p>Load the binned table from a Pickle file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filename (str):</strong>  The path to the file from which the table will be loaded.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>pd.DataFrame: The binned median absolute elevation difference table.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty.main", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.cryotempo_2d_uncertainty", "qualname": "main", "kind": "function", "doc": "<p>main function for command line tool</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.plot_2d_uncertainty_map", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.plot_2d_uncertainty_map", "kind": "module", "doc": "<p>Plot an Antarctic or Greenland map of 2d uncertainty using the \n2d uncertainty LUT, slope and roughness, at a grid of lat/lon points</p>\n"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.plot_2d_uncertainty_map.slope_bins", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.plot_2d_uncertainty_map", "qualname": "slope_bins", "kind": "variable", "doc": "<p></p>\n", "default_value": "array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. , 1.1, 1.2,\n       1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2. ])"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.plot_2d_uncertainty_map.roughness_bins", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.plot_2d_uncertainty_map", "qualname": "roughness_bins", "kind": "variable", "doc": "<p></p>\n", "default_value": "array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. , 1.1, 1.2,\n       1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2. ])"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.plot_2d_uncertainty_map.load_table_from_pickle", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.plot_2d_uncertainty_map", "qualname": "load_table_from_pickle", "kind": "function", "doc": "<p>Load the binned table from a Pickle file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filename (str):</strong>  The path to the file from which the table will be loaded.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>pd.DataFrame: The binned median absolute elevation difference table.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.plot_2d_uncertainty_map.get_binned_values", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.plot_2d_uncertainty_map", "qualname": "get_binned_values", "kind": "function", "doc": "<p>Retrieve the median absolute elevation difference for arrays of slope and roughness values.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>slope_values (np.ndarray):</strong>  Array of slope values for which to retrieve median differences.</li>\n<li><strong>roughness_values (np.ndarray):</strong>  Array of roughness values for which to retrieve\nmedian differences.</li>\n<li><strong>binned_table (pd.DataFrame):</strong>  A pivot table of binned median absolute elevation differences.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: An array of median absolute elevation differences corresponding to the input\n              slope and roughness pairs.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">slope_values</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">roughness_values</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">binned_table</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.projects.cryotempo_li.uncertainty.plot_2d_uncertainty_map.main", "modulename": "cpom.altimetry.projects.cryotempo_li.uncertainty.plot_2d_uncertainty_map", "qualname": "main", "kind": "function", "doc": "<p>main function for tool</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.projects.eocis", "modulename": "cpom.altimetry.projects.eocis", "kind": "module", "doc": "<h1 id=\"cpomaltimetryprojectseocis\">cpom.altimetry.projects.eocis</h1>\n\n<p>Code related to the UK EOCIS project</p>\n"}, {"fullname": "cpom.altimetry.projects.eocis.landice", "modulename": "cpom.altimetry.projects.eocis.landice", "kind": "module", "doc": "<h1 id=\"cpomaltimetryprojectseocislandice\">cpom.altimetry.projects.eocis.landice</h1>\n\n<p>Code related to the UK EOCIS project, <strong>land ice</strong></p>\n"}, {"fullname": "cpom.altimetry.projects.eocis.landice.plot_dhdt", "modulename": "cpom.altimetry.projects.eocis.landice.plot_dhdt", "kind": "module", "doc": "<p>cpom.altimetry.projects.eocis.landice.plot_dhdt.py</p>\n\n<h1 id=\"purpose\">Purpose</h1>\n\n<p>Plot EOCIS dh/dt products</p>\n\n<h1 id=\"example\">Example</h1>\n\n<p>plot_dhdt.py -f     ~/Sites/landice_portal/test_data/        EOCIS-AIS-L3C-SEC-MULTIMISSION-5KM-5YEAR-MEANS-199101-199601-fv1.nc           -o /tmp</p>\n"}, {"fullname": "cpom.altimetry.projects.eocis.landice.plot_dhdt.main", "modulename": "cpom.altimetry.projects.eocis.landice.plot_dhdt", "qualname": "main", "kind": "function", "doc": "<p>main function for tool</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools", "modulename": "cpom.altimetry.tools", "kind": "module", "doc": "<h1 id=\"tools\">Tools</h1>\n\n<p>The following command line tools are available:</p>\n\n<h2 id=\"plot_mappy\">plot_map.py</h2>\n\n<p>Plot variables from NetCDF file(s) on a selectable cryosphere map.</p>\n\n<p>Further details at <code>cpom.altimetry.tools.plot_map</code></p>\n\n<h2 id=\"find_files_in_areapy\">find_files_in_area.py</h2>\n\n<p>Tool to to find files within a specified directory (and default is to search recursive sub-dirs) \nthat contain lat/lon locations within a CPOM Area's\nmask or within a radius (km) of a specified lat,lon point. Optionally plot tracks \nin area map. </p>\n\n<p>Further details at <code>cpom.altimetry.tools.find_files_in_area</code></p>\n"}, {"fullname": "cpom.altimetry.tools.find_files_in_area", "modulename": "cpom.altimetry.tools.find_files_in_area", "kind": "module", "doc": "<p>cpom.altimetry.tools.find_files_in_area.py</p>\n\n<h1 id=\"purpose\">Purpose</h1>\n\n<p>Tool to to find files within a specified directory (and default is to search recursive sub-dirs) \nthat contain lat/lon locations within a CPOM Area's\nmask or within a radius (km) of a specified lat,lon point. Optionally plot tracks \nin area map. </p>\n\n<h1 id=\"examples\">Examples</h1>\n\n<p>For full list of command line options: </p>\n\n<pre><code>find_files_in_area.py -h\n</code></pre>\n\n<p>example of finding a list of files in /some_dir and its sub-directories that\npass over the Greenland ice sheet, printing just the list of files: </p>\n\n<pre><code>find_files_in_area.py -d /some_dir -a greenland_is -fo\n</code></pre>\n\n<p>example of finding a list of files in /some_dir and its sub-directories that\npass over the Antarctica ice sheet, also plotting the first 20 found files\non a map: </p>\n\n<pre><code>find_files_in_area.py -d /some_dir -a antarctica_is -p\n</code></pre>\n"}, {"fullname": "cpom.altimetry.tools.find_files_in_area.RED", "modulename": "cpom.altimetry.tools.find_files_in_area", "qualname": "RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\x1b[0;31m&#x27;"}, {"fullname": "cpom.altimetry.tools.find_files_in_area.BLUE", "modulename": "cpom.altimetry.tools.find_files_in_area", "qualname": "BLUE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\x1b[0;34m&#x27;"}, {"fullname": "cpom.altimetry.tools.find_files_in_area.BLACK_BOLD", "modulename": "cpom.altimetry.tools.find_files_in_area", "qualname": "BLACK_BOLD", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\x1b[1;30m&#x27;"}, {"fullname": "cpom.altimetry.tools.find_files_in_area.ORANGE", "modulename": "cpom.altimetry.tools.find_files_in_area", "qualname": "ORANGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\x1b[38;5;208m&#x27;"}, {"fullname": "cpom.altimetry.tools.find_files_in_area.NC", "modulename": "cpom.altimetry.tools.find_files_in_area", "qualname": "NC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\x1b[0m&#x27;"}, {"fullname": "cpom.altimetry.tools.find_files_in_area.find_nc_files", "modulename": "cpom.altimetry.tools.find_files_in_area", "qualname": "find_nc_files", "kind": "function", "doc": "<p>Find .nc or .NC files in the specified directory.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>directory (str):</strong>  The directory to search for .nc files.</li>\n<li><strong>recursive (bool):</strong>  If True, search recursively in subdirectories.</li>\n<li><strong>max_files (int|None):</strong>  if not None, limit number of files read to this number</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[str]: A list of found .nc or .NC files with their full paths.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">recursive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">max_files</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">include_string</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.find_files_in_area.get_default_latlon_names", "modulename": "cpom.altimetry.tools.find_files_in_area", "qualname": "get_default_latlon_names", "kind": "function", "doc": "<p>Get a default latitude and longitude names to plot from filename</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filename (str):</strong>  path of NetCDF file</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>(str,str) : latname, lonname</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.find_files_in_area.get_variable", "modulename": "cpom.altimetry.tools.find_files_in_area", "qualname": "get_variable", "kind": "function", "doc": "<p>Retrieve variable from NetCDF file, handling groups if necessary.</p>\n\n<p>This function navigates through groups in a NetCDF file to retrieve the specified variable.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>nc (Dataset):</strong>  The NetCDF dataset object.</li>\n<li><strong>nc_var_path (str):</strong>  The path to the variable within the NetCDF file,\nwith groups separated by '/'.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Variable: The retrieved NetCDF variable.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SystemExit:</strong>  If the variable or group is not found in the NetCDF file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">nc</span><span class=\"p\">:</span> <span class=\"n\">netCDF4</span><span class=\"o\">.</span><span class=\"n\">_netCDF4</span><span class=\"o\">.</span><span class=\"n\">Dataset</span>,</span><span class=\"param\">\t<span class=\"n\">nc_var_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">netCDF4</span><span class=\"o\">.</span><span class=\"n\">_netCDF4</span><span class=\"o\">.</span><span class=\"n\">Variable</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.find_files_in_area.haversine", "modulename": "cpom.altimetry.tools.find_files_in_area", "qualname": "haversine", "kind": "function", "doc": "<p>Calculate the great-circle distance between two points on the Earth.</p>\n\n<p>Parameters:\nlat1, lon1: Latitude and longitude of point 1 in degrees.\nlat2, lon2: Latitude and longitude of point 2 in degrees.</p>\n\n<p>Returns:\nDistance in meters.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lat1</span>, </span><span class=\"param\"><span class=\"n\">lon1</span>, </span><span class=\"param\"><span class=\"n\">lat2</span>, </span><span class=\"param\"><span class=\"n\">lon2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.find_files_in_area.is_within_distance", "modulename": "cpom.altimetry.tools.find_files_in_area", "qualname": "is_within_distance", "kind": "function", "doc": "<p>Return True if any of (lats, lons) are within distance from (target_lat, target_lon),\nwhere distance is in meters, else return False.</p>\n\n<p>Parameters:\nlats (np.ndarray): Array of latitudes.\nlons (np.ndarray): Array of longitudes.\ntarget_lat (float): Target latitude.\ntarget_lon (float): Target longitude.\ndistance (float): Distance threshold in km.</p>\n\n<p>Returns:\nbool: True if any point is within the distance, False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">target_lat</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">target_lon</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">distance</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.find_files_in_area.main", "modulename": "cpom.altimetry.tools.find_files_in_area", "qualname": "main", "kind": "function", "doc": "<p>main function of tool</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_3dmap", "modulename": "cpom.altimetry.tools.plot_3dmap", "kind": "module", "doc": "<p>cpom.altimetry.tools.plot_3dmap.py</p>\n\n<h1 id=\"purpose\">Purpose</h1>\n\n<p>Tool to display (lat,lon,values) from one or more generic NetCDF files (containing latitude,\nlongitude and value data of any sort and naming) on an interactive  3d DEM map \nin a browser window. Will optionally recursively search a directory for netcdf files (optionally\nmatching a pattern). It is assumed that netcdf files matched are of the same type.</p>\n\n<p><strong>Note</strong> : this tool requires a graphics card or GPU on the system it is run on\nand displays within the current default browser. So, will not work on headless\nservers with no graphics cards or GPUs installed. Tested on a MacbookPro.</p>\n\n<p>For full list of command line args:</p>\n\n<p><code>plot_3dmap.py --help</code></p>\n\n<p>Most settings are configurable from the tool using the command line arguments, although the tool\nwill try and automatically identify default parameters and select an area to plot \n(from contained lat/lon values) from most altimetry formats. If not you can choose these from the\ncommand line.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<p>List all available 3D area definitions (ie the areas you can select to plot your data on):</p>\n\n<p><code>plot_3dmap.py --list_areas</code></p>\n\n<p>Plot a parameter <strong>elevation</strong> from a CryTEMPO netcdf file, and display in area \ndefinition <strong>vostok</strong>. \nUse colormap RdYlBu to display elevation values between 3400m and 3500m range. </p>\n\n<p><code>plot_3dmap.py -f CS_OFFL_SIR_TDP_LI_ANTARC_20200911T023800_20200911T024631_18_12333_D001.nc     -a vostok -p elevation -c cmap:RdYlBu -pr 3400:3500</code></p>\n\n<p>Plot parameters <strong>elevation</strong> and <strong>backscatter</strong> from a CryTEMPO netcdf file, and display in area \ndefinition <strong>vostok</strong>. \nUse colormap RdYlBu to display <strong>elevation</strong> values between 3400m and 3500m range. \nUse colormap Viridis to display <strong>backscatter</strong> values between default ranges. \nRaise both parameters above the surface by 1m and 50m respectively\nSet the point size to be 6 and 10 respectively</p>\n\n<p><code>plot_3dmap.py -f CS_OFFL_SIR_TDP_LI_ANTARC_20200911T023800_20200911T024631_18_12333_D001.nc     -a vostok -p elevation -c cmap:RdYlBu,cmap:viridis -pr 3400:3500, -re 1,50 -ps 6,10</code></p>\n\n<h2 id=\"issues\">Issues</h2>\n\n<p>Odd display issues with some DEM Zarr resolutions. For example using\n'rema_gapless_100m_zarr' with area vostok_600km. Seems to display ok when\nno parameters loaded, but incorrectly with them. 'rema_ant_1km_zarr' works\nfine. Needs further investigation.</p>\n"}, {"fullname": "cpom.altimetry.tools.plot_3dmap.RED", "modulename": "cpom.altimetry.tools.plot_3dmap", "qualname": "RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\x1b[0;31m&#x27;"}, {"fullname": "cpom.altimetry.tools.plot_3dmap.BLUE", "modulename": "cpom.altimetry.tools.plot_3dmap", "qualname": "BLUE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\x1b[0;34m&#x27;"}, {"fullname": "cpom.altimetry.tools.plot_3dmap.BLACK_BOLD", "modulename": "cpom.altimetry.tools.plot_3dmap", "qualname": "BLACK_BOLD", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\x1b[1;30m&#x27;"}, {"fullname": "cpom.altimetry.tools.plot_3dmap.ORANGE", "modulename": "cpom.altimetry.tools.plot_3dmap", "qualname": "ORANGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\x1b[38;5;208m&#x27;"}, {"fullname": "cpom.altimetry.tools.plot_3dmap.NC", "modulename": "cpom.altimetry.tools.plot_3dmap", "qualname": "NC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\x1b[0m&#x27;"}, {"fullname": "cpom.altimetry.tools.plot_3dmap.setup_logging", "modulename": "cpom.altimetry.tools.plot_3dmap", "qualname": "setup_logging", "kind": "function", "doc": "<p>Setup logging handlers</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_3dmap.get_variable", "modulename": "cpom.altimetry.tools.plot_3dmap", "qualname": "get_variable", "kind": "function", "doc": "<p>Retrieve variable from NetCDF file, handling groups if necessary.</p>\n\n<p>This function navigates through groups in a NetCDF file to retrieve the specified variable.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>nc (Dataset):</strong>  The NetCDF dataset object.</li>\n<li><strong>nc_var_path (str):</strong>  The path to the variable within the NetCDF file,\nwith groups separated by '/'.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Variable: The retrieved NetCDF variable.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SystemExit:</strong>  If the variable or group is not found in the NetCDF file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">nc</span><span class=\"p\">:</span> <span class=\"n\">netCDF4</span><span class=\"o\">.</span><span class=\"n\">_netCDF4</span><span class=\"o\">.</span><span class=\"n\">Dataset</span>,</span><span class=\"param\">\t<span class=\"n\">nc_var_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">netCDF4</span><span class=\"o\">.</span><span class=\"n\">_netCDF4</span><span class=\"o\">.</span><span class=\"n\">Variable</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_3dmap.get_default_param", "modulename": "cpom.altimetry.tools.plot_3dmap", "qualname": "get_default_param", "kind": "function", "doc": "<p>Get a default parameter to plot from known file types</p>\n\n<p>Supported types:\nCryo-TEMPO Land Ice: file name starts with CS_OFFL_SIR_TDP_LI\nCryo-TEMPO Sea Ice: file name starts with CS_OFFL_SIR_TDP_SI</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filename (str):</strong>  path of NetCDF file</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str,str: parameter name or '' if not found,units or '' if not found</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_3dmap.get_default_latlon_names", "modulename": "cpom.altimetry.tools.plot_3dmap", "qualname": "get_default_latlon_names", "kind": "function", "doc": "<p>Get a default latitude and longitude names to plot from filename</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>filename (str):</strong>  path of NetCDF file</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>(str,str) : latname, lonname or (\"\",\"\") if not found</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_3dmap.get_default_area", "modulename": "cpom.altimetry.tools.plot_3dmap", "qualname": "get_default_area", "kind": "function", "doc": "<p>select a default area definition based on latitude</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>lat (float):</strong>  latitude in degs</li>\n<li><strong>filename (str):</strong>  file name</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: cpom area definition name</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lat</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_3dmap.find_nc_files", "modulename": "cpom.altimetry.tools.plot_3dmap", "qualname": "find_nc_files", "kind": "function", "doc": "<p>Find .nc or .NC files in the specified directory.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>directory (str):</strong>  The directory to search for .nc files.</li>\n<li><strong>recursive (bool):</strong>  If True, search recursively in subdirectories.</li>\n<li><strong>max_files (int|None):</strong>  if not None, limit number of files read to this number</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[str]: A list of found .nc or .NC files with their full paths.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">recursive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">max_files</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">include_string</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_3dmap.main", "modulename": "cpom.altimetry.tools.plot_3dmap", "qualname": "main", "kind": "function", "doc": "<p>main function of 3d plotting tool</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_dhdt_from_npz", "modulename": "cpom.altimetry.tools.plot_dhdt_from_npz", "kind": "module", "doc": "<p>plot dhdt.npz files from CPOM sec processing (not a finished tool)</p>\n\n<p>using black background\nto highlight missing areas of the grid</p>\n\n<p>Note, just supports greenland and antarctica grid areas at the moment.\nDoesn't read the dhdt.info file</p>\n\n<p>Need to edit dataset name string, plot range</p>\n"}, {"fullname": "cpom.altimetry.tools.plot_dhdt_from_npz.main", "modulename": "cpom.altimetry.tools.plot_dhdt_from_npz", "qualname": "main", "kind": "function", "doc": "<p>main function of tool</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_map", "modulename": "cpom.altimetry.tools.plot_map", "kind": "module", "doc": "<p>Tool to plot variables (including flags) from NetCDF file(s) on a selectable cryosphere map</p>\n\n<p>For full list of command line args:</p>\n\n<p><code>plot_map.py --help</code></p>\n\n<p>Most settings are configurable from the tool using the command line arguments, although the tool\nwill try and automatically identify default parameters and select an area to plot \n(from contained lat/lon values) from most altimetry formats. If not you can choose these from the\ncommand line.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<p>List all available area definitions (ie the areas you can select to plot your data on):</p>\n\n<p><code>plot_map.py --list_areas</code></p>\n\n<p>Plot a parameter <strong>elevation</strong> from a CryTEMPO netcdf file, and display in area \ndefinition <strong>antarctica_hs_is</strong> which is an Antarctic map with hillshading and a \ngrounded icesheet mask:</p>\n\n<p><code>plot_map.py -f  /cpdata/SATS/RA/CRY/Cryo-TEMPO/BASELINE-B/001/LAND_ICE/ANTARC/2010/07/CS_OFFL_SIR_TDP_LI_ANTARC_20100717T141004_20100717T141229_01_02644_B001.nc -p elevation -a antarctica_hs_is</code></p>\n\n<p><img src=\"/cpom_software2/images/plot_map_example1.png\" alt=\"my image\" title=\"my image\" /></p>\n\n<p>Plot all the netcdf files in the given directory. Automatically select the default\nparameter and area to plot.</p>\n\n<p><code>plot_map.py -d /cpdata/SATS/RA/CRY/Cryo-TEMPO/BASELINE-B/001/LAND_ICE/ANTARC/2010/07</code></p>\n\n<p><img src=\"/cpom_software2/images/plot_map_example2.png\" alt=\"my image\" title=\"my image\" /></p>\n\n<p>Plot a simulated grid of values at 0.01 deg separation over Lake Vostok, with\npoint size 1.0 and colormap set to viridis</p>\n\n<p><code>plot_map.py -a vostok -s 0.01 -ps 1 --cmap viridis</code></p>\n\n<p><img src=\"/cpom_software2/images/plot_map_example3.png\" alt=\"my image\" title=\"my image\" /></p>\n\n<p>Plot the instrument_mode parameter files in a named directory, and use the flag parameter settings\nshown to specify flag values, names and colours:</p>\n\n<p><code>plot_map.py -d /cpdata/SATS/RA/CRY/Cryo-TEMPO/BASELINE-B/001/LAND_ICE/ANTARC/2010/07     -p instrument_mode     --flag_params 1:LRM:blue/2:SAR:pink/3:SIN:red</code></p>\n\n<p><img src=\"/cpom_software2/images/plot_map_example4.png\" alt=\"my image\" title=\"my image\" /></p>\n"}, {"fullname": "cpom.altimetry.tools.plot_map.main", "modulename": "cpom.altimetry.tools.plot_map", "qualname": "main", "kind": "function", "doc": "<p>main function of tool</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_waveforms", "modulename": "cpom.altimetry.tools.plot_waveforms", "kind": "module", "doc": "<p>cpom.altimetry.tools.plot_waveforms.py</p>\n\n<h1 id=\"tool-to-plot-altimetry-waveforms-directly-supports\">Tool to plot altimetry waveforms. Directly supports:</h1>\n\n<p>CRISTAL L1b\nCS2 L1b</p>\n\n<ul>\n<li>any NetCDF file that has selectable latitude, longitude and waveform parameters</li>\n</ul>\n"}, {"fullname": "cpom.altimetry.tools.plot_waveforms.get_scaled_font_size", "modulename": "cpom.altimetry.tools.plot_waveforms", "qualname": "get_scaled_font_size", "kind": "function", "doc": "<p>Calculate a dynamically scaled font size based on the length of the file name.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>file_name (str):</strong>  The file name to scale the font size for.</li>\n<li><strong>max_len (int, optional):</strong>  The maximum length for scaling. Defaults to 50.</li>\n<li><strong>base_size (int, optional):</strong>  The base font size. Defaults to 16.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: The calculated font size.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">max_len</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>, </span><span class=\"param\"><span class=\"n\">base_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_waveforms.get_projection_and_extent", "modulename": "cpom.altimetry.tools.plot_waveforms", "qualname": "get_projection_and_extent", "kind": "function", "doc": "<p>Determine the appropriate Cartopy projection and extent based on latitude.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>lat (float):</strong>  The latitude to determine the projection for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple[ccrs.Projection, list[float] | None]: The Cartopy projection and the extent.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lat</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">cartopy</span><span class=\"o\">.</span><span class=\"n\">crs</span><span class=\"o\">.</span><span class=\"n\">Projection</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_waveforms.update_map", "modulename": "cpom.altimetry.tools.plot_waveforms", "qualname": "update_map", "kind": "function", "doc": "<p>Update the map with the track and the current location.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ax (plt.Axes):</strong>  The map axis to update.</li>\n<li><strong>current_lat (float):</strong>  The current latitude of the waveform.</li>\n<li><strong>current_lon (float):</strong>  The current longitude of the waveform.</li>\n<li><strong>latitudes (np.ndarray):</strong>  Array of latitude values for the track.</li>\n<li><strong>longitudes (np.ndarray):</strong>  Array of longitude values for the track.</li>\n<li><strong>extent (list[float] | None, optional):</strong>  The extent for the map projection. Defaults to None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ax</span><span class=\"p\">:</span> <span class=\"n\">cartopy</span><span class=\"o\">.</span><span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">geoaxes</span><span class=\"o\">.</span><span class=\"n\">GeoAxes</span>,</span><span class=\"param\">\t<span class=\"n\">current_lat</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">current_lon</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">latitudes</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">longitudes</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">extent</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_waveforms.update_plot", "modulename": "cpom.altimetry.tools.plot_waveforms", "qualname": "update_plot", "kind": "function", "doc": "<p>Update the waveform and map plots.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>index (int):</strong>  The current index of the waveform.</li>\n<li><strong>ax_waveform (plt.Axes):</strong>  The waveform plot axis.</li>\n<li><strong>ax_map (plt.Axes):</strong>  The map plot axis.</li>\n<li><strong>waveforms (np.ndarray):</strong>  Array of waveform data.</li>\n<li><strong>latitudes (np.ndarray):</strong>  Array of latitude values.</li>\n<li><strong>longitudes (np.ndarray):</strong>  Array of longitude values.</li>\n<li><strong>file_name (str):</strong>  The name of the file being displayed.</li>\n<li><strong>wf_name (str):</strong>  name of the waveform parameter being plotted</li>\n<li><strong>fig (plt.Figure):</strong>  The figure object for the plot.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">ax_waveform</span><span class=\"p\">:</span> <span class=\"n\">matplotlib</span><span class=\"o\">.</span><span class=\"n\">axes</span><span class=\"o\">.</span><span class=\"n\">_axes</span><span class=\"o\">.</span><span class=\"n\">Axes</span>,</span><span class=\"param\">\t<span class=\"n\">ax_map</span><span class=\"p\">:</span> <span class=\"n\">cartopy</span><span class=\"o\">.</span><span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">geoaxes</span><span class=\"o\">.</span><span class=\"n\">GeoAxes</span>,</span><span class=\"param\">\t<span class=\"n\">waveforms</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">latitudes</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">longitudes</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">wf_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">fig</span><span class=\"p\">:</span> <span class=\"n\">matplotlib</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"o\">.</span><span class=\"n\">Figure</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_waveforms.get_default_parameter_names", "modulename": "cpom.altimetry.tools.plot_waveforms", "qualname": "get_default_parameter_names", "kind": "function", "doc": "<p>Get default parameter names for specific file types if not provided.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>file_name (str):</strong>  The name of the file being processed.</li>\n<li><strong>waveform_parameter_name (str | None):</strong>  The waveform parameter name.</li>\n<li><strong>latname (str | None):</strong>  The latitude parameter name.</li>\n<li><strong>lonname (str | None):</strong>  The longitude parameter name.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple[str, str, str,str]: The waveform parameter name,\n  latitude name,longitude name.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">waveform_parameter_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">latname</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">lonname</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_waveforms.get_scale_factor", "modulename": "cpom.altimetry.tools.plot_waveforms", "qualname": "get_scale_factor", "kind": "function", "doc": "<p>retrieve an array of scale factors to convert waveform counts to Watts\nThis is mission dependant</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>nc (Dataset):</strong> netcdf dataset</li>\n<li><strong>file_name (str):</strong>  file name</li>\n<li><strong>wf_name (str):</strong>  name of waveform parameter</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">nc</span><span class=\"p\">:</span> <span class=\"n\">netCDF4</span><span class=\"o\">.</span><span class=\"n\">_netCDF4</span><span class=\"o\">.</span><span class=\"n\">Dataset</span>,</span><span class=\"param\">\t<span class=\"n\">file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">wf_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">waveforms</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_waveforms.get_variable", "modulename": "cpom.altimetry.tools.plot_waveforms", "qualname": "get_variable", "kind": "function", "doc": "<p>Retrieve variable from NetCDF file, handling groups if necessary.</p>\n\n<p>This function navigates through groups in a NetCDF file to retrieve the specified variable.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>nc (Dataset):</strong>  The NetCDF dataset object.</li>\n<li><strong>nc_var_path (str):</strong>  The path to the variable within the NetCDF file,\nwith groups separated by '/'.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Variable: The retrieved NetCDF variable.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>SystemExit:</strong>  If the variable or group is not found in the NetCDF file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">nc</span><span class=\"p\">:</span> <span class=\"n\">netCDF4</span><span class=\"o\">.</span><span class=\"n\">_netCDF4</span><span class=\"o\">.</span><span class=\"n\">Dataset</span>,</span><span class=\"param\">\t<span class=\"n\">nc_var_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">netCDF4</span><span class=\"o\">.</span><span class=\"n\">_netCDF4</span><span class=\"o\">.</span><span class=\"n\">Variable</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.plot_waveforms.main", "modulename": "cpom.altimetry.tools.plot_waveforms", "qualname": "main", "kind": "function", "doc": "<p>Main function to parse arguments and plot waveforms.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>args (list[str]):</strong>  List of command-line arguments passed to the script.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cmd_args</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.tests", "modulename": "cpom.altimetry.tools.tests", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "cpom.altimetry.tools.tests.test_find_files_in_area", "modulename": "cpom.altimetry.tools.tests.test_find_files_in_area", "kind": "module", "doc": "<p>pytest for cpom.altimetry.tools.find_files_in_area.py</p>\n"}, {"fullname": "cpom.altimetry.tools.tests.test_find_files_in_area.pytestmark", "modulename": "cpom.altimetry.tools.tests.test_find_files_in_area", "qualname": "pytestmark", "kind": "variable", "doc": "<p></p>\n", "default_value": "MarkDecorator(mark=Mark(name=&#x27;requires_external_data&#x27;, args=(), kwargs={}))"}, {"fullname": "cpom.altimetry.tools.tests.test_find_files_in_area.test_find_files_in_area", "modulename": "cpom.altimetry.tools.tests.test_find_files_in_area", "qualname": "test_find_files_in_area", "kind": "function", "doc": "<p>Test the <code>plot_map</code> function from <code>cpom.altimetry.tools.plot_map</code>\nwith multiple sets of arguments.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>capsys (pytest.CaptureFixture):</strong>  A pytest fixture to capture stdout and stderr.</li>\n<li>directory unique to the test.</li>\n<li><strong>test_args (list[str]):</strong>  A list of command-line arguments for the test.</li>\n<li><strong>expected_output (str):</strong>  The expected output to check for in the captured output.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If the expected output is not found in the captured output.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">capsys</span><span class=\"p\">:</span> <span class=\"n\">_pytest</span><span class=\"o\">.</span><span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">CaptureFixture</span>,</span><span class=\"param\">\t<span class=\"n\">test_args</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">expected_output</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.altimetry.tools.tests.test_plot_map", "modulename": "cpom.altimetry.tools.tests.test_plot_map", "kind": "module", "doc": "<p>pytest for cpom.altimetry.tools.plot_map.py</p>\n"}, {"fullname": "cpom.altimetry.tools.tests.test_plot_map.test_plot_map", "modulename": "cpom.altimetry.tools.tests.test_plot_map", "qualname": "test_plot_map", "kind": "function", "doc": "<p>Test the <code>plot_map</code> function from <code>cpom.altimetry.tools.plot_map</code>\nwith multiple sets of arguments.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>capsys (pytest.CaptureFixture):</strong>  A pytest fixture to capture stdout and stderr.</li>\n<li><strong>tmpdir (pytest.TempPathFactory):</strong>  A pytest fixture that provides a temporary</li>\n<li>directory unique to the test.</li>\n<li><strong>test_args (list[str]):</strong>  A list of command-line arguments for the test.</li>\n<li><strong>expected_output (str):</strong>  The expected output to check for in the captured output.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>AssertionError:</strong>  If the expected output is not found in the captured output.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">capsys</span><span class=\"p\">:</span> <span class=\"n\">_pytest</span><span class=\"o\">.</span><span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">CaptureFixture</span>,</span><span class=\"param\">\t<span class=\"n\">tmpdir</span><span class=\"p\">:</span> <span class=\"n\">_pytest</span><span class=\"o\">.</span><span class=\"n\">tmpdir</span><span class=\"o\">.</span><span class=\"n\">TempPathFactory</span>,</span><span class=\"param\">\t<span class=\"n\">test_args</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">expected_output</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas", "modulename": "cpom.areas", "kind": "module", "doc": "<p>cpom.areas</p>\n\n<h1 id=\"cpom-area-definitions-and-polarplot-class\">CPOM Area Definitions and Polarplot class</h1>\n\n<h2 id=\"definitions\">definitions</h2>\n\n<p>contain standard area definition files used by the Polarplot class and related tools \nsuch as plot_map.py. Each area definition is stored in a separate <area_name>.py file.</p>\n\n<h2 id=\"areaspy\">areas.py</h2>\n\n<p>contains code to handle the area definitions</p>\n\n<h2 id=\"area_plotpy\">area_plot.py</h2>\n\n<p>contains the Polarplot class. The main external function of the Polarplot class\nis <strong>plot_points()</strong>:</p>\n\n<p><code>cpom.areas.area_plot.Polarplot.plot_points</code></p>\n\n<p>The purpose of Polarplot('some_area_name').plot_points() is to plot latitude, longitude, \nand values on predefined area maps. plot_points() takes one or more dataset dictionaries as input, \ncontaining the lat,lon,values and associated parameters. For a full list of the data set options\nsee <code>cpom.areas.area_plot.Polarplot.plot_points</code>.</p>\n\n<h3 id=\"example-1-plot-two-data-sets-on-a-basic-map-of-antarctica\">Example 1 : plot two data sets on a basic map of Antarctica</h3>\n\n<p>The following example plots 2 data sets on a basic map of Antarctica. </p>\n\n<ul>\n<li>The first dataset has a valid range set which will only plots vals within this range.</li>\n<li>The second dataset is plotted using the viridis colormap \n(the first uses the default colormap).</li>\n</ul>\n\n<p><strong>Note</strong> that the ancillary plots (histograms, etc) only apply to the first data set plotted.\nThe top right map shows the locations of the invalid points (since we set a valid_range there\nare some points that have invalid values between 5 and 10).</p>\n\n<p>You can scale the size of the points plotted in the main and ancillary maps using\ndataset parameters. For example to make the point size larger you might use:\n (\"plot_size_scale_factor\":10, and \"minimap_val_scalefactor\": 10,). Default point size\n is 1.0. Note that it is not a linear scale, so some experimentation is required.</p>\n\n<pre><code>import numpy as np\nfrom cpom.areas.area_plot import Polarplot\n\ndataset1={\n    \"lats\": np.linspace(-80,-70,100), # example 100 latitude values between -80N and -70N\n    \"lons\": np.linspace(0,5,100),     # example 100 longitude values between 0 and 5 degs E.\n    \"vals\": np.linspace(0,10,100),    # example 100 data values between 0 and 10.\n    \"units\": 'm',\n    \"name\": 'test_param',\n    \"valid_range\": [0,5],\n}\n\ndataset2={\n    \"lats\": np.linspace(-80,-70,100),\n    \"lons\": np.linspace(20,25,100),\n    \"vals\": np.linspace(0,10,100),\n    \"name\": 'test_param',\n    \"cmap_name\": 'viridis',\n}\n\nPolarplot('antarctica').plot_points(dataset1,dataset2)\n\n</code></pre>\n\n<p><img src=\"/cpom_software2/images/plot_points_example1.jpg\" alt=\"my image\" title=\"my image\" /></p>\n\n<h3 id=\"example-2-map-only-no-histograms-hill-shaded-antarctic-map\">Example 2: Map only (no histograms), hill shaded Antarctic map</h3>\n\n<p>In this example we plot a single dataset, add the map_only=True option to plot_points() \nto remove the default histograms,\nand we change the map area definition name to antarctica_hs. antarctica_hs is\nan area definition that applies a hill shaded DEM background and adds some\nbathymetry to the ocean.</p>\n\n<pre><code>import numpy as np\nfrom cpom.areas.area_plot import Polarplot\n\ndataset1={\n    \"lats\": np.linspace(-80,-70,100), # example 100 latitude values between -80N and -70N\n    \"lons\": np.linspace(0,5,100),     # example 100 longitude values between 0 and 5 degs E.\n    \"vals\": np.linspace(0,10,100),    # example 100 data values between 0 and 10.\n    \"name\": 'test_param',\n    \"valid_range\": [0,5],\n}\n\nPolarplot('antarctica_hs').plot_points(dataset1,map_only=True)\n</code></pre>\n\n<p><img src=\"/cpom_software2/images/plot_points_example2.jpg\" alt=\"my image\" title=\"my image\" /></p>\n\n<h3 id=\"example-3-save-the-plot-to-a-file-tmpgreenlandpng\">Example 3: Save the plot to a file /tmp/greenland.png</h3>\n\n<p>In this case the plot of Greenland will not be displayed but will be saved to a png file.</p>\n\n<pre><code>import numpy as np\nfrom cpom.areas.area_plot import Polarplot\n\ndataset1={\n    \"lats\": np.linspace(80,50,100), # example 100 latitude values between -80N and -70N\n    \"lons\": np.linspace(300,340,100),     # example 100 longitude values between 0 and 5 degs E.\n    \"vals\": np.linspace(0,10,100),    # example 100 data values between 0 and 10.\n}\n\nPolarplot('greenland_hs').plot_points(dataset1,output_file='/tmp/greenland.png')\n</code></pre>\n\n<p><img src=\"/cpom_software2/images/plot_points_example3.jpg\" alt=\"my image\" title=\"my image\" /></p>\n"}, {"fullname": "cpom.areas.area_plot", "modulename": "cpom.areas.area_plot", "kind": "module", "doc": "<p>cpom.areas.area_plot.py\nclass to plot areas defined in cpom.areas.definitions</p>\n\n<p>To do reminder:</p>\n\n<p>TODO: grid support</p>\n"}, {"fullname": "cpom.areas.area_plot.log", "modulename": "cpom.areas.area_plot", "qualname": "log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger cpom.areas.area_plot (WARNING)&gt;"}, {"fullname": "cpom.areas.area_plot.get_unique_colors", "modulename": "cpom.areas.area_plot", "qualname": "get_unique_colors", "kind": "function", "doc": "<p>Get a list of n unique colors for plotting flag data (when no colors are\n   provided), as sampled from the tab20 or tab10 colormap.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>n (int):</strong>  Number of colors required (&lt;= 20 will provide unique colors,\notherwise some repetition).</li>\n<li><strong>cmap_name_override (str | None):</strong>  Override colormap name to use. Typical alternatives are\n\"tab10\", \"tab20b\", \"tab20c\", \"Set1\", \"Set2\", \"Set3\".</li>\n<li><strong>as_hex (bool):</strong>  If True, returns colors as hex strings. If False, returns RGBA tuples.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[str | Tuple[float, float, float, float]]: List of colors as hex strings or RGBA tuples.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">cmap_name_override</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">as_hex</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.calculate_mad", "modulename": "cpom.areas.area_plot", "qualname": "calculate_mad", "kind": "function", "doc": "<p>Calculate the MAD (Mean Absolute Deviation) of values</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>values (np.ndarray):</strong>  values for which MAD is to be calculated</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>mad (float) : MAD value</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.Annotation", "modulename": "cpom.areas.area_plot", "qualname": "Annotation", "kind": "class", "doc": "<p>Data class for a single annotation in a polar plot.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>xpos (float):</strong>  The x-coordinate position of the annotation text in axis coordinates (0-1),\nrepresenting the percentage of the axis width.</li>\n<li><strong>ypos (float):</strong>  The y-coordinate position of the annotation text in axis coordinates (0-1),\nrepresenting the percentage of the axis height.</li>\n<li><strong>text (str):</strong>  The content of the annotation text.</li>\n<li><strong>bbox (dict | None):</strong>  An optional bounding box around the text. If provided, it should be a\ndictionary specifying the style of the box. Default is None, meaning no\nbox. Example format:\n    {\n        'boxstyle': 'round',  # Style of the box (e.g.,'round','square')\n        'facecolor': 'aliceblue',  # Background color of the box\n        'alpha': 1.0,  # Transparency of the box (0-1)\n        'edgecolor': 'lightgrey',  # Color of the box edge\n    }\nSee matplotlib Boxstyle documentation for more styles.</li>\n<li><strong>fontsize (int):</strong>  The font size of the text. Default is 12.</li>\n<li><strong>color (str):</strong>  The color of the text. Default is \"k\" (black).</li>\n<li><strong>fontweight (str):</strong>  The weight (thickness) of the font. Default is \"normal\".</li>\n</ul>\n"}, {"fullname": "cpom.areas.area_plot.Annotation.__init__", "modulename": "cpom.areas.area_plot", "qualname": "Annotation.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">xpos</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">ypos</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">bbox</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fontsize</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">12</span>,</span><span class=\"param\">\t<span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;k&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">fontweight</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;normal&#39;</span></span>)</span>"}, {"fullname": "cpom.areas.area_plot.Annotation.xpos", "modulename": "cpom.areas.area_plot", "qualname": "Annotation.xpos", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "cpom.areas.area_plot.Annotation.ypos", "modulename": "cpom.areas.area_plot", "qualname": "Annotation.ypos", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "cpom.areas.area_plot.Annotation.text", "modulename": "cpom.areas.area_plot", "qualname": "Annotation.text", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "cpom.areas.area_plot.Annotation.bbox", "modulename": "cpom.areas.area_plot", "qualname": "Annotation.bbox", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict | None", "default_value": "None"}, {"fullname": "cpom.areas.area_plot.Annotation.fontsize", "modulename": "cpom.areas.area_plot", "qualname": "Annotation.fontsize", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "12"}, {"fullname": "cpom.areas.area_plot.Annotation.color", "modulename": "cpom.areas.area_plot", "qualname": "Annotation.color", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;k&#x27;"}, {"fullname": "cpom.areas.area_plot.Annotation.fontweight", "modulename": "cpom.areas.area_plot", "qualname": "Annotation.fontweight", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;normal&#x27;"}, {"fullname": "cpom.areas.area_plot.Polarplot", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot", "kind": "class", "doc": "<p>class to create map plots of polar areas</p>\n"}, {"fullname": "cpom.areas.area_plot.Polarplot.__init__", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.__init__", "kind": "function", "doc": "<p>class inititialization</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>area (str):</strong>  area name as per cpom.areas.definitions</li>\n<li><strong>area_overrides (dict|None):</strong>  dictionary to override area dict definitions</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">area</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">area_overrides</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">area_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "cpom.areas.area_plot.Polarplot.area", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.area", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.areas.area_plot.Polarplot.thisarea", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.thisarea", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.areas.area_plot.Polarplot.plot_points", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.plot_points", "kind": "function", "doc": "<p>Plot one or more (lat, lon, val) datasets on polar maps.</p>\n\n<h3 id=\"parameters\">Parameters</h3>\n\n<ul>\n<li><p><code>*data_sets</code> (dict, optional):\nOne or more dataset dictionaries. Each dictionary must include the (lats, lons, vals)\nfor a dataset and optional tunable plot parameters. Structure:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;lats&quot;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([]),</span>             <span class=\"c1\"># Required: Latitude values</span>\n    <span class=\"s2\">&quot;lons&quot;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([]),</span>             <span class=\"c1\"># Required: Longitude values</span>\n    <span class=\"s2\">&quot;vals&quot;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([]),</span>             <span class=\"c1\"># Required: Data values</span>\n    <span class=\"s2\">&quot;units&quot;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span>                      <span class=\"c1\"># Optional: Units of `vals`</span>\n    <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;unnamed&quot;</span><span class=\"p\">,</span>                <span class=\"c1\"># Optional: Name of dataset</span>\n    <span class=\"s2\">&quot;apply_area_mask_to_data&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>  <span class=\"c1\"># Optional: Apply area mask to data</span>\n    <span class=\"s2\">&quot;fill_value&quot;</span><span class=\"p\">:</span> <span class=\"mi\">9999</span><span class=\"p\">,</span>               <span class=\"c1\"># Optional: Fill value to ignore in `vals`</span>\n    <span class=\"s2\">&quot;valid_range&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">min</span><span class=\"p\">,</span> <span class=\"nb\">max</span><span class=\"p\">],</span>        <span class=\"c1\"># Optional: Valid range for `vals`</span>\n    <span class=\"s2\">&quot;minimap_val_scalefactor&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span>   <span class=\"c1\"># Optional: Scale factor for bad data marker</span>\n    <span class=\"s2\">&quot;flag_values&quot;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>                <span class=\"c1\"># Optional: List of flag values</span>\n    <span class=\"s2\">&quot;flag_names&quot;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>                 <span class=\"c1\"># Optional: List of flag names</span>\n    <span class=\"s2\">&quot;flag_colors&quot;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>                <span class=\"c1\"># Optional: Colors for flags or colormap</span>\n    <span class=\"s2\">&quot;cmap_name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;RdYlBu_r&quot;</span><span class=\"p\">,</span>          <span class=\"c1\"># Optional: Colormap name</span>\n    <span class=\"s2\">&quot;cmap_over_color&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;#A85754&quot;</span><span class=\"p\">,</span>     <span class=\"c1\"># Optional: Over color for colormap</span>\n    <span class=\"s2\">&quot;cmap_under_color&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;#3E4371&quot;</span><span class=\"p\">,</span>    <span class=\"c1\"># Optional: Under color for colormap</span>\n    <span class=\"s2\">&quot;cmap_extend&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;both&quot;</span><span class=\"p\">,</span>            <span class=\"c1\"># Optional: Extend colormap</span>\n    <span class=\"s2\">&quot;min_plot_range&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>           <span class=\"c1\"># Optional: Min range for colorbar</span>\n    <span class=\"s2\">&quot;max_plot_range&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>           <span class=\"c1\"># Optional: Max range for colorbar</span>\n    <span class=\"s2\">&quot;plot_size_scale_factor&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span>    <span class=\"c1\"># Optional: Marker size scale factor</span>\n    <span class=\"s2\">&quot;plot_alpha&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span>                <span class=\"c1\"># Optional: Marker transparency (0 to 1)</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div></li>\n\n<li><p><code>use_default_annotation</code> (bool, optional, default: <code>True</code>):\nDisplay default dataset annotations if <code>True</code>.</p></li>\n<li><p><code>annotation_list</code> (list[Annotation] | None, optional):\nList of <code>Annotation</code> objects to display.</p></li>\n<li><p><code>logo_image</code> (optional):\nLogo image to insert into the plot, as returned by <code>plt.imread('someimagefile.png')</code>.</p></li>\n<li><p><code>logo_position</code> (tuple[float, float, float, float] | None, optional):\nLogo position as an axis rectangle <code>[left, bottom, width, height]</code> (values 0\u20131).</p></li>\n<li><p><code>output_dir</code> (str, optional, default: <code>\"\"</code>):\nDirectory to save plots. If <code>output_file</code> is not specified, the default filename is:</p>\n\n<pre><code>&lt;output_dir&gt;/param_&lt;data_set['name']&gt;_&lt;self.area&gt;.png\n</code></pre></li>\n<li><p><code>output_file</code> (str, optional, default: <code>\"\"</code>):\nOverride the default output filename. If <code>output_dir</code> is specified, the file is saved as:</p>\n\n<pre><code>&lt;output_dir&gt;/output_file\n</code></pre></li>\n<li><p><code>dpi</code> (int, optional, default: <code>85</code>):\nDPI for saving the image.</p></li>\n<li><p><code>transparent_background</code> (bool, optional, default: <code>False</code>):\nSet to <code>True</code> for a transparent PNG background.</p></li>\n<li><p><code>map_only</code> (bool, optional, default: <code>False</code>):\nPlot only the map and colorbar, without histograms or other elements.</p></li>\n</ul>\n\n<h3 id=\"raises\">Raises</h3>\n\n<ul>\n<li><code>ValueError</code>:\nRaised if <code>lat</code>, <code>lon</code>, and <code>vals</code> in a dataset do not have equal lengths.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">data_sets</span>,</span><span class=\"param\">\t<span class=\"n\">use_default_annotation</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">annotation_list</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">cpom</span><span class=\"o\">.</span><span class=\"n\">areas</span><span class=\"o\">.</span><span class=\"n\">area_plot</span><span class=\"o\">.</span><span class=\"n\">Annotation</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">logo_image</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">logo_position</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dpi</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">85</span>,</span><span class=\"param\">\t<span class=\"n\">transparent_background</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">map_only</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.Polarplot.gen_plot_points_figure_coordinates", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.gen_plot_points_figure_coordinates", "kind": "function", "doc": "<p>generate plot figure coordinates (ie png image coordinates) from input x,y in area\nprojection coordinates. Purpose is for generating html image maps</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x (ndarray[float]):</strong>  x coordinates in current area projection</li>\n<li><strong>y (ndarray[float]):</strong>  y coordinates in current area projection</li>\n<li><strong>figure_dpi (float):</strong>  dpi of figure</li>\n<li><strong>figsize (tuple, optional):</strong>  figure size in inches. Defaults to (12, 10).</li>\n<li><strong>draw_axis_frame (bool, optional):</strong>  Defaults to True.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>_type_: _description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">figure_dpi</span>, </span><span class=\"param\"><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>, </span><span class=\"param\"><span class=\"n\">draw_axis_frame</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.Polarplot.draw_stats", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.draw_stats", "kind": "function", "doc": "<p>plot stats info (min,max,mean,std,MAD,nvals) of vals\n   positioned around colorbar axes</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>cbar (Axes):</strong>  colorbar axes instance</li>\n<li><strong>vals (np.ndarray):</strong>  values array (after Nan filtering) used to calculate and draw stats\ninfo</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cbar</span>, </span><span class=\"param\"><span class=\"n\">vals</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.Polarplot.draw_minimap_bad", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.draw_minimap_bad", "kind": "function", "doc": "<p>draw a minimap to show Nan, FV and out of range values</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>percent_valid (float):</strong>  percent of valid data in area</li>\n<li><strong>nan_lats (np.ndarray):</strong>  latitude locations corresponding to Nan data</li>\n<li><strong>nan_lons (np.ndarray):</strong>  longitude locations corresponding to Nan data</li>\n<li><strong>percent_nan (float):</strong>  percent of Nan values in area</li>\n<li><strong>fv_lats (np.ndarray):</strong>  latitude locations corresponding to FV data</li>\n<li><strong>fv_lons (np.ndarray):</strong>  longitude locations corresponding to FV data</li>\n<li><strong>percent_fv (float):</strong>  percent of Fill value values in area</li>\n<li><strong>outside_lats (np.ndarray):</strong>  latitude locations corresponding to out of range data</li>\n<li><strong>outside_lons (np.ndarray):</strong>  longitude locations corresponding to out of range data</li>\n<li><strong>percent_outside (float):</strong>  percent of out of range values in area</li>\n<li><strong>dataset_params (dict):</strong>  data set parameters</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">percent_valid</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">nan_lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">nan_lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">percent_nan</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">fv_lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">fv_lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">percent_fv</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">outside_lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">outside_lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">percent_outside</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">dataset_params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.Polarplot.draw_minimap", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.draw_minimap", "kind": "function", "doc": "<p>draw a minimap to show area coverage</p>\n\n<p>Args:</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.Polarplot.draw_latitude_vs_vals_plot", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.draw_latitude_vs_vals_plot", "kind": "function", "doc": "<p>plot latitude vs vals</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fig (Figure):</strong>  plot figure</li>\n<li><strong>vals (np.ndarray):</strong>  values to be plotted</li>\n<li><strong>lats (np.ndarray):</strong>  latitude values in degrees</li>\n<li><strong>varname (str):</strong>  name of data set</li>\n<li><strong>units (str):</strong>  units of data set</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">fig</span><span class=\"p\">:</span> <span class=\"n\">matplotlib</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"o\">.</span><span class=\"n\">Figure</span>,</span><span class=\"param\">\t<span class=\"n\">vals</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">varname</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">units</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.Polarplot.draw_histograms", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.draw_histograms", "kind": "function", "doc": "<p>draw two histograms of plot range and full range</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fig (Figure):</strong>  plot figure</li>\n<li><strong>vals (np.ndarray):</strong>  values to be histogrammed</li>\n<li><strong>min_plot_range (float):</strong>  minimum plot range</li>\n<li><strong>max_plot_range (float):</strong>  maximum plot range</li>\n<li><strong>varunits (str):</strong>  units of vals</li>\n<li><strong>cmap (_type_):</strong>  colormap instance</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">fig</span>,</span><span class=\"param\">\t<span class=\"n\">vals</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">min_plot_range</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">max_plot_range</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">varunits</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">cmap</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.Polarplot.draw_mapscale_bar", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.draw_mapscale_bar", "kind": "function", "doc": "<p>draw the map scale bar in km</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ax (GeoAxis):</strong>  the main map plot axis</li>\n<li><strong>dataprj ():</strong>  the data projection</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ax</span>, </span><span class=\"param\"><span class=\"n\">dataprj</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.Polarplot.draw_colorbar", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.draw_colorbar", "kind": "function", "doc": "<p>draw the colorbar</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dataset (dict):</strong>  the data set dict</li>\n<li><strong>fig (Figure):</strong>  the plot figure</li>\n<li><strong>scatter (_type_):</strong>  _description_</li>\n<li><strong>varname (str):</strong>  name of data set</li>\n<li><strong>varunits (str):</strong>  units of data set</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>colorbar_axes(Axes): Axes instance for the colorbar</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">fig</span>, </span><span class=\"param\"><span class=\"n\">scatter</span>, </span><span class=\"param\"><span class=\"n\">varname</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">varunits</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.Polarplot.plot_flag_data", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.plot_flag_data", "kind": "function", "doc": "<p>plot flag data</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fig (Figure) :</strong>  the plot figure</li>\n<li><strong>ax (GeoAxesSubplot):</strong>  the main plot axis</li>\n<li><strong>lats (np.ndarray):</strong>  latitude values</li>\n<li><strong>lons (np.ndarray):</strong>  longitude values</li>\n<li><strong>vals (np.ndarray):</strong>  data containing flag values to plot</li>\n<li><strong>data_set (dict):</strong>  the current data set</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fig</span>, </span><span class=\"param\"><span class=\"n\">ax</span>, </span><span class=\"param\"><span class=\"n\">lats</span>, </span><span class=\"param\"><span class=\"n\">lons</span>, </span><span class=\"param\"><span class=\"n\">vals</span>, </span><span class=\"param\"><span class=\"n\">data_set</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.Polarplot.plot_data", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.plot_data", "kind": "function", "doc": "<p>plot lat,lon,vals, data on map</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ax (GeoAxesSubplot):</strong>  the main plot axis</li>\n<li><strong>lats (np.ndarray):</strong>  latitude values</li>\n<li><strong>lons (np.ndarray):</strong>  longitude values</li>\n<li><strong>vals (np.ndarray):</strong>  values to plot</li>\n<li><strong>cmap_info:</strong>  (dict): colormap info</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ax</span><span class=\"p\">:</span> <span class=\"n\">cartopy</span><span class=\"o\">.</span><span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">geoaxes</span><span class=\"o\">.</span><span class=\"n\">GeoAxes</span>,</span><span class=\"param\">\t<span class=\"n\">lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">vals</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">cmap_info</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">plot_size_scale_factor</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">plot_alpha</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.Polarplot.draw_gridlines", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.draw_gridlines", "kind": "function", "doc": "<p>draw latitude and longitude grid lines on maps</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ax (GeoAxesSubplot):</strong>  cartopy axis</li>\n<li><strong>show_gridlines (bool):</strong> </li>\n<li><strong>gridline_color (str):</strong>  color of gridlines</li>\n<li><strong>circle (_type_):</strong>  _description_</li>\n<li><strong>draw_gridlabels (bool, optional):</strong>  _description_. Defaults to True.</li>\n<li><strong>gridlabel_color (str) :</strong>  color of grid labels</li>\n<li><strong>inner_gridlabel_color (str) :</strong>  color of inner grid labels</li>\n<li><strong>longitude_lines (List[float]|None, optional):</strong>  longitude positions for grid lines.</li>\n<li><strong>latitude_lines (List[float]|None, optional):</strong>  latitude positions for grid lines.</li>\n<li><strong>zorder (int, optional):</strong>  vertical order. Defaults to 10.</li>\n<li><strong>for_minimap (bool, optional):</strong>  if used for mini-map. Defaults to False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ax</span><span class=\"p\">:</span> <span class=\"n\">cartopy</span><span class=\"o\">.</span><span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">geoaxes</span><span class=\"o\">.</span><span class=\"n\">GeoAxes</span>,</span><span class=\"param\">\t<span class=\"n\">show_gridlines</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">gridline_color</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">circle</span>,</span><span class=\"param\">\t<span class=\"n\">draw_gridlabels</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">gridlabel_color</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">inner_gridlabel_color</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">longitude_lines</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">latitude_lines</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">zorder</span><span class=\"o\">=</span><span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">for_minimap</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.Polarplot.draw_coastlines", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.draw_coastlines", "kind": "function", "doc": "<p>draw coastlines over map</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ax (GeoAxesSubplot):</strong>  matplotlib Axis</li>\n<li><strong>dataprj (_type_):</strong>  current cartopy crs</li>\n<li><strong>coastline_color (str):</strong>  coastline color to use</li>\n<li><strong>draw_coastlines (bool):</strong>   draw coastline or not</li>\n<li><strong>use_cartopy_coastline (str):</strong>  'no','low','medium','high'.</li>\n<li><strong>use_antarctica_medium_coastline (bool):</strong>  use antarctic coastline (including iceshelves)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ax</span><span class=\"p\">:</span> <span class=\"n\">cartopy</span><span class=\"o\">.</span><span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">geoaxes</span><span class=\"o\">.</span><span class=\"n\">GeoAxes</span>,</span><span class=\"param\">\t<span class=\"n\">dataprj</span>,</span><span class=\"param\">\t<span class=\"n\">coastline_color</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">draw_coastlines</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">use_cartopy_coastline</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">use_antarctica_medium_coastline</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.Polarplot.draw_area_polygon_mask", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.draw_area_polygon_mask", "kind": "function", "doc": "<p>if area has a data mask defined by one or more polygons, draw these on map</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ax (GeoAxesSubplot):</strong>  cartopy axis</li>\n<li><strong>override_mask_display (bool):</strong>  if set to True (show polygon mask) or False (do not show\npolygon mask), overrides default for area</li>\n<li><strong>override_mask_color (bool):</strong>  set to a color string to override default polygon mask color\nfor area</li>\n<li><strong>dataprj (_type_):</strong>  crs returned by self.setup_projection_and_extent()</li>\n<li><strong>fill (bool, optional):</strong>  fill polygon if True. Defaults to False.</li>\n<li><strong>linestyle (str, optional):</strong>  line style to use for polygon edges. Defaults to \"-\".</li>\n<li><strong>linecolor (str, optional):</strong>  line color to use for polygon edges. Defaults to \"red\".</li>\n<li><strong>linewidth (int, optional):</strong>  line width to use for polygon edges. Defaults to 2.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ax</span><span class=\"p\">:</span> <span class=\"n\">cartopy</span><span class=\"o\">.</span><span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">geoaxes</span><span class=\"o\">.</span><span class=\"n\">GeoAxes</span>,</span><span class=\"param\">\t<span class=\"n\">override_mask_display</span>,</span><span class=\"param\">\t<span class=\"n\">override_mask_color</span>,</span><span class=\"param\">\t<span class=\"n\">dataprj</span>,</span><span class=\"param\">\t<span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">linestyle</span><span class=\"o\">=</span><span class=\"s1\">&#39;-&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">linecolor</span><span class=\"o\">=</span><span class=\"s1\">&#39;red&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mi\">2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot.Polarplot.setup_projection_and_extent", "modulename": "cpom.areas.area_plot", "qualname": "Polarplot.setup_projection_and_extent", "kind": "function", "doc": "<p>Setup projection and extent for current Area</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>axis_position (List, optional):</strong>  [left,bottom,width,height]. Defaults to None.</li>\n<li><strong>global_view (bool, optional):</strong>  _description_. Defaults to False.</li>\n<li><strong>draw_axis_frame (bool, optional):</strong>  _description_. Defaults to True.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>cartopy_geo_axis, data_projection_crs, circle</p>\n  \n  <p>if area has a circular border returns the circle</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">axis_position</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">global_view</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">draw_axis_frame</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.area_plot3d", "modulename": "cpom.areas.area_plot3d", "kind": "module", "doc": "<p>cpom.areas.area_plot3d.py</p>\n\n<h1 id=\"purpose\">Purpose</h1>\n\n<p>Functions to create 3d plots (using plotly library)</p>\n"}, {"fullname": "cpom.areas.area_plot3d.log", "modulename": "cpom.areas.area_plot3d", "qualname": "log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger cpom.areas.area_plot3d (WARNING)&gt;"}, {"fullname": "cpom.areas.area_plot3d.plot_3d_area", "modulename": "cpom.areas.area_plot3d", "qualname": "plot_3d_area", "kind": "function", "doc": "<p>Functions to create 3d plots for an area</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>area_name (str) :</strong>  3d area definition name as in cpom/areas/definitions_3d/<area_name>.py</li>\n<li><p><strong><code>*data_sets</code> (dict, optional):</strong>  One or more dataset dictionaries. Each dictionary must include the (lats, lons, vals)\nfor a dataset and optional tunable plot parameters. Structure:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;lats&quot;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([]),</span>             <span class=\"c1\"># Required: Latitude values</span>\n    <span class=\"s2\">&quot;lons&quot;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([]),</span>             <span class=\"c1\"># Required: Longitude values</span>\n    <span class=\"s2\">&quot;vals&quot;</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([]),</span>             <span class=\"c1\"># Required: Data values</span>\n    <span class=\"s2\">&quot;units&quot;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span>                      <span class=\"c1\"># Optional: Units of `vals`</span>\n    <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;unnamed&quot;</span><span class=\"p\">,</span>                <span class=\"c1\"># Optional: Name of dataset</span>\n    <span class=\"s2\">&quot;apply_area_mask_to_data&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>  <span class=\"c1\"># Optional: Apply area mask to data</span>\n    <span class=\"s2\">&quot;fill_value&quot;</span><span class=\"p\">:</span> <span class=\"mi\">9999</span><span class=\"p\">,</span>               <span class=\"c1\"># Optional: Fill value to ignore in `vals`</span>\n    <span class=\"s2\">&quot;valid_range&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">min</span><span class=\"p\">,</span> <span class=\"nb\">max</span><span class=\"p\">],</span>        <span class=\"c1\"># Optional: Valid range for `vals`</span>\n    <span class=\"s2\">&quot;minimap_val_scalefactor&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span>   <span class=\"c1\"># Optional: Scale factor for bad data marker</span>\n    <span class=\"s2\">&quot;flag_values&quot;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>                <span class=\"c1\"># Optional: List of flag values</span>\n    <span class=\"s2\">&quot;flag_names&quot;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>                 <span class=\"c1\"># Optional: List of flag names</span>\n    <span class=\"s2\">&quot;flag_colors&quot;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>                <span class=\"c1\"># Optional: Colors for flags or colormap</span>\n    <span class=\"s2\">&quot;color&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>                     <span class=\"c1\"># Optional: color to use to plot vals.</span>\n                                      <span class=\"c1\">#       can be &quot;cmap:coolwarm_r&quot; or color &quot;red&quot;</span>\n                                      <span class=\"c1\">#       cmap must be a supported python cmap name,</span>\n    <span class=\"s2\">&quot;cmap_over_color&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>           <span class=\"c1\"># Optional: can specify an over color for cmap</span>\n    <span class=\"s2\">&quot;cmap_under_color&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>          <span class=\"c1\"># Optional: can specify an under color for cmap</span>\n    <span class=\"s2\">&quot;min_plot_range&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>           <span class=\"c1\"># Optional: Min range for colorbar</span>\n    <span class=\"s2\">&quot;max_plot_range&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>           <span class=\"c1\"># Optional: Max range for colorbar</span>\n    <span class=\"s2\">&quot;plot_size_scale_factor&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span>    <span class=\"c1\"># Optional: Marker size scale factor</span>\n    <span class=\"s2\">&quot;plot_alpha&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span>                <span class=\"c1\"># Optional: Marker transparency (0 to 1)</span>\n    <span class=\"s2\">&quot;var_stride&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>                  <span class=\"c1\"># Optional: plot every N of input vals</span>\n    <span class=\"s2\">&quot;plot_nan_and_fv&quot;</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">,</span>          <span class=\"c1\"># if True, plot just the location of Nan/FV in data</span>\n\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<p>area_overrides (dict): overide any area definitions in\n                       cpom/areas/definitions_3d/<area_name>.py</p></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">area_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">data_sets</span>, </span><span class=\"param\"><span class=\"n\">area_overrides</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas", "modulename": "cpom.areas.areas", "kind": "module", "doc": "<p>cpom.areas.areas.py: Area class to define areas for polar plotting</p>\n"}, {"fullname": "cpom.areas.areas.log", "modulename": "cpom.areas.areas", "qualname": "log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger cpom.areas.areas (WARNING)&gt;"}, {"fullname": "cpom.areas.areas.list_all_area_definition_names", "modulename": "cpom.areas.areas", "qualname": "list_all_area_definition_names", "kind": "function", "doc": "<p>return a list of all area definition names and some additional\ninfo on each.</p>\n\n<p>Raises:</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list[str]: _description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">logger</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas.list_all_area_definition_names_only", "modulename": "cpom.areas.areas", "qualname": "list_all_area_definition_names_only", "kind": "function", "doc": "<p>return a list of all area definition names (only the names)</p>\n\n<p>Raises:</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list[str]</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">logger</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas.import_module_from_file", "modulename": "cpom.areas.areas", "qualname": "import_module_from_file", "kind": "function", "doc": "<p>Imports a Python module from a specified file path.</p>\n\n<p>The function dynamically loads a Python module from the given file path.\nThe module name is derived from the file name, excluding its extension\nand directory path. The module is also added to <code>sys.modules</code> for\nstandard import access.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>file_path (str):</strong>  The file path to the Python module to be imported.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ImportError:</strong>  If the module cannot be imported, either due to an\ninvalid file path or a failure during execution.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple: A tuple containing:\n      - module (module): The imported module object.\n      - module_name (str): The name of the imported module.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas.Area", "modulename": "cpom.areas.areas", "qualname": "Area", "kind": "class", "doc": "<p>class to define polar areas for plotting etc</p>\n"}, {"fullname": "cpom.areas.areas.Area.__init__", "modulename": "cpom.areas.areas", "qualname": "Area.__init__", "kind": "function", "doc": "<p>class initialization</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>name (str):</strong>  area name. Must be in all_areas</li>\n<li><strong>overrides (dict|None):</strong>  dictionary to override any parameters in area definition dicts</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">overrides</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">area_filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "cpom.areas.areas.Area.name", "modulename": "cpom.areas.areas", "qualname": "Area.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.areas.areas.Area.mask", "modulename": "cpom.areas.areas", "qualname": "Area.mask", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[cpom.masks.masks.Mask]"}, {"fullname": "cpom.areas.areas.Area.load_area", "modulename": "cpom.areas.areas", "qualname": "Area.load_area", "kind": "function", "doc": "<p>Load area settings for current area name</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">overrides</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">area_filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas.Area.latlon_to_xy", "modulename": "cpom.areas.areas", "qualname": "Area.latlon_to_xy", "kind": "function", "doc": "<p>convert latitude and longitude to x,y in area's projection</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>lats (np.ndarray|float|list):</strong>  latitude values</li>\n<li><strong>lons (np.ndarray|float|list):</strong>  longitude values</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>(np.ndarray,np.ndarray): x,y</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas.Area.xy_to_latlon", "modulename": "cpom.areas.areas", "qualname": "Area.xy_to_latlon", "kind": "function", "doc": "<p>convert from x,y to latitide, longitiude in area's projection</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x (np.ndarray):</strong>  x coordinates</li>\n<li><strong>y (np.ndarray):</strong>  y coordinates</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>(np.ndarray,np.ndarray): latitude values, longitude values</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas.Area.inside_xy_extent", "modulename": "cpom.areas.areas", "qualname": "Area.inside_xy_extent", "kind": "function", "doc": "<p>filter points based on x,y extent of area</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>lats (np.ndarray):</strong>  latitude values (degs N)</li>\n<li><strong>lons (np.ndarray):</strong>  longitude values (deg E)</li>\n<li><strong>inputs_are_xy (bool):</strong>  if True treat inputs as cartesian: x=lats, y=lons</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>(lats_inside, lons_inside, x_inside, y_inside, indices_inside, n_inside):\n  lats_inside (np.ndarray): lat values inside area\n  lons_inside (np.ndarray): lon values inside area\n  x_inside (np.ndarray): projected x coords inside area\n  y_inside (np.ndarray): projected y coords inside area\n  indices_inside (np.ndarray): indices of original lats,lons that are inside\n  n_inside (int): number of original lats, lons that were inside</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">inputs_are_xy</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas.Area.inside_latlon_bounds", "modulename": "cpom.areas.areas", "qualname": "Area.inside_latlon_bounds", "kind": "function", "doc": "<p>find if input latitude and longitude locations are inside area's lat/lon extent\n   bounds</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>lats (np.ndarray):</strong>  array of latitude values (degs N)</li>\n<li><strong>lons (np.ndarray):</strong>  array of longitude values (degs E)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>(bounded_lats|None, bounded_lons|None, bounded_indices|None, bounded_indices.size):</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas.Area.inside_mask", "modulename": "cpom.areas.areas", "qualname": "Area.inside_mask", "kind": "function", "doc": "<p>Find indices of x,y coords inside the area's data mask (if there is one).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x (np.ndarray):</strong>  x coordinates in areas's projection</li>\n<li><strong>y (np.ndarray):</strong>  y coordinates in areas's projection</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>indices_in_maskarea (np.ndarray) : indices inside mask or empty np.ndarray\n  n_inside (int) : number of points inside mask</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas3d", "modulename": "cpom.areas.areas3d", "kind": "module", "doc": "<p>cpom.areas.areas3d.py: Area class to define 3D areas for polar plotting</p>\n"}, {"fullname": "cpom.areas.areas3d.log", "modulename": "cpom.areas.areas3d", "qualname": "log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger cpom.areas.areas3d (WARNING)&gt;"}, {"fullname": "cpom.areas.areas3d.list_all_3d_area_definition_names", "modulename": "cpom.areas.areas3d", "qualname": "list_all_3d_area_definition_names", "kind": "function", "doc": "<p>return a list of all area definition names and some additional\ninfo on each.</p>\n\n<p>Raises:</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list[str]: _description_</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">logger</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas3d.list_all_3d_area_definition_names_only", "modulename": "cpom.areas.areas3d", "qualname": "list_all_3d_area_definition_names_only", "kind": "function", "doc": "<p>return a list of all area definition names (only the names)</p>\n\n<p>Raises:</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list[str]</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">logger</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas3d.Area3d", "modulename": "cpom.areas.areas3d", "qualname": "Area3d", "kind": "class", "doc": "<p>class to define 3d polar areas for plotting etc</p>\n"}, {"fullname": "cpom.areas.areas3d.Area3d.__init__", "modulename": "cpom.areas.areas3d", "qualname": "Area3d.__init__", "kind": "function", "doc": "<p>class initialization</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>name (str):</strong>  area name. Must be in all_areas</li>\n<li><strong>overrides (dict|None):</strong>  dictionary to override any parameters in area definition dicts</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">overrides</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">area_filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "cpom.areas.areas3d.Area3d.name", "modulename": "cpom.areas.areas3d", "qualname": "Area3d.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.areas.areas3d.Area3d.mask", "modulename": "cpom.areas.areas3d", "qualname": "Area3d.mask", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[cpom.masks.masks.Mask]"}, {"fullname": "cpom.areas.areas3d.Area3d.load_3d_area", "modulename": "cpom.areas.areas3d", "qualname": "Area3d.load_3d_area", "kind": "function", "doc": "<p>Load area settings for current area name</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">overrides</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">area_filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas3d.Area3d.latlon_to_xy", "modulename": "cpom.areas.areas3d", "qualname": "Area3d.latlon_to_xy", "kind": "function", "doc": "<p>convert latitude and longitude to x,y in area's projection</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>lats (np.ndarray|float|list):</strong>  latitude values</li>\n<li><strong>lons (np.ndarray|float|list):</strong>  longitude values</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>(np.ndarray,np.ndarray): x,y</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas3d.Area3d.xy_to_latlon", "modulename": "cpom.areas.areas3d", "qualname": "Area3d.xy_to_latlon", "kind": "function", "doc": "<p>convert from x,y to latitide, longitiude in area's projection</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x (np.ndarray):</strong>  x coordinates</li>\n<li><strong>y (np.ndarray):</strong>  y coordinates</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>(np.ndarray,np.ndarray): latitude values, longitude values</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas3d.Area3d.inside_xy_extent", "modulename": "cpom.areas.areas3d", "qualname": "Area3d.inside_xy_extent", "kind": "function", "doc": "<p>filter points based on x,y extent of area</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>lats (np.ndarray):</strong>  latitude values (degs N)</li>\n<li><strong>lons (np.ndarray):</strong>  longitude values (deg E)</li>\n<li><strong>inputs_are_xy (bool):</strong>  if True treat inputs as cartesian: x=lats, y=lons</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>(lats_inside, lons_inside, x_inside, y_inside, indices_inside, n_inside):\n  lats_inside (np.ndarray): lat values inside area\n  lons_inside (np.ndarray): lon values inside area\n  x_inside (np.ndarray): projected x coords inside area\n  y_inside (np.ndarray): projected y coords inside area\n  indices_inside (np.ndarray): indices of original lats,lons that are inside\n  n_inside (int): number of original lats, lons that were inside</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">inputs_are_xy</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas3d.Area3d.inside_latlon_bounds", "modulename": "cpom.areas.areas3d", "qualname": "Area3d.inside_latlon_bounds", "kind": "function", "doc": "<p>find if input latitude and longitude locations are inside area's lat/lon extent\n   bounds</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>lats (np.ndarray):</strong>  array of latitude values (degs N)</li>\n<li><strong>lons (np.ndarray):</strong>  array of longitude values (degs E)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>(bounded_lats|None, bounded_lons|None, bounded_indices|None, bounded_indices.size):</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.areas3d.Area3d.inside_mask", "modulename": "cpom.areas.areas3d", "qualname": "Area3d.inside_mask", "kind": "function", "doc": "<p>Find indices of x,y coords inside the area's data mask (if there is one).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x (np.ndarray):</strong>  x coordinates in areas's projection</li>\n<li><strong>y (np.ndarray):</strong>  y coordinates in areas's projection</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>indices_in_maskarea (np.ndarray) : indices inside mask or empty np.ndarray\n  n_inside (int) : number of points inside mask</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.definitions", "modulename": "cpom.areas.definitions", "kind": "module", "doc": "<p>cpom.areas.definitions</p>\n\n<h1 id=\"purpose\">Purpose</h1>\n\n<p>Directory containing CPOM area definitions</p>\n"}, {"fullname": "cpom.areas.definitions.amundsen_sea_embayment", "modulename": "cpom.areas.definitions.amundsen_sea_embayment", "kind": "module", "doc": "<p>Area definition</p>\n"}, {"fullname": "cpom.areas.definitions.amundsen_sea_embayment.area_definition", "modulename": "cpom.areas.definitions.amundsen_sea_embayment", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Amundsen Sea Embayment&#x27;, &#x27;hemisphere&#x27;: &#x27;south&#x27;, &#x27;epsg_number&#x27;: 3031, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: False, &#x27;bounding_lat&#x27;: None, &#x27;specify_by_centre&#x27;: True, &#x27;centre_lon&#x27;: -103.0, &#x27;centre_lat&#x27;: -75.0, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: None, &#x27;llcorner_lon&#x27;: None, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 800, &#x27;height_km&#x27;: 800, &#x27;min_elevation&#x27;: -500, &#x27;max_elevation&#x27;: 3000, &#x27;minlon&#x27;: 0, &#x27;maxlon&#x27;: 360, &#x27;minlat&#x27;: -80, &#x27;maxlat&#x27;: -71, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;ase_xylimits_mask&#x27;, &#x27;masktype&#x27;: &#x27;xylimits&#x27;, &#x27;basin_numbers&#x27;: [], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;, &#x27;axes&#x27;: [-0.02, 0.11, 0.7, 0.7], &#x27;simple_axes&#x27;: [0.09, 0.12, 0.78, 0.78], &#x27;draw_axis_frame&#x27;: True, &#x27;background_color&#x27;: None, &#x27;background_image&#x27;: &#x27;basic_land&#x27;, &#x27;background_image_alpha&#x27;: 1.0, &#x27;background_image_resolution&#x27;: &#x27;low&#x27;, &#x27;hillshade_params&#x27;: None, &#x27;show_polygon_overlay_in_main_map&#x27;: True, &#x27;grid_polygon_overlay_mask&#x27;: None, &#x27;apply_hillshade_to_vals&#x27;: False, &#x27;draw_coastlines&#x27;: True, &#x27;coastline_color&#x27;: &#x27;grey&#x27;, &#x27;use_antarctica_medium_coastline&#x27;: True, &#x27;use_cartopy_coastline&#x27;: &#x27;no&#x27;, &#x27;show_gridlines&#x27;: True, &#x27;area_long_name_position&#x27;: (0.2, 0.86), &#x27;area_long_name_fontsize&#x27;: 16, &#x27;area_long_name_position_simple&#x27;: (0.4, 0.96), &#x27;mask_long_name_position&#x27;: (0.2, 0.84), &#x27;mask_long_name_position_simple&#x27;: (0.4, 0.94), &#x27;mask_long_name_fontsize&#x27;: 9, &#x27;varname_annotation_position_xy&#x27;: (0.2, 0.92), &#x27;varname_annotation_position_xy_simple&#x27;: (0.04, 0.94), &#x27;stats_position_x_offset&#x27;: 0, &#x27;stats_position_y_offset&#x27;: 0.77, &#x27;stats_position_x_offset_simple&#x27;: -0.2, &#x27;stats_position_y_offset_simple&#x27;: -0.08, &#x27;include_flag_legend&#x27;: False, &#x27;flag_legend_xylocation&#x27;: [None, None], &#x27;flag_legend_location&#x27;: &#x27;upper right&#x27;, &#x27;include_flag_percents&#x27;: True, &#x27;flag_perc_axis&#x27;: [0.74, 0.25, 0.1], &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;draw_colorbar&#x27;: True, &#x27;colorbar_orientation&#x27;: &#x27;horizontal&#x27;, &#x27;vertical_colorbar_axes&#x27;: [0.04, 0.05, 0.02, 0.55], &#x27;vertical_colorbar_axes_simple&#x27;: [0.04, 0.05, 0.02, 0.55], &#x27;horizontal_colorbar_axes&#x27;: [0.08, 0.05, 0.55, 0.02], &#x27;horizontal_colorbar_axes_simple&#x27;: [0.28, 0.05, 0.55, 0.02], &#x27;longitude_gridlines&#x27;: [230, 240, 250, 260, 270, 280, 290, 300], &#x27;latitude_gridlines&#x27;: [-70, -72, -74, -76, -78], &#x27;gridline_color&#x27;: &#x27;darkgrey&#x27;, &#x27;gridlabel_color&#x27;: &#x27;darkgrey&#x27;, &#x27;gridlabel_size&#x27;: 8, &#x27;draw_gridlabels&#x27;: True, &#x27;inner_gridlabel_color&#x27;: &#x27;white&#x27;, &#x27;inner_gridlabel_size&#x27;: 8, &#x27;latitude_of_radial_labels&#x27;: -58.3, &#x27;labels_at_top&#x27;: True, &#x27;labels_at_bottom&#x27;: True, &#x27;labels_at_left&#x27;: True, &#x27;labels_at_right&#x27;: True, &#x27;show_scalebar&#x27;: True, &#x27;mapscale&#x27;: [-112.0, -72.0, -104.0, -75.0, 100, &#x27;black&#x27;, 10], &#x27;show_histograms&#x27;: True, &#x27;histogram_plotrange_axes&#x27;: [0.735, 0.3, 0.08, 0.35], &#x27;histogram_fullrange_axes&#x27;: [0.89, 0.3, 0.08, 0.35], &#x27;show_latitude_scatter&#x27;: True, &#x27;latvals_axes&#x27;: [0.77, 0.05, 0.17, 0.2], &#x27;show_bad_data_map&#x27;: True, &#x27;bad_data_minimap_axes&#x27;: [0.64, 0.69, 0.25, 0.25], &#x27;bad_data_minimap_bounding_lat&#x27;: None, &#x27;bad_data_minimap_circle&#x27;: None, &#x27;bad_data_minimap_draw_gridlines&#x27;: True, &#x27;bad_data_minimap_gridlines_color&#x27;: &#x27;lightgrey&#x27;, &#x27;bad_data_latitude_lines&#x27;: [-85, -81, -77, -73], &#x27;bad_data_longitude_lines&#x27;: [-30, -40, -50, -60, -70, -80, -90, -100], &#x27;bad_data_minimap_val_scalefactor&#x27;: 1.0, &#x27;bad_data_minimap_legend_pos&#x27;: (1.6, 1.0), &#x27;bad_data_minimap_coastline_resolution&#x27;: &#x27;medium&#x27;, &#x27;show_minimap&#x27;: True, &#x27;minimap_axes&#x27;: [0.5, 0.84, 0.14, 0.14], &#x27;minimap_bounding_lat&#x27;: None, &#x27;minimap_circle&#x27;: None, &#x27;minimap_draw_gridlines&#x27;: False, &#x27;minimap_val_scalefactor&#x27;: 1.0, &#x27;minimap_legend_pos&#x27;: (1.38, 1.1)}"}, {"fullname": "cpom.areas.definitions.antarctica", "modulename": "cpom.areas.definitions.antarctica", "kind": "module", "doc": "<p>Area definition</p>\n"}, {"fullname": "cpom.areas.definitions.antarctica.area_definition", "modulename": "cpom.areas.definitions.antarctica", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Antarctica&#x27;, &#x27;hemisphere&#x27;: &#x27;south&#x27;, &#x27;epsg_number&#x27;: 3031, &#x27;round&#x27;: True, &#x27;specify_by_bounding_lat&#x27;: True, &#x27;bounding_lat&#x27;: -63.15, &#x27;specify_by_centre&#x27;: False, &#x27;centre_lon&#x27;: 0.0, &#x27;centre_lat&#x27;: -90.0, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: None, &#x27;llcorner_lon&#x27;: None, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 6600, &#x27;height_km&#x27;: 6100, &#x27;min_elevation&#x27;: -50, &#x27;max_elevation&#x27;: 4200, &#x27;minlon&#x27;: 0.0, &#x27;maxlon&#x27;: 360.0, &#x27;minlat&#x27;: -90.0, &#x27;maxlat&#x27;: -62.0, &#x27;apply_area_mask_to_data&#x27;: False, &#x27;maskname&#x27;: &#x27;&#x27;, &#x27;basin_numbers&#x27;: [], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;, &#x27;axes&#x27;: [-0.02, 0.1, 0.74, 0.74], &#x27;simple_axes&#x27;: [0.081, 0.1, 0.83, 0.83], &#x27;draw_axis_frame&#x27;: True, &#x27;background_color&#x27;: None, &#x27;background_image&#x27;: &#x27;basic_land&#x27;, &#x27;background_image_alpha&#x27;: 1.0, &#x27;background_image_resolution&#x27;: &#x27;low&#x27;, &#x27;hillshade_params&#x27;: None, &#x27;show_polygon_overlay_in_main_map&#x27;: True, &#x27;grid_polygon_overlay_mask&#x27;: None, &#x27;apply_hillshade_to_vals&#x27;: False, &#x27;draw_coastlines&#x27;: True, &#x27;coastline_color&#x27;: &#x27;grey&#x27;, &#x27;use_antarctica_medium_coastline&#x27;: True, &#x27;use_cartopy_coastline&#x27;: &#x27;no&#x27;, &#x27;show_gridlines&#x27;: True, &#x27;area_long_name_position&#x27;: (0.31, 0.88), &#x27;area_long_name_fontsize&#x27;: 16, &#x27;area_long_name_position_simple&#x27;: (0.43, 0.97), &#x27;mask_long_name_position&#x27;: (0.26, 0.86), &#x27;mask_long_name_position_simple&#x27;: (0.36, 0.95), &#x27;mask_long_name_fontsize&#x27;: 9, &#x27;varname_annotation_position_xy&#x27;: (0.04, 0.9), &#x27;varname_annotation_position_xy_simple&#x27;: (0.04, 0.9), &#x27;stats_position_x_offset&#x27;: 0, &#x27;stats_position_y_offset&#x27;: 0, &#x27;stats_position_x_offset_simple&#x27;: -0.13, &#x27;stats_position_y_offset_simple&#x27;: 0, &#x27;include_flag_legend&#x27;: False, &#x27;flag_legend_xylocation&#x27;: [None, None], &#x27;flag_legend_location&#x27;: &#x27;upper right&#x27;, &#x27;include_flag_percents&#x27;: True, &#x27;flag_perc_axis&#x27;: [0.74, 0.25, 0.1], &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;draw_colorbar&#x27;: True, &#x27;colorbar_orientation&#x27;: &#x27;horizontal&#x27;, &#x27;vertical_colorbar_axes&#x27;: [0.04, 0.05, 0.02, 0.55], &#x27;vertical_colorbar_axes_simple&#x27;: [0.04, 0.05, 0.02, 0.55], &#x27;horizontal_colorbar_axes&#x27;: [0.08, 0.05, 0.55, 0.02], &#x27;horizontal_colorbar_axes_simple&#x27;: [0.22, 0.05, 0.55, 0.02], &#x27;longitude_gridlines&#x27;: range(0, 380, 20), &#x27;latitude_gridlines&#x27;: [-82, -78, -74, -70, -66, -88], &#x27;gridline_color&#x27;: &#x27;lightgrey&#x27;, &#x27;gridlabel_color&#x27;: &#x27;darkgrey&#x27;, &#x27;gridlabel_size&#x27;: 8, &#x27;draw_gridlabels&#x27;: True, &#x27;inner_gridlabel_color&#x27;: &#x27;white&#x27;, &#x27;inner_gridlabel_size&#x27;: 8, &#x27;latitude_of_radial_labels&#x27;: -58.3, &#x27;labels_at_top&#x27;: False, &#x27;labels_at_bottom&#x27;: False, &#x27;labels_at_left&#x27;: False, &#x27;labels_at_right&#x27;: False, &#x27;show_scalebar&#x27;: True, &#x27;mapscale&#x27;: [-179.9, -65.0, 0.0, -90.0, 1000, &#x27;black&#x27;, 70], &#x27;show_histograms&#x27;: True, &#x27;histogram_plotrange_axes&#x27;: [0.735, 0.3, 0.08, 0.35], &#x27;histogram_fullrange_axes&#x27;: [0.89, 0.3, 0.08, 0.35], &#x27;show_latitude_scatter&#x27;: True, &#x27;latvals_axes&#x27;: [0.77, 0.05, 0.17, 0.2], &#x27;show_bad_data_map&#x27;: True, &#x27;bad_data_minimap_axes&#x27;: [0.64, 0.67, 0.29, 0.29], &#x27;bad_data_minimap_bounding_lat&#x27;: None, &#x27;bad_data_minimap_circle&#x27;: None, &#x27;bad_data_minimap_draw_gridlines&#x27;: True, &#x27;bad_data_minimap_gridlines_color&#x27;: &#x27;lightgrey&#x27;, &#x27;bad_data_latitude_lines&#x27;: [-50, -70], &#x27;bad_data_longitude_lines&#x27;: [0, 60, 120, 180, -120, -60], &#x27;bad_data_minimap_val_scalefactor&#x27;: 0.01, &#x27;bad_data_minimap_legend_pos&#x27;: (1.38, 1.1), &#x27;bad_data_minimap_coastline_resolution&#x27;: &#x27;medium&#x27;, &#x27;show_minimap&#x27;: False, &#x27;minimap_axes&#x27;: [0.64, 0.67, 0.29, 0.29], &#x27;minimap_bounding_lat&#x27;: None, &#x27;minimap_circle&#x27;: None, &#x27;minimap_draw_gridlines&#x27;: False, &#x27;minimap_val_scalefactor&#x27;: 1.0, &#x27;minimap_legend_pos&#x27;: (1.38, 1.1)}"}, {"fullname": "cpom.areas.definitions.antarctica_basic", "modulename": "cpom.areas.definitions.antarctica_basic", "kind": "module", "doc": "<p>Area definition</p>\n"}, {"fullname": "cpom.areas.definitions.antarctica_basic.area_definition", "modulename": "cpom.areas.definitions.antarctica_basic", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;use_definitions_from&#x27;: &#x27;antarctica&#x27;, &#x27;background_image&#x27;: &#x27;basic_land&#x27;, &#x27;mapscale&#x27;: [-178.0, -65.0, 0.0, -90.0, 1000, &#x27;grey&#x27;, 70], &#x27;gridlabel_color&#x27;: &#x27;darkgrey&#x27;, &#x27;inner_gridlabel_color&#x27;: &#x27;darkgrey&#x27;}"}, {"fullname": "cpom.areas.definitions.antarctica_fi", "modulename": "cpom.areas.definitions.antarctica_fi", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: antarctica\n<strong>Data mask: floating ice from bedmachine v2</strong></p>\n"}, {"fullname": "cpom.areas.definitions.antarctica_fi.area_definition", "modulename": "cpom.areas.definitions.antarctica_fi", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;area_summary&#x27;: &#x27;Antarctica [floating ice mask]&#x27;, &#x27;use_definitions_from&#x27;: &#x27;antarctica&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;antarctica_bedmachine_v2_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [3], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;}"}, {"fullname": "cpom.areas.definitions.antarctica_hs", "modulename": "cpom.areas.definitions.antarctica_hs", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: antarctica\n<strong>background_image: hillshade</strong></p>\n"}, {"fullname": "cpom.areas.definitions.antarctica_hs.area_definition", "modulename": "cpom.areas.definitions.antarctica_hs", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;use_definitions_from&#x27;: &#x27;antarctica&#x27;, &#x27;background_image&#x27;: [&#x27;ibcso_bathymetry&#x27;, &#x27;hillshade&#x27;], &#x27;background_image_alpha&#x27;: [0.14, 0.18], &#x27;background_color&#x27;: &#x27;white&#x27;}"}, {"fullname": "cpom.areas.definitions.antarctica_hs_fi", "modulename": "cpom.areas.definitions.antarctica_hs_fi", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: antarctica\n<strong>background_image: hillshade</strong>\n<strong>Data mask: floating ice from bedmachine v2</strong></p>\n"}, {"fullname": "cpom.areas.definitions.antarctica_hs_fi.area_definition", "modulename": "cpom.areas.definitions.antarctica_hs_fi", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;area_summary&#x27;: &#x27;Antarctica [floating ice mask]&#x27;, &#x27;use_definitions_from&#x27;: &#x27;antarctica_hs&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;antarctica_bedmachine_v2_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [3], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;}"}, {"fullname": "cpom.areas.definitions.antarctica_hs_is", "modulename": "cpom.areas.definitions.antarctica_hs_is", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: antarctica\n<strong>background_image: hillshade</strong>\n<strong>Data mask: grounded ice from bedmachine v2</strong></p>\n"}, {"fullname": "cpom.areas.definitions.antarctica_hs_is.area_definition", "modulename": "cpom.areas.definitions.antarctica_hs_is", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;area_summary&#x27;: &#x27;Antarctica [grounded ice mask]&#x27;, &#x27;use_definitions_from&#x27;: &#x27;antarctica_hs&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;antarctica_bedmachine_v2_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [2, 4], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;}"}, {"fullname": "cpom.areas.definitions.antarctica_hs_is_li_portal", "modulename": "cpom.areas.definitions.antarctica_hs_is_li_portal", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: antarctica_hs_is</p>\n"}, {"fullname": "cpom.areas.definitions.antarctica_hs_is_li_portal.area_definition", "modulename": "cpom.areas.definitions.antarctica_hs_is_li_portal", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;use_definitions_from&#x27;: &#x27;antarctica_hs_is&#x27;, &#x27;area_long_name_position_simple&#x27;: (0.43, 0.17), &#x27;varname_annotation_position_xy_simple&#x27;: (0.38, 0.96), &#x27;mask_long_name_position_simple&#x27;: (-20, 0.95), &#x27;stats_position_x_offset_simple&#x27;: -20, &#x27;stats_position_y_offset_simple&#x27;: 0}"}, {"fullname": "cpom.areas.definitions.antarctica_is", "modulename": "cpom.areas.definitions.antarctica_is", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: antarctica\n<strong>Data mask: grounded ice from bedmachine v2</strong></p>\n"}, {"fullname": "cpom.areas.definitions.antarctica_is.area_definition", "modulename": "cpom.areas.definitions.antarctica_is", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;area_summary&#x27;: &#x27;Antarctica [grounded ice mask]&#x27;, &#x27;use_definitions_from&#x27;: &#x27;antarctica&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;antarctica_bedmachine_v2_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [2, 4], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;}"}, {"fullname": "cpom.areas.definitions.antarctica_is_li_portal", "modulename": "cpom.areas.definitions.antarctica_is_li_portal", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: antarctica_hs</p>\n"}, {"fullname": "cpom.areas.definitions.antarctica_is_li_portal.area_definition", "modulename": "cpom.areas.definitions.antarctica_is_li_portal", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;use_definitions_from&#x27;: &#x27;antarctica_is&#x27;, &#x27;area_long_name_position_simple&#x27;: (0.43, 0.17), &#x27;varname_annotation_position_xy_simple&#x27;: (0.38, 0.96), &#x27;mask_long_name_position_simple&#x27;: (-20, 0.95), &#x27;stats_position_x_offset_simple&#x27;: -20, &#x27;stats_position_y_offset_simple&#x27;: 0}"}, {"fullname": "cpom.areas.definitions.arctic", "modulename": "cpom.areas.definitions.arctic", "kind": "module", "doc": "<p>Area definition</p>\n"}, {"fullname": "cpom.areas.definitions.arctic.area_definition", "modulename": "cpom.areas.definitions.arctic", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Arctic&#x27;, &#x27;hemisphere&#x27;: &#x27;north&#x27;, &#x27;epsg_number&#x27;: 3413, &#x27;round&#x27;: True, &#x27;specify_by_bounding_lat&#x27;: True, &#x27;bounding_lat&#x27;: 59.0, &#x27;specify_by_centre&#x27;: False, &#x27;centre_lon&#x27;: -45.0, &#x27;centre_lat&#x27;: 90.0, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: None, &#x27;llcorner_lon&#x27;: None, &#x27;lon_0&#x27;: -45.0, &#x27;width_km&#x27;: 6200, &#x27;height_km&#x27;: 6200, &#x27;min_elevation&#x27;: -50, &#x27;max_elevation&#x27;: 4200, &#x27;minlon&#x27;: 0.0, &#x27;maxlon&#x27;: 360.0, &#x27;minlat&#x27;: 59.0, &#x27;maxlat&#x27;: 90.0, &#x27;apply_area_mask_to_data&#x27;: False, &#x27;maskname&#x27;: None, &#x27;masktype&#x27;: None, &#x27;basin_numbers&#x27;: None, &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;, &#x27;axes&#x27;: [-0.03, 0.11, 0.76, 0.76], &#x27;simple_axes&#x27;: [0.081, 0.1, 0.83, 0.83], &#x27;draw_axis_frame&#x27;: True, &#x27;background_color&#x27;: None, &#x27;background_image&#x27;: &#x27;basic_land&#x27;, &#x27;background_image_alpha&#x27;: 1.0, &#x27;background_image_resolution&#x27;: &#x27;medium&#x27;, &#x27;hillshade_params&#x27;: None, &#x27;show_polygon_overlay_in_main_map&#x27;: True, &#x27;grid_polygon_overlay_mask&#x27;: None, &#x27;apply_hillshade_to_vals&#x27;: False, &#x27;draw_coastlines&#x27;: True, &#x27;coastline_color&#x27;: &#x27;grey&#x27;, &#x27;use_antarctica_medium_coastline&#x27;: False, &#x27;use_cartopy_coastline&#x27;: &#x27;medium&#x27;, &#x27;show_gridlines&#x27;: True, &#x27;area_long_name_position&#x27;: (0.33, 0.91), &#x27;area_long_name_fontsize&#x27;: 16, &#x27;area_long_name_position_simple&#x27;: (0.47, 0.965), &#x27;mask_long_name_position&#x27;: (0.28, 0.89), &#x27;mask_long_name_position_simple&#x27;: (0.4, 0.945), &#x27;mask_long_name_fontsize&#x27;: 9, &#x27;varname_annotation_position_xy&#x27;: (0.04, 0.9), &#x27;varname_annotation_position_xy_simple&#x27;: (0.04, 0.9), &#x27;stats_position_x_offset&#x27;: 0, &#x27;stats_position_y_offset&#x27;: 0, &#x27;stats_position_x_offset_simple&#x27;: -0.13, &#x27;stats_position_y_offset_simple&#x27;: 0, &#x27;include_flag_legend&#x27;: False, &#x27;flag_legend_xylocation&#x27;: [None, None], &#x27;flag_legend_location&#x27;: &#x27;upper right&#x27;, &#x27;include_flag_percents&#x27;: True, &#x27;flag_perc_axis&#x27;: [0.74, 0.25, 0.1], &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;draw_colorbar&#x27;: True, &#x27;colorbar_orientation&#x27;: &#x27;horizontal&#x27;, &#x27;vertical_colorbar_axes&#x27;: [0.04, 0.05, 0.02, 0.55], &#x27;vertical_colorbar_axes_simple&#x27;: [0.04, 0.05, 0.02, 0.55], &#x27;horizontal_colorbar_axes&#x27;: [0.08, 0.05, 0.55, 0.02], &#x27;horizontal_colorbar_axes_simple&#x27;: [0.22, 0.05, 0.55, 0.02], &#x27;longitude_gridlines&#x27;: range(0, 380, 20), &#x27;latitude_gridlines&#x27;: [60, 70, 80], &#x27;gridline_color&#x27;: &#x27;lightgrey&#x27;, &#x27;gridlabel_color&#x27;: &#x27;darkgrey&#x27;, &#x27;gridlabel_size&#x27;: 8, &#x27;draw_gridlabels&#x27;: True, &#x27;inner_gridlabel_color&#x27;: &#x27;white&#x27;, &#x27;inner_gridlabel_size&#x27;: 8, &#x27;latitude_of_radial_labels&#x27;: 57.5, &#x27;labels_at_top&#x27;: False, &#x27;labels_at_bottom&#x27;: False, &#x27;labels_at_left&#x27;: False, &#x27;labels_at_right&#x27;: False, &#x27;show_scalebar&#x27;: True, &#x27;mapscale&#x27;: [-179.9, -65.0, 0.0, -90.0, 1000, &#x27;black&#x27;, 70], &#x27;show_histograms&#x27;: True, &#x27;histogram_plotrange_axes&#x27;: [0.735, 0.3, 0.08, 0.35], &#x27;histogram_fullrange_axes&#x27;: [0.89, 0.3, 0.08, 0.35], &#x27;show_latitude_scatter&#x27;: True, &#x27;latvals_axes&#x27;: [0.77, 0.05, 0.17, 0.2], &#x27;show_bad_data_map&#x27;: True, &#x27;bad_data_minimap_axes&#x27;: [0.64, 0.67, 0.29, 0.29], &#x27;bad_data_minimap_bounding_lat&#x27;: None, &#x27;bad_data_minimap_circle&#x27;: None, &#x27;bad_data_minimap_draw_gridlines&#x27;: True, &#x27;bad_data_minimap_gridlines_color&#x27;: &#x27;lightgrey&#x27;, &#x27;bad_data_latitude_lines&#x27;: [-50, -70], &#x27;bad_data_longitude_lines&#x27;: [0, 60, 120, 180, -120, -60], &#x27;bad_data_minimap_val_scalefactor&#x27;: 1.0, &#x27;bad_data_minimap_legend_pos&#x27;: (1.38, 1.1), &#x27;bad_data_minimap_coastline_resolution&#x27;: &#x27;medium&#x27;, &#x27;show_minimap&#x27;: False, &#x27;minimap_axes&#x27;: [0.64, 0.67, 0.29, 0.29], &#x27;minimap_bounding_lat&#x27;: None, &#x27;minimap_circle&#x27;: None, &#x27;minimap_draw_gridlines&#x27;: False, &#x27;minimap_val_scalefactor&#x27;: 1.0, &#x27;minimap_legend_pos&#x27;: (1.38, 1.1)}"}, {"fullname": "cpom.areas.definitions.arctic_cpy", "modulename": "cpom.areas.definitions.arctic_cpy", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: arctic\n<strong>Data mask: floating ice from bedmachine v3</strong></p>\n"}, {"fullname": "cpom.areas.definitions.arctic_cpy.area_definition", "modulename": "cpom.areas.definitions.arctic_cpy", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;use_definitions_from&#x27;: &#x27;arctic&#x27;, &#x27;background_image&#x27;: &#x27;natural_earth_faded&#x27;}"}, {"fullname": "cpom.areas.definitions.ase", "modulename": "cpom.areas.definitions.ase", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: amundsen_sea_embayment</p>\n"}, {"fullname": "cpom.areas.definitions.ase.area_definition", "modulename": "cpom.areas.definitions.ase", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;use_definitions_from&#x27;: &#x27;amundsen_sea_embayment&#x27;, &#x27;area_summary&#x27;: &#x27;Amundsen Sea Embayment (Thwaites, PIG glaciers)&#x27;}"}, {"fullname": "cpom.areas.definitions.ase_hs", "modulename": "cpom.areas.definitions.ase_hs", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: amundsen_sea_embayment</p>\n"}, {"fullname": "cpom.areas.definitions.ase_hs.area_definition", "modulename": "cpom.areas.definitions.ase_hs", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;use_definitions_from&#x27;: &#x27;amundsen_sea_embayment&#x27;, &#x27;area_summary&#x27;: &#x27;Amundsen Sea Embayment (Thwaites, PIG glaciers), [hillshade]&#x27;, &#x27;background_image&#x27;: [&#x27;ibcso_bathymetry&#x27;, &#x27;hillshade&#x27;], &#x27;background_image_alpha&#x27;: [0.14, 0.18], &#x27;background_color&#x27;: &#x27;white&#x27;}"}, {"fullname": "cpom.areas.definitions.ase_is", "modulename": "cpom.areas.definitions.ase_is", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: amundsen_sea_embayment</p>\n"}, {"fullname": "cpom.areas.definitions.ase_is.area_definition", "modulename": "cpom.areas.definitions.ase_is", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;use_definitions_from&#x27;: &#x27;amundsen_sea_embayment&#x27;, &#x27;area_summary&#x27;: &#x27;Amundsen Sea Embayment (Thwaites, PIG glaciers), [grounded ice mask]&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;antarctica_bedmachine_v2_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [2, 4], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;}"}, {"fullname": "cpom.areas.definitions.global", "modulename": "cpom.areas.definitions.global", "kind": "module", "doc": "<p>Area definition</p>\n"}, {"fullname": "cpom.areas.definitions.global.area_definition", "modulename": "cpom.areas.definitions.global", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Global (Mercator)&#x27;, &#x27;hemisphere&#x27;: &#x27;both&#x27;, &#x27;epsg_number&#x27;: 3395, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: True, &#x27;bounding_lat&#x27;: None, &#x27;specify_by_centre&#x27;: False, &#x27;centre_lon&#x27;: -45.0, &#x27;centre_lat&#x27;: 90.0, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: None, &#x27;llcorner_lon&#x27;: None, &#x27;lon_0&#x27;: 15.77, &#x27;width_km&#x27;: 6200, &#x27;height_km&#x27;: 6200, &#x27;min_elevation&#x27;: -50, &#x27;max_elevation&#x27;: 4200, &#x27;minlon&#x27;: 0.0, &#x27;maxlon&#x27;: 360.0, &#x27;minlat&#x27;: -90.0, &#x27;maxlat&#x27;: 90.0, &#x27;apply_area_mask_to_data&#x27;: False, &#x27;maskname&#x27;: None, &#x27;masktype&#x27;: None, &#x27;basin_numbers&#x27;: None, &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;, &#x27;axes&#x27;: [0.015, 0.2, 0.62, 0.62], &#x27;simple_axes&#x27;: [0.041, 0.1, 0.92, 0.92], &#x27;draw_axis_frame&#x27;: True, &#x27;background_color&#x27;: None, &#x27;background_image&#x27;: &#x27;basic_land&#x27;, &#x27;background_image_alpha&#x27;: 1.0, &#x27;background_image_resolution&#x27;: &#x27;medium&#x27;, &#x27;hillshade_params&#x27;: None, &#x27;show_polygon_overlay_in_main_map&#x27;: True, &#x27;grid_polygon_overlay_mask&#x27;: None, &#x27;apply_hillshade_to_vals&#x27;: False, &#x27;draw_coastlines&#x27;: True, &#x27;coastline_color&#x27;: &#x27;grey&#x27;, &#x27;use_antarctica_medium_coastline&#x27;: False, &#x27;use_cartopy_coastline&#x27;: &#x27;medium&#x27;, &#x27;show_gridlines&#x27;: True, &#x27;area_long_name_position&#x27;: (0.3, 0.73), &#x27;area_long_name_fontsize&#x27;: 16, &#x27;area_long_name_position_simple&#x27;: (0.47, 0.965), &#x27;mask_long_name_position&#x27;: (0.28, 0.89), &#x27;mask_long_name_position_simple&#x27;: (0.4, 0.945), &#x27;mask_long_name_fontsize&#x27;: 9, &#x27;varname_annotation_position_xy&#x27;: (0.04, 0.9), &#x27;varname_annotation_position_xy_simple&#x27;: (0.04, 0.9), &#x27;stats_position_x_offset&#x27;: 0, &#x27;stats_position_y_offset&#x27;: -0.2, &#x27;stats_position_x_offset_simple&#x27;: -0.13, &#x27;stats_position_y_offset_simple&#x27;: 0, &#x27;include_flag_legend&#x27;: False, &#x27;flag_legend_xylocation&#x27;: [None, None], &#x27;flag_legend_location&#x27;: &#x27;upper right&#x27;, &#x27;include_flag_percents&#x27;: True, &#x27;flag_perc_axis&#x27;: [0.74, 0.25, 0.1], &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;draw_colorbar&#x27;: True, &#x27;colorbar_orientation&#x27;: &#x27;horizontal&#x27;, &#x27;vertical_colorbar_axes&#x27;: [0.04, 0.05, 0.02, 0.55], &#x27;vertical_colorbar_axes_simple&#x27;: [0.04, 0.05, 0.02, 0.55], &#x27;horizontal_colorbar_axes&#x27;: [0.08, 0.25, 0.55, 0.02], &#x27;horizontal_colorbar_axes_simple&#x27;: [0.22, 0.05, 0.55, 0.02], &#x27;longitude_gridlines&#x27;: range(0, 380, 20), &#x27;latitude_gridlines&#x27;: range(-80, 90, 10), &#x27;gridline_color&#x27;: &#x27;lightgrey&#x27;, &#x27;gridlabel_color&#x27;: &#x27;darkgrey&#x27;, &#x27;gridlabel_size&#x27;: 8, &#x27;draw_gridlabels&#x27;: True, &#x27;inner_gridlabel_color&#x27;: &#x27;white&#x27;, &#x27;inner_gridlabel_size&#x27;: 8, &#x27;latitude_of_radial_labels&#x27;: 57.5, &#x27;labels_at_top&#x27;: True, &#x27;labels_at_bottom&#x27;: True, &#x27;labels_at_left&#x27;: True, &#x27;labels_at_right&#x27;: True, &#x27;show_scalebar&#x27;: False, &#x27;mapscale&#x27;: [0, -65.0, 0.0, -90.0, 1000, &#x27;black&#x27;, 70], &#x27;show_histograms&#x27;: True, &#x27;histogram_plotrange_axes&#x27;: [0.735, 0.3, 0.08, 0.35], &#x27;histogram_fullrange_axes&#x27;: [0.89, 0.3, 0.08, 0.35], &#x27;show_latitude_scatter&#x27;: True, &#x27;latvals_axes&#x27;: [0.77, 0.05, 0.17, 0.2], &#x27;show_bad_data_map&#x27;: True, &#x27;bad_data_minimap_axes&#x27;: [0.64, 0.67, 0.29, 0.29], &#x27;bad_data_minimap_bounding_lat&#x27;: None, &#x27;bad_data_minimap_circle&#x27;: None, &#x27;bad_data_minimap_draw_gridlines&#x27;: True, &#x27;bad_data_minimap_gridlines_color&#x27;: &#x27;lightgrey&#x27;, &#x27;bad_data_latitude_lines&#x27;: [-50, -70], &#x27;bad_data_longitude_lines&#x27;: [0, 60, 120, 180, -120, -60], &#x27;bad_data_minimap_val_scalefactor&#x27;: 1.0, &#x27;bad_data_minimap_legend_pos&#x27;: (1.38, 1.1), &#x27;bad_data_minimap_coastline_resolution&#x27;: &#x27;medium&#x27;, &#x27;show_minimap&#x27;: False, &#x27;minimap_axes&#x27;: [0.64, 0.67, 0.29, 0.29], &#x27;minimap_bounding_lat&#x27;: None, &#x27;minimap_circle&#x27;: None, &#x27;minimap_draw_gridlines&#x27;: False, &#x27;minimap_val_scalefactor&#x27;: 1.0, &#x27;minimap_legend_pos&#x27;: (1.38, 1.1)}"}, {"fullname": "cpom.areas.definitions.greenland", "modulename": "cpom.areas.definitions.greenland", "kind": "module", "doc": "<p>Area definition</p>\n"}, {"fullname": "cpom.areas.definitions.greenland.area_definition", "modulename": "cpom.areas.definitions.greenland", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Greenland&#x27;, &#x27;hemisphere&#x27;: &#x27;north&#x27;, &#x27;epsg_number&#x27;: 3413, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: False, &#x27;bounding_lat&#x27;: None, &#x27;specify_by_centre&#x27;: True, &#x27;centre_lon&#x27;: -41.75, &#x27;centre_lat&#x27;: 71.5, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: None, &#x27;llcorner_lon&#x27;: None, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 1540, &#x27;height_km&#x27;: 2740, &#x27;min_elevation&#x27;: -50, &#x27;max_elevation&#x27;: 4200, &#x27;minlon&#x27;: 285.0, &#x27;maxlon&#x27;: 350.0, &#x27;minlat&#x27;: 59.0, &#x27;maxlat&#x27;: 85.0, &#x27;apply_area_mask_to_data&#x27;: False, &#x27;maskname&#x27;: None, &#x27;masktype&#x27;: None, &#x27;basin_numbers&#x27;: None, &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;, &#x27;axes&#x27;: [0.03, 0.05, 0.8, 0.83], &#x27;simple_axes&#x27;: [0.2, 0.04, 0.8, 0.9], &#x27;draw_axis_frame&#x27;: True, &#x27;background_color&#x27;: None, &#x27;background_image&#x27;: &#x27;basic_land&#x27;, &#x27;background_image_alpha&#x27;: 1.0, &#x27;background_image_resolution&#x27;: &#x27;low&#x27;, &#x27;hillshade_params&#x27;: None, &#x27;show_polygon_overlay_in_main_map&#x27;: True, &#x27;grid_polygon_overlay_mask&#x27;: None, &#x27;apply_hillshade_to_vals&#x27;: False, &#x27;draw_coastlines&#x27;: True, &#x27;coastline_color&#x27;: &#x27;grey&#x27;, &#x27;use_antarctica_medium_coastline&#x27;: False, &#x27;use_cartopy_coastline&#x27;: &#x27;medium&#x27;, &#x27;show_gridlines&#x27;: True, &#x27;area_long_name_position&#x27;: (0.39, 0.91), &#x27;area_long_name_position_simple&#x27;: (0.5, 0.97), &#x27;area_long_name_fontsize&#x27;: 16, &#x27;mask_long_name_position&#x27;: (0.32, 0.89), &#x27;mask_long_name_position_simple&#x27;: (0.48, 0.95), &#x27;mask_long_name_fontsize&#x27;: 9, &#x27;varname_annotation_position_xy&#x27;: (0.02, 0.91), &#x27;varname_annotation_position_xy_simple&#x27;: (0.02, 0.91), &#x27;stats_position_x_offset&#x27;: 0, &#x27;stats_position_y_offset&#x27;: 0, &#x27;stats_position_x_offset_simple&#x27;: 0, &#x27;stats_position_y_offset_simple&#x27;: 0, &#x27;include_flag_legend&#x27;: False, &#x27;flag_legend_xylocation&#x27;: [None, None], &#x27;flag_legend_location&#x27;: &#x27;lower right&#x27;, &#x27;include_flag_percents&#x27;: True, &#x27;flag_perc_axis&#x27;: [0.74, 0.25, 0.1], &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;draw_colorbar&#x27;: True, &#x27;colorbar_orientation&#x27;: &#x27;vertical&#x27;, &#x27;vertical_colorbar_axes&#x27;: [0.07, 0.05, 0.02, 0.55], &#x27;vertical_colorbar_axes_simple&#x27;: [0.13, 0.05, 0.02, 0.55], &#x27;horizontal_colorbar_axes&#x27;: [0.08, 0.05, 0.55, 0.02], &#x27;horizontal_colorbar_axes_simple&#x27;: [0.08, 0.05, 0.55, 0.02], &#x27;longitude_gridlines&#x27;: range(-90, 20, 10), &#x27;latitude_gridlines&#x27;: [60, 65, 70, 75, 80], &#x27;gridline_color&#x27;: &#x27;lightgrey&#x27;, &#x27;gridlabel_color&#x27;: &#x27;black&#x27;, &#x27;gridlabel_size&#x27;: 8, &#x27;draw_gridlabels&#x27;: True, &#x27;inner_gridlabel_color&#x27;: &#x27;white&#x27;, &#x27;inner_gridlabel_size&#x27;: 8, &#x27;latitude_of_radial_labels&#x27;: -58.3, &#x27;labels_at_top&#x27;: False, &#x27;labels_at_bottom&#x27;: True, &#x27;labels_at_left&#x27;: False, &#x27;labels_at_right&#x27;: True, &#x27;show_scalebar&#x27;: True, &#x27;mapscale&#x27;: [-35, 60, -40.0, 70.0, 400, &#x27;black&#x27;, 30], &#x27;show_histograms&#x27;: True, &#x27;histogram_plotrange_axes&#x27;: [0.735, 0.3, 0.08, 0.35], &#x27;histogram_fullrange_axes&#x27;: [0.89, 0.3, 0.08, 0.35], &#x27;show_latitude_scatter&#x27;: True, &#x27;latvals_axes&#x27;: [0.77, 0.05, 0.17, 0.2], &#x27;show_bad_data_map&#x27;: True, &#x27;bad_data_minimap_axes&#x27;: [0.64, 0.67, 0.29, 0.29], &#x27;bad_data_minimap_bounding_lat&#x27;: None, &#x27;bad_data_minimap_circle&#x27;: None, &#x27;bad_data_minimap_draw_gridlines&#x27;: True, &#x27;bad_data_minimap_gridlines_color&#x27;: &#x27;lightgrey&#x27;, &#x27;bad_data_latitude_lines&#x27;: [50, 60, 70, 80], &#x27;bad_data_longitude_lines&#x27;: [-20, -40, -60], &#x27;bad_data_minimap_val_scalefactor&#x27;: 1.0, &#x27;bad_data_minimap_legend_pos&#x27;: (1.94, 1.0), &#x27;bad_data_minimap_coastline_resolution&#x27;: &#x27;medium&#x27;, &#x27;show_minimap&#x27;: False, &#x27;minimap_axes&#x27;: [0.64, 0.67, 0.29, 0.29], &#x27;minimap_bounding_lat&#x27;: None, &#x27;minimap_circle&#x27;: None, &#x27;minimap_draw_gridlines&#x27;: False, &#x27;minimap_val_scalefactor&#x27;: 1.0, &#x27;minimap_legend_pos&#x27;: (1.38, 1.1)}"}, {"fullname": "cpom.areas.definitions.greenland_fi", "modulename": "cpom.areas.definitions.greenland_fi", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: greenland\n<strong>Data mask: floating ice from bedmachine v3</strong></p>\n"}, {"fullname": "cpom.areas.definitions.greenland_fi.area_definition", "modulename": "cpom.areas.definitions.greenland_fi", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;area_summary&#x27;: &#x27;Greenland [floating ice mask]&#x27;, &#x27;use_definitions_from&#x27;: &#x27;greenland&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;greenland_bedmachine_v3_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [3], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;}"}, {"fullname": "cpom.areas.definitions.greenland_hs", "modulename": "cpom.areas.definitions.greenland_hs", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: greenland\n<strong>background_image: hillshade</strong></p>\n"}, {"fullname": "cpom.areas.definitions.greenland_hs.area_definition", "modulename": "cpom.areas.definitions.greenland_hs", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;use_definitions_from&#x27;: &#x27;greenland&#x27;, &#x27;background_image&#x27;: [&#x27;ibcao_bathymetry&#x27;, &#x27;hillshade&#x27;], &#x27;background_image_alpha&#x27;: [0.14, 0.18], &#x27;background_color&#x27;: &#x27;white&#x27;}"}, {"fullname": "cpom.areas.definitions.greenland_hs_fi", "modulename": "cpom.areas.definitions.greenland_hs_fi", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: greenland\n<em>*mask: greenland_bedmachine_v3_grid_mask[3] == floating ice *</em></p>\n"}, {"fullname": "cpom.areas.definitions.greenland_hs_fi.area_definition", "modulename": "cpom.areas.definitions.greenland_hs_fi", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;area_summary&#x27;: &#x27;Greenland [floating ice mask]&#x27;, &#x27;use_definitions_from&#x27;: &#x27;greenland_hs&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;greenland_bedmachine_v3_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [3], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;}"}, {"fullname": "cpom.areas.definitions.greenland_hs_is", "modulename": "cpom.areas.definitions.greenland_hs_is", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: greenland\n<strong>mask: greenland_bedmachine_v3_grid_mask[2] == grounded ice sheet</strong></p>\n"}, {"fullname": "cpom.areas.definitions.greenland_hs_is.area_definition", "modulename": "cpom.areas.definitions.greenland_hs_is", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;area_summary&#x27;: &#x27;Greenland [grounded ice mask]&#x27;, &#x27;use_definitions_from&#x27;: &#x27;greenland_hs&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;greenland_bedmachine_v3_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [2], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;}"}, {"fullname": "cpom.areas.definitions.greenland_hs_is_li_portal", "modulename": "cpom.areas.definitions.greenland_hs_is_li_portal", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: greenland_is_li_portal</p>\n\n<p>Add hillshade bg</p>\n"}, {"fullname": "cpom.areas.definitions.greenland_hs_is_li_portal.area_definition", "modulename": "cpom.areas.definitions.greenland_hs_is_li_portal", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;area_summary&#x27;: &#x27;Greenland&#x27;, &#x27;use_definitions_from&#x27;: &#x27;greenland_is_li_portal&#x27;, &#x27;background_image&#x27;: [&#x27;ibcao_bathymetry&#x27;, &#x27;hillshade&#x27;], &#x27;background_image_alpha&#x27;: [0.14, 0.18], &#x27;background_color&#x27;: &#x27;white&#x27;}"}, {"fullname": "cpom.areas.definitions.greenland_is", "modulename": "cpom.areas.definitions.greenland_is", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: greenland\n<strong>Data mask: grounded ice from bedmachine v3</strong></p>\n"}, {"fullname": "cpom.areas.definitions.greenland_is.area_definition", "modulename": "cpom.areas.definitions.greenland_is", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;area_summary&#x27;: &#x27;Greenland [grounded ice mask]&#x27;, &#x27;use_definitions_from&#x27;: &#x27;greenland&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;greenland_bedmachine_v3_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [2], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;}"}, {"fullname": "cpom.areas.definitions.greenland_is_li_portal", "modulename": "cpom.areas.definitions.greenland_is_li_portal", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: greenland\n<strong>Data mask: grounded ice from bedmachine v3</strong></p>\n"}, {"fullname": "cpom.areas.definitions.greenland_is_li_portal.area_definition", "modulename": "cpom.areas.definitions.greenland_is_li_portal", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;area_summary&#x27;: &#x27;Greenland [grounded ice mask]&#x27;, &#x27;use_definitions_from&#x27;: &#x27;greenland&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;greenland_bedmachine_v3_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [2], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;, &#x27;simple_axes&#x27;: [0.105, 0.04, 0.8, 0.9], &#x27;vertical_colorbar_axes_simple&#x27;: [0.09, 0.06, 0.02, 0.55], &#x27;stats_position_x_offset_simple&#x27;: -20, &#x27;stats_position_y_offset_simple&#x27;: 0, &#x27;varname_annotation_position_xy_simple&#x27;: (0.3, 0.96), &#x27;area_long_name_position_simple&#x27;: (0.55, 0.12), &#x27;mask_long_name_position_simple&#x27;: (-20, 0.95)}"}, {"fullname": "cpom.areas.definitions.ronne_filchner", "modulename": "cpom.areas.definitions.ronne_filchner", "kind": "module", "doc": "<p>Area definition</p>\n"}, {"fullname": "cpom.areas.definitions.ronne_filchner.area_definition", "modulename": "cpom.areas.definitions.ronne_filchner", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Ronne Filchner&#x27;, &#x27;area_summary&#x27;: &#x27;Ronne Filchner ice shelves&#x27;, &#x27;hemisphere&#x27;: &#x27;south&#x27;, &#x27;epsg_number&#x27;: 3031, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: False, &#x27;bounding_lat&#x27;: None, &#x27;specify_by_centre&#x27;: True, &#x27;centre_lon&#x27;: 300.0, &#x27;centre_lat&#x27;: -79.0, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: None, &#x27;llcorner_lon&#x27;: None, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 1295, &#x27;height_km&#x27;: 1295, &#x27;min_elevation&#x27;: -50, &#x27;max_elevation&#x27;: 2000, &#x27;minlon&#x27;: 260.0, &#x27;maxlon&#x27;: 350.0, &#x27;minlat&#x27;: -87.0, &#x27;maxlat&#x27;: -70.0, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;ronne_filchner_xylimits_mask&#x27;, &#x27;masktype&#x27;: &#x27;xylimits&#x27;, &#x27;basin_numbers&#x27;: [], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;, &#x27;axes&#x27;: [-0.02, 0.11, 0.71, 0.71], &#x27;simple_axes&#x27;: [0.09, 0.12, 0.79, 0.79], &#x27;draw_axis_frame&#x27;: True, &#x27;background_color&#x27;: None, &#x27;background_image&#x27;: &#x27;basic_land&#x27;, &#x27;background_image_alpha&#x27;: 1.0, &#x27;background_image_resolution&#x27;: &#x27;low&#x27;, &#x27;hillshade_params&#x27;: None, &#x27;show_polygon_overlay_in_main_map&#x27;: True, &#x27;grid_polygon_overlay_mask&#x27;: None, &#x27;apply_hillshade_to_vals&#x27;: False, &#x27;draw_coastlines&#x27;: True, &#x27;coastline_color&#x27;: &#x27;grey&#x27;, &#x27;use_antarctica_medium_coastline&#x27;: True, &#x27;use_cartopy_coastline&#x27;: &#x27;no&#x27;, &#x27;show_gridlines&#x27;: True, &#x27;area_long_name_position&#x27;: (0.2, 0.86), &#x27;area_long_name_fontsize&#x27;: 16, &#x27;area_long_name_position_simple&#x27;: (0.4, 0.96), &#x27;mask_long_name_position&#x27;: (0.2, 0.84), &#x27;mask_long_name_position_simple&#x27;: (0.4, 0.94), &#x27;mask_long_name_fontsize&#x27;: 9, &#x27;varname_annotation_position_xy&#x27;: (0.2, 0.92), &#x27;varname_annotation_position_xy_simple&#x27;: (0.04, 0.94), &#x27;stats_position_x_offset&#x27;: 0, &#x27;stats_position_y_offset&#x27;: 0.77, &#x27;stats_position_x_offset_simple&#x27;: -0.2, &#x27;stats_position_y_offset_simple&#x27;: -0.08, &#x27;include_flag_legend&#x27;: False, &#x27;flag_legend_xylocation&#x27;: [None, None], &#x27;flag_legend_location&#x27;: &#x27;upper right&#x27;, &#x27;include_flag_percents&#x27;: True, &#x27;flag_perc_axis&#x27;: [0.74, 0.25, 0.1], &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;draw_colorbar&#x27;: True, &#x27;colorbar_orientation&#x27;: &#x27;horizontal&#x27;, &#x27;vertical_colorbar_axes&#x27;: [0.04, 0.05, 0.02, 0.55], &#x27;vertical_colorbar_axes_simple&#x27;: [0.04, 0.05, 0.02, 0.55], &#x27;horizontal_colorbar_axes&#x27;: [0.08, 0.05, 0.55, 0.02], &#x27;horizontal_colorbar_axes_simple&#x27;: [0.28, 0.05, 0.55, 0.02], &#x27;longitude_gridlines&#x27;: [260, 270, 280, 290, 300, 310, 320, 330], &#x27;latitude_gridlines&#x27;: [-71, -73, -75, -77, -79, -81, -83, -85, -87], &#x27;gridline_color&#x27;: &#x27;darkgrey&#x27;, &#x27;gridlabel_color&#x27;: &#x27;darkgrey&#x27;, &#x27;gridlabel_size&#x27;: 8, &#x27;draw_gridlabels&#x27;: True, &#x27;inner_gridlabel_color&#x27;: &#x27;white&#x27;, &#x27;inner_gridlabel_size&#x27;: 8, &#x27;latitude_of_radial_labels&#x27;: -58.3, &#x27;labels_at_top&#x27;: True, &#x27;labels_at_bottom&#x27;: True, &#x27;labels_at_left&#x27;: True, &#x27;labels_at_right&#x27;: True, &#x27;show_scalebar&#x27;: True, &#x27;mapscale&#x27;: [-85.0, -84.0, -65.0, -80.0, 200, &#x27;black&#x27;, 20], &#x27;show_histograms&#x27;: True, &#x27;histogram_plotrange_axes&#x27;: [0.735, 0.3, 0.08, 0.35], &#x27;histogram_fullrange_axes&#x27;: [0.89, 0.3, 0.08, 0.35], &#x27;show_latitude_scatter&#x27;: True, &#x27;latvals_axes&#x27;: [0.77, 0.05, 0.17, 0.2], &#x27;show_bad_data_map&#x27;: True, &#x27;bad_data_minimap_axes&#x27;: [0.65, 0.69, 0.26, 0.26], &#x27;bad_data_minimap_bounding_lat&#x27;: None, &#x27;bad_data_minimap_circle&#x27;: None, &#x27;bad_data_minimap_draw_gridlines&#x27;: True, &#x27;bad_data_minimap_gridlines_color&#x27;: &#x27;lightgrey&#x27;, &#x27;bad_data_latitude_lines&#x27;: [-85, -81, -77, -73], &#x27;bad_data_longitude_lines&#x27;: [-30, -40, -50, -60, -70, -80, -90, -100], &#x27;bad_data_minimap_val_scalefactor&#x27;: 1.0, &#x27;bad_data_minimap_legend_pos&#x27;: (1.5, 1.0), &#x27;bad_data_minimap_coastline_resolution&#x27;: &#x27;medium&#x27;, &#x27;show_minimap&#x27;: True, &#x27;minimap_axes&#x27;: [0.5, 0.84, 0.14, 0.14], &#x27;minimap_bounding_lat&#x27;: None, &#x27;minimap_circle&#x27;: None, &#x27;minimap_draw_gridlines&#x27;: False, &#x27;minimap_val_scalefactor&#x27;: 1.0, &#x27;minimap_legend_pos&#x27;: (1.38, 1.1)}"}, {"fullname": "cpom.areas.definitions.ronne_filchner_fi", "modulename": "cpom.areas.definitions.ronne_filchner_fi", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: ronne_filchner\n<strong>mask: floating ice</strong></p>\n"}, {"fullname": "cpom.areas.definitions.ronne_filchner_fi.area_definition", "modulename": "cpom.areas.definitions.ronne_filchner_fi", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;use_definitions_from&#x27;: &#x27;ronne_filchner&#x27;, &#x27;area_summary&#x27;: &#x27;Ronne Filchner ice shelves [floating ice mask]&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;antarctica_bedmachine_v2_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [3], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;}"}, {"fullname": "cpom.areas.definitions.ronne_filchner_hs", "modulename": "cpom.areas.definitions.ronne_filchner_hs", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: ronne_filchner\n<strong>background_image: hillshade</strong></p>\n"}, {"fullname": "cpom.areas.definitions.ronne_filchner_hs.area_definition", "modulename": "cpom.areas.definitions.ronne_filchner_hs", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;use_definitions_from&#x27;: &#x27;ronne_filchner&#x27;, &#x27;area_summary&#x27;: &#x27;Ronne Filchner ice shelves [hillshade]&#x27;, &#x27;background_image&#x27;: [&#x27;ibcso_bathymetry&#x27;, &#x27;hillshade&#x27;, &#x27;ant_iceshelves&#x27;], &#x27;background_image_resolution&#x27;: [&#x27;low&#x27;, &#x27;_&#x27;], &#x27;background_image_alpha&#x27;: [0.5, 0.7, 0.3], &#x27;background_color&#x27;: &#x27;aliceblue&#x27;, &#x27;gridline_color&#x27;: &#x27;darkgrey&#x27;, &#x27;hillshade_params&#x27;: {&#x27;dem&#x27;: &#x27;awi_ant_1km_grounded&#x27;, &#x27;azimuth&#x27;: 120.0}, &#x27;draw_coastlines&#x27;: False}"}, {"fullname": "cpom.areas.definitions.ronne_filchner_hs_fi", "modulename": "cpom.areas.definitions.ronne_filchner_hs_fi", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: ronne_filchner\n<strong>background_image: hillshade</strong>\n<strong>mask: floating ice</strong></p>\n"}, {"fullname": "cpom.areas.definitions.ronne_filchner_hs_fi.area_definition", "modulename": "cpom.areas.definitions.ronne_filchner_hs_fi", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;use_definitions_from&#x27;: &#x27;ronne_filchner_hs&#x27;, &#x27;area_summary&#x27;: &#x27;Ronne Filchner ice shelves [hillshade, floating ice mask]&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;antarctica_bedmachine_v2_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [3], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;}"}, {"fullname": "cpom.areas.definitions.ronne_filchner_hs_is", "modulename": "cpom.areas.definitions.ronne_filchner_hs_is", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: ronne_filchner\n<strong>background_image: hillshade</strong>\n<strong>mask: grounded ice</strong></p>\n"}, {"fullname": "cpom.areas.definitions.ronne_filchner_hs_is.area_definition", "modulename": "cpom.areas.definitions.ronne_filchner_hs_is", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;use_definitions_from&#x27;: &#x27;ronne_filchner_hs&#x27;, &#x27;area_summary&#x27;: &#x27;Ronne Filchner ice shelves [hillshade, grounded ice mask]&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;antarctica_bedmachine_v2_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [2, 4], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;}"}, {"fullname": "cpom.areas.definitions.ronne_filchner_hs_isfi", "modulename": "cpom.areas.definitions.ronne_filchner_hs_isfi", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: ronne_filchner_hs\n<strong>background_image: hillshade</strong>\n<strong>mask: grounded ice+floating ice</strong></p>\n"}, {"fullname": "cpom.areas.definitions.ronne_filchner_hs_isfi.area_definition", "modulename": "cpom.areas.definitions.ronne_filchner_hs_isfi", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;use_definitions_from&#x27;: &#x27;ronne_filchner_hs&#x27;, &#x27;area_summary&#x27;: &#x27;Ronne Filchner ice shelves [hillshade, grounded &amp; floating ice mask]&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;antarctica_bedmachine_v2_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [2, 3, 4], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;}"}, {"fullname": "cpom.areas.definitions.ronne_filchner_is", "modulename": "cpom.areas.definitions.ronne_filchner_is", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: ronne_filchner\n<strong>mask: grounded ice</strong></p>\n"}, {"fullname": "cpom.areas.definitions.ronne_filchner_is.area_definition", "modulename": "cpom.areas.definitions.ronne_filchner_is", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;area_summary&#x27;: &#x27;Ronne Filchner ice shelves [ice sheet mask]&#x27;, &#x27;use_definitions_from&#x27;: &#x27;ronne_filchner&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;antarctica_bedmachine_v2_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [2, 4], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;}"}, {"fullname": "cpom.areas.definitions.ronne_filchner_isfi", "modulename": "cpom.areas.definitions.ronne_filchner_isfi", "kind": "module", "doc": "<h1 id=\"area-definition\">Area definition</h1>\n\n<h2 id=\"summary\">Summary:</h2>\n\n<p>Based on area: ronne_filchner\n<strong>mask: grounded ice + floating ice</strong></p>\n"}, {"fullname": "cpom.areas.definitions.ronne_filchner_isfi.area_definition", "modulename": "cpom.areas.definitions.ronne_filchner_isfi", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;area_summary&#x27;: &#x27;Ronne Filchner ice shelves [ice sheet and ice shelf mask]&#x27;, &#x27;use_definitions_from&#x27;: &#x27;ronne_filchner&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;antarctica_bedmachine_v2_grid_mask&#x27;, &#x27;masktype&#x27;: &#x27;grid&#x27;, &#x27;basin_numbers&#x27;: [2, 3, 4], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;}"}, {"fullname": "cpom.areas.definitions.spirit", "modulename": "cpom.areas.definitions.spirit", "kind": "module", "doc": "<p>Area definition</p>\n"}, {"fullname": "cpom.areas.definitions.spirit.area_definition", "modulename": "cpom.areas.definitions.spirit", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;SPIRIT Zone, E. Antarctica&#x27;, &#x27;hemisphere&#x27;: &#x27;south&#x27;, &#x27;epsg_number&#x27;: 3031, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: False, &#x27;bounding_lat&#x27;: -63.15, &#x27;specify_by_centre&#x27;: True, &#x27;centre_lon&#x27;: 141.0, &#x27;centre_lat&#x27;: -68, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: -67.5, &#x27;llcorner_lon&#x27;: 150.0, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 600, &#x27;height_km&#x27;: 600, &#x27;min_elevation&#x27;: 0.0, &#x27;max_elevation&#x27;: 2400.0, &#x27;minlon&#x27;: 130.0, &#x27;maxlon&#x27;: 152.0, &#x27;minlat&#x27;: -72.0, &#x27;maxlat&#x27;: -64.0, &#x27;apply_area_mask_to_data&#x27;: False, &#x27;maskname&#x27;: &#x27;&#x27;, &#x27;basin_numbers&#x27;: [], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;, &#x27;axes&#x27;: [0.01, 0.16, 0.66, 0.66], &#x27;simple_axes&#x27;: [0.13, 0.16, 0.69, 0.69], &#x27;draw_axis_frame&#x27;: True, &#x27;background_color&#x27;: &#x27;white&#x27;, &#x27;background_image&#x27;: [&#x27;ibcso_bathymetry&#x27;, &#x27;hillshade&#x27;], &#x27;background_image_alpha&#x27;: [0.14, 0.28], &#x27;background_image_resolution&#x27;: &#x27;high&#x27;, &#x27;hillshade_params&#x27;: None, &#x27;show_polygon_overlay_in_main_map&#x27;: True, &#x27;grid_polygon_overlay_mask&#x27;: None, &#x27;apply_hillshade_to_vals&#x27;: False, &#x27;draw_coastlines&#x27;: True, &#x27;coastline_color&#x27;: &#x27;grey&#x27;, &#x27;use_antarctica_medium_coastline&#x27;: True, &#x27;use_cartopy_coastline&#x27;: &#x27;no&#x27;, &#x27;show_gridlines&#x27;: True, &#x27;area_long_name_position&#x27;: (0.29, 0.89), &#x27;area_long_name_fontsize&#x27;: 16, &#x27;area_long_name_position_simple&#x27;: (0.36, 0.92), &#x27;mask_long_name_position&#x27;: (0.26, 0.86), &#x27;mask_long_name_position_simple&#x27;: (0.36, 0.9), &#x27;mask_long_name_fontsize&#x27;: 10, &#x27;varname_annotation_position_xy&#x27;: (0.04, 0.9), &#x27;varname_annotation_position_xy_simple&#x27;: (0.04, 0.91), &#x27;position_stats_manually&#x27;: True, &#x27;nvals_position&#x27;: (0.0, 0.06), &#x27;min_position&#x27;: (0.0, 0.04), &#x27;max_position&#x27;: (0.0, 0.02), &#x27;mean_position&#x27;: (0.2, 0.06), &#x27;median_position&#x27;: (0.2, 0.04), &#x27;mad_position&#x27;: (0.4, 0.06), &#x27;stdev_position&#x27;: (0.4, 0.04), &#x27;stats_position_x_offset&#x27;: 0, &#x27;stats_position_y_offset&#x27;: 0, &#x27;stats_position_x_offset_simple&#x27;: -0.13, &#x27;stats_position_y_offset_simple&#x27;: 0, &#x27;include_flag_legend&#x27;: False, &#x27;flag_legend_xylocation&#x27;: [None, None], &#x27;flag_legend_location&#x27;: &#x27;upper right&#x27;, &#x27;include_flag_percents&#x27;: True, &#x27;flag_perc_axis&#x27;: [0.74, 0.25, 0.1], &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;draw_colorbar&#x27;: True, &#x27;colorbar_orientation&#x27;: &#x27;horizontal&#x27;, &#x27;vertical_colorbar_axes&#x27;: [0.04, 0.05, 0.02, 0.55], &#x27;vertical_colorbar_axes_simple&#x27;: [0.04, 0.05, 0.02, 0.55], &#x27;horizontal_colorbar_axes&#x27;: [0.08, 0.05, 0.55, 0.02], &#x27;horizontal_colorbar_axes_simple&#x27;: [0.22, 0.05, 0.55, 0.02], &#x27;latitude_gridlines&#x27;: [-64, -66, -68, -70], &#x27;longitude_gridlines&#x27;: [135, 140, 145, 150], &#x27;gridline_color&#x27;: &#x27;black&#x27;, &#x27;gridlabel_color&#x27;: &#x27;black&#x27;, &#x27;gridlabel_size&#x27;: 8, &#x27;draw_gridlabels&#x27;: True, &#x27;inner_gridlabel_color&#x27;: &#x27;white&#x27;, &#x27;inner_gridlabel_size&#x27;: 8, &#x27;latitude_of_radial_labels&#x27;: None, &#x27;labels_at_top&#x27;: True, &#x27;labels_at_bottom&#x27;: False, &#x27;labels_at_left&#x27;: True, &#x27;labels_at_right&#x27;: True, &#x27;show_scalebar&#x27;: True, &#x27;mapscale&#x27;: [142, -65.6, 100, -68, 100, &#x27;black&#x27;, 8], &#x27;show_histograms&#x27;: True, &#x27;histogram_plotrange_axes&#x27;: [0.705, 0.3, 0.08, 0.35], &#x27;histogram_fullrange_axes&#x27;: [0.88, 0.3, 0.08, 0.35], &#x27;show_latitude_scatter&#x27;: True, &#x27;latvals_axes&#x27;: [0.75, 0.05, 0.17, 0.2], &#x27;show_bad_data_map&#x27;: True, &#x27;bad_data_minimap_axes&#x27;: [0.8, 0.75, 0.19, 0.19], &#x27;bad_data_minimap_bounding_lat&#x27;: None, &#x27;bad_data_minimap_circle&#x27;: None, &#x27;bad_data_minimap_draw_gridlines&#x27;: True, &#x27;bad_data_minimap_gridlines_color&#x27;: &#x27;lightgrey&#x27;, &#x27;bad_data_latitude_lines&#x27;: [-50, -70], &#x27;bad_data_longitude_lines&#x27;: [0, 60, 120, 180, -120, -60], &#x27;bad_data_minimap_val_scalefactor&#x27;: 1.0, &#x27;bad_data_minimap_legend_pos&#x27;: (0.75, 0.0), &#x27;bad_data_minimap_coastline_resolution&#x27;: &#x27;medium&#x27;, &#x27;show_minimap&#x27;: True, &#x27;minimap_axes&#x27;: [0.63, 0.81, 0.18, 0.18], &#x27;minimap_bounding_lat&#x27;: None, &#x27;minimap_circle&#x27;: [-68, 141, 200000, &#x27;red&#x27;], &#x27;minimap_draw_gridlines&#x27;: True, &#x27;minimap_val_scalefactor&#x27;: 1.0, &#x27;minimap_legend_pos&#x27;: (1.38, 1.1)}"}, {"fullname": "cpom.areas.definitions.vostok", "modulename": "cpom.areas.definitions.vostok", "kind": "module", "doc": "<p>Area definition</p>\n"}, {"fullname": "cpom.areas.definitions.vostok.area_definition", "modulename": "cpom.areas.definitions.vostok", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Lake Vostok, E. Antarctica&#x27;, &#x27;hemisphere&#x27;: &#x27;south&#x27;, &#x27;epsg_number&#x27;: 3031, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: False, &#x27;bounding_lat&#x27;: -63.15, &#x27;specify_by_centre&#x27;: True, &#x27;centre_lon&#x27;: 105.0, &#x27;centre_lat&#x27;: -77.2, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: None, &#x27;llcorner_lon&#x27;: None, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 400, &#x27;height_km&#x27;: 380, &#x27;min_elevation&#x27;: 3478.0, &#x27;max_elevation&#x27;: 3529.0, &#x27;minlon&#x27;: 101.0, &#x27;maxlon&#x27;: 107.5, &#x27;minlat&#x27;: -78.7, &#x27;maxlat&#x27;: -76.1, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;antarctica_bedmachine_v2_grid_mask&#x27;, &#x27;basin_numbers&#x27;: [4], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;, &#x27;axes&#x27;: [0.0, 0.16, 0.67, 0.67], &#x27;simple_axes&#x27;: [0.09, 0.14, 0.76, 0.76], &#x27;draw_axis_frame&#x27;: True, &#x27;background_color&#x27;: None, &#x27;background_image&#x27;: &#x27;moa&#x27;, &#x27;background_image_alpha&#x27;: 1.0, &#x27;background_image_resolution&#x27;: &#x27;high&#x27;, &#x27;hillshade_params&#x27;: None, &#x27;show_polygon_overlay_in_main_map&#x27;: True, &#x27;grid_polygon_overlay_mask&#x27;: None, &#x27;apply_hillshade_to_vals&#x27;: False, &#x27;draw_coastlines&#x27;: False, &#x27;coastline_color&#x27;: &#x27;grey&#x27;, &#x27;use_antarctica_medium_coastline&#x27;: False, &#x27;use_cartopy_coastline&#x27;: &#x27;no&#x27;, &#x27;show_gridlines&#x27;: True, &#x27;area_long_name_position&#x27;: (0.29, 0.89), &#x27;area_long_name_fontsize&#x27;: 16, &#x27;area_long_name_position_simple&#x27;: (0.36, 0.92), &#x27;mask_long_name_position&#x27;: (0.26, 0.86), &#x27;mask_long_name_position_simple&#x27;: (0.36, 0.9), &#x27;mask_long_name_fontsize&#x27;: 10, &#x27;varname_annotation_position_xy&#x27;: (0.04, 0.9), &#x27;varname_annotation_position_xy_simple&#x27;: (0.04, 0.91), &#x27;position_stats_manually&#x27;: True, &#x27;nvals_position&#x27;: (0.0, 0.06), &#x27;min_position&#x27;: (0.0, 0.04), &#x27;max_position&#x27;: (0.0, 0.02), &#x27;mean_position&#x27;: (0.2, 0.06), &#x27;median_position&#x27;: (0.2, 0.04), &#x27;mad_position&#x27;: (0.4, 0.06), &#x27;stdev_position&#x27;: (0.4, 0.04), &#x27;stats_position_x_offset&#x27;: 0, &#x27;stats_position_y_offset&#x27;: 0, &#x27;stats_position_x_offset_simple&#x27;: -0.13, &#x27;stats_position_y_offset_simple&#x27;: 0, &#x27;include_flag_legend&#x27;: False, &#x27;flag_legend_xylocation&#x27;: [None, None], &#x27;flag_legend_location&#x27;: &#x27;upper right&#x27;, &#x27;include_flag_percents&#x27;: True, &#x27;flag_perc_axis&#x27;: [0.74, 0.25, 0.1], &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;draw_colorbar&#x27;: True, &#x27;colorbar_orientation&#x27;: &#x27;horizontal&#x27;, &#x27;vertical_colorbar_axes&#x27;: [0.04, 0.05, 0.02, 0.55], &#x27;vertical_colorbar_axes_simple&#x27;: [0.04, 0.05, 0.02, 0.55], &#x27;horizontal_colorbar_axes&#x27;: [0.08, 0.05, 0.55, 0.02], &#x27;horizontal_colorbar_axes_simple&#x27;: [0.22, 0.05, 0.55, 0.02], &#x27;longitude_gridlines&#x27;: array([ 96,  98, 100, 102, 104, 106, 108, 110, 112]), &#x27;latitude_gridlines&#x27;: array([-79. , -78.5, -78. , -77.5, -77. , -76.5, -76. , -75.5]), &#x27;gridline_color&#x27;: &#x27;lightgrey&#x27;, &#x27;gridlabel_color&#x27;: &#x27;darkgrey&#x27;, &#x27;gridlabel_size&#x27;: 8, &#x27;draw_gridlabels&#x27;: True, &#x27;inner_gridlabel_color&#x27;: &#x27;white&#x27;, &#x27;inner_gridlabel_size&#x27;: 8, &#x27;latitude_of_radial_labels&#x27;: -58.3, &#x27;labels_at_top&#x27;: True, &#x27;labels_at_bottom&#x27;: True, &#x27;labels_at_left&#x27;: True, &#x27;labels_at_right&#x27;: True, &#x27;show_scalebar&#x27;: True, &#x27;mapscale&#x27;: [111, -76.8, 106, -77.5, 100, &#x27;white&#x27;, 6], &#x27;show_histograms&#x27;: True, &#x27;histogram_plotrange_axes&#x27;: [0.705, 0.3, 0.08, 0.35], &#x27;histogram_fullrange_axes&#x27;: [0.86, 0.3, 0.08, 0.35], &#x27;show_latitude_scatter&#x27;: True, &#x27;latvals_axes&#x27;: [0.75, 0.05, 0.17, 0.2], &#x27;show_bad_data_map&#x27;: True, &#x27;bad_data_minimap_axes&#x27;: [0.69, 0.7, 0.25, 0.25], &#x27;bad_data_minimap_bounding_lat&#x27;: None, &#x27;bad_data_minimap_circle&#x27;: None, &#x27;bad_data_minimap_draw_gridlines&#x27;: True, &#x27;bad_data_minimap_gridlines_color&#x27;: &#x27;lightgrey&#x27;, &#x27;bad_data_latitude_lines&#x27;: [-50, -70], &#x27;bad_data_longitude_lines&#x27;: [0, 60, 120, 180, -120, -60], &#x27;bad_data_minimap_val_scalefactor&#x27;: 1.0, &#x27;bad_data_minimap_legend_pos&#x27;: (0.75, 0.2), &#x27;bad_data_minimap_coastline_resolution&#x27;: &#x27;medium&#x27;, &#x27;show_minimap&#x27;: False, &#x27;minimap_axes&#x27;: [0.64, 0.67, 0.29, 0.29], &#x27;minimap_bounding_lat&#x27;: None, &#x27;minimap_circle&#x27;: None, &#x27;minimap_draw_gridlines&#x27;: False, &#x27;minimap_val_scalefactor&#x27;: 1.0, &#x27;minimap_legend_pos&#x27;: (1.38, 1.1)}"}, {"fullname": "cpom.areas.definitions_3d", "modulename": "cpom.areas.definitions_3d", "kind": "module", "doc": "<p>cpom.areas.definitions_3d</p>\n\n<h1 id=\"purpose\">Purpose</h1>\n\n<p>Directory containing CPOM 3D area definitions</p>\n"}, {"fullname": "cpom.areas.definitions_3d.ant_atl14", "modulename": "cpom.areas.definitions_3d.ant_atl14", "kind": "module", "doc": "<p>3D Area Definition</p>\n\n<h1 id=\"antarctica-dem-atl-14-100m\">Antarctica DEM : ATL-14 100m</h1>\n"}, {"fullname": "cpom.areas.definitions_3d.ant_atl14.area_definition", "modulename": "cpom.areas.definitions_3d.ant_atl14", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Antarctica DEM : ATL-14 100m&#x27;, &#x27;hemisphere&#x27;: &#x27;south&#x27;, &#x27;epsg_number&#x27;: 3031, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: True, &#x27;bounding_lat&#x27;: -63.15, &#x27;specify_by_centre&#x27;: False, &#x27;centre_lon&#x27;: 0.0, &#x27;centre_lat&#x27;: -90.0, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: -50.0, &#x27;llcorner_lon&#x27;: 225.0, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 5500, &#x27;height_km&#x27;: 4500, &#x27;min_elevation&#x27;: -50, &#x27;max_elevation&#x27;: 4200, &#x27;minlon&#x27;: 0.0, &#x27;maxlon&#x27;: 360.0, &#x27;minlat&#x27;: -90.0, &#x27;maxlat&#x27;: -62.0, &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;dem_name&#x27;: &#x27;atl14_ant_100m_004_004_zarr&#x27;, &#x27;smooth_dem&#x27;: False, &#x27;page_width&#x27;: 1400, &#x27;dem_stride&#x27;: 50, &#x27;zaxis_multiplier&#x27;: 0.05, &#x27;add_mss_layer&#x27;: True, &#x27;mss_gridarea&#x27;: &#x27;antarctic_ocean&#x27;, &#x27;mss_binsize_km&#x27;: 10, &#x27;view_angle_elevation&#x27;: 90, &#x27;view_angle_azimuth&#x27;: 90, &#x27;plot_zoom&#x27;: 1.2, &#x27;zaxis_limits&#x27;: [-300.0, 4500], &#x27;light_xdirection&#x27;: 10000.0, &#x27;light_ydirection&#x27;: 0, &#x27;light_zdirection&#x27;: 1.0, &#x27;place_annotations&#x27;: ((-80, 190, 3234.0, &#x27;Ross IS&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-76, 302, 200.0, &#x27;Ronne IS&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-70.5, 256, 100.0, &#x27;Amundsen Sea&#x27;, &#x27;white&#x27;, None, 9, 0.9), (-71.5, 315, 100.0, &#x27;Weddell Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-73.5, 190, 100.0, &#x27;Ross Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-67, 278, 100.0, &#x27;Bellingshausen Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-69, 71, 100.0, &#x27;Amery Ice Shelf&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-69, 116, 100.0, &#x27;Totten Glacier&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-75.9, 253.25, 100.0, &#x27;Thwaites Glacier&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-77.3, 106.0, 3500, &#x27;Vostok&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-90.0, 0.0, 2840, &#x27;Pole&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9)), &#x27;lat_annotations&#x27;: ((-70, 220, 150, 10, 2, 0), (-60, 220, 150, 10, 2, 0)), &#x27;lon_annotations&#x27;: ([-66, 120, 150, 10, 2, 0], [-66, 160, 150, 10, 2, 0], [-66, 200, 150, 10, 2, 0], [-66, 240, 150, 10, 2, 0], [-66, 280, 150, 10, 2, 0], [-66, 320, 150, 10, 2, 0], [-66, 0, 150, 10, 2, 0], [-66, 40, 150, 10, 2, 0], [-66, 80, 150, 10, 2, 0]), &#x27;lat_lines&#x27;: range(-60, -80, -10), &#x27;lon_lines&#x27;: range(0, 360, 20), &#x27;latlon_line_colour&#x27;: &#x27;white&#x27;, &#x27;latlon_lines_increment&#x27;: 0.01, &#x27;latlon_lines_size&#x27;: 0.3, &#x27;latlon_lines_opacity&#x27;: 0.5, &#x27;latlon_lines_elevation&#x27;: 200}"}, {"fullname": "cpom.areas.definitions_3d.ant_atl14_a1_ne", "modulename": "cpom.areas.definitions_3d.ant_atl14_a1_ne", "kind": "module", "doc": "<p>3D Area Definition</p>\n\n<h1 id=\"antarctica-dem-1km-rema-gapless-v13\">Antarctica DEM: 1km REMA Gapless v1::3</h1>\n"}, {"fullname": "cpom.areas.definitions_3d.ant_atl14_a1_ne.area_definition", "modulename": "cpom.areas.definitions_3d.ant_atl14_a1_ne", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Antarctica 100m DEM : ATL14 A1 (NE) Sector&#x27;, &#x27;hemisphere&#x27;: &#x27;south&#x27;, &#x27;epsg_number&#x27;: 3031, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: False, &#x27;bounding_lat&#x27;: -63.15, &#x27;specify_by_centre&#x27;: False, &#x27;centre_lon&#x27;: 320.0, &#x27;centre_lat&#x27;: -70.0, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: True, &#x27;llcorner_lat&#x27;: -90, &#x27;llcorner_lon&#x27;: 0.0, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 2630, &#x27;height_km&#x27;: 2270, &#x27;min_elevation&#x27;: -50, &#x27;max_elevation&#x27;: 4200, &#x27;minlon&#x27;: 0.0, &#x27;maxlon&#x27;: 360.0, &#x27;minlat&#x27;: -90.0, &#x27;maxlat&#x27;: -62.0, &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;dem_name&#x27;: &#x27;alt14_ant_a1_100m_004_004_zarr&#x27;, &#x27;smooth_dem&#x27;: False, &#x27;page_width&#x27;: 1400, &#x27;dem_stride&#x27;: 20, &#x27;zaxis_multiplier&#x27;: 0.05, &#x27;add_mss_layer&#x27;: True, &#x27;mss_gridarea&#x27;: &#x27;antarctic_ocean&#x27;, &#x27;mss_binsize_km&#x27;: 10, &#x27;view_angle_elevation&#x27;: 90, &#x27;view_angle_azimuth&#x27;: 90, &#x27;plot_zoom&#x27;: 1.2, &#x27;zaxis_limits&#x27;: [-300.0, 4500], &#x27;light_xdirection&#x27;: 10000.0, &#x27;light_ydirection&#x27;: 0, &#x27;light_zdirection&#x27;: 1.0, &#x27;place_annotations&#x27;: ((-80, 190, 3234.0, &#x27;Ross IS&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-76, 302, 200.0, &#x27;Ronne IS&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-70.5, 256, 100.0, &#x27;Amundsen Sea&#x27;, &#x27;white&#x27;, None, 9, 0.9), (-71.5, 315, 100.0, &#x27;Weddell Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-73.5, 190, 100.0, &#x27;Ross Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-67, 278, 100.0, &#x27;Bellingshausen Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-69, 71, 100.0, &#x27;Amery Ice Shelf&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-69, 116, 100.0, &#x27;Totten Glacier&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-75.9, 253.25, 100.0, &#x27;Thwaites Glacier&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-77.3, 106.0, 3500, &#x27;Vostok&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-90.0, 0.0, 2840, &#x27;Pole&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9)), &#x27;lat_annotations&#x27;: ((-70, 220, 150, 10, 2, 0), (-60, 220, 150, 10, 2, 0)), &#x27;lon_annotations&#x27;: ([-66, 120, 150, 10, 2, 0], [-66, 160, 150, 10, 2, 0], [-66, 200, 150, 10, 2, 0], [-66, 240, 150, 10, 2, 0], [-66, 280, 150, 10, 2, 0], [-66, 320, 150, 10, 2, 0], [-66, 0, 150, 10, 2, 0], [-66, 40, 150, 10, 2, 0], [-66, 80, 150, 10, 2, 0]), &#x27;lat_lines&#x27;: range(-60, -80, -10), &#x27;lon_lines&#x27;: range(0, 360, 20), &#x27;latlon_line_colour&#x27;: &#x27;white&#x27;, &#x27;latlon_lines_increment&#x27;: 0.01, &#x27;latlon_lines_size&#x27;: 0.3, &#x27;latlon_lines_opacity&#x27;: 0.5, &#x27;latlon_lines_elevation&#x27;: 200}"}, {"fullname": "cpom.areas.definitions_3d.ant_atl14_a2_nw", "modulename": "cpom.areas.definitions_3d.ant_atl14_a2_nw", "kind": "module", "doc": "<p>3D Area Definition</p>\n\n<h1 id=\"antarctica-dem-1km-rema-gapless-v13\">Antarctica DEM: 1km REMA Gapless v1::3</h1>\n"}, {"fullname": "cpom.areas.definitions_3d.ant_atl14_a2_nw.area_definition", "modulename": "cpom.areas.definitions_3d.ant_atl14_a2_nw", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Antarctica 100m DEM : ATL14 A2 (NW) Sector&#x27;, &#x27;hemisphere&#x27;: &#x27;south&#x27;, &#x27;epsg_number&#x27;: 3031, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: False, &#x27;bounding_lat&#x27;: -63.15, &#x27;specify_by_centre&#x27;: False, &#x27;centre_lon&#x27;: 320.0, &#x27;centre_lat&#x27;: -70.0, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: True, &#x27;llcorner_lat&#x27;: -65.779, &#x27;llcorner_lon&#x27;: -90.0, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 2670, &#x27;height_km&#x27;: 2270, &#x27;min_elevation&#x27;: -50, &#x27;max_elevation&#x27;: 4200, &#x27;minlon&#x27;: 0.0, &#x27;maxlon&#x27;: 360.0, &#x27;minlat&#x27;: -90.0, &#x27;maxlat&#x27;: -62.0, &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;dem_name&#x27;: &#x27;atl14_ant_100m_004_004_zarr&#x27;, &#x27;smooth_dem&#x27;: False, &#x27;page_width&#x27;: 1400, &#x27;dem_stride&#x27;: 12, &#x27;zaxis_multiplier&#x27;: 0.05, &#x27;add_mss_layer&#x27;: True, &#x27;mss_gridarea&#x27;: &#x27;antarctic_ocean&#x27;, &#x27;mss_binsize_km&#x27;: 10, &#x27;view_angle_elevation&#x27;: 90, &#x27;view_angle_azimuth&#x27;: 90, &#x27;plot_zoom&#x27;: 1.2, &#x27;zaxis_limits&#x27;: [-300.0, 4500], &#x27;light_xdirection&#x27;: 10000.0, &#x27;light_ydirection&#x27;: 0, &#x27;light_zdirection&#x27;: 1.0, &#x27;place_annotations&#x27;: ((-80, 190, 3234.0, &#x27;Ross IS&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-76, 302, 200.0, &#x27;Ronne IS&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-70.5, 256, 100.0, &#x27;Amundsen Sea&#x27;, &#x27;white&#x27;, None, 9, 0.9), (-71.5, 315, 100.0, &#x27;Weddell Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-73.5, 190, 100.0, &#x27;Ross Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-67, 278, 100.0, &#x27;Bellingshausen Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-69, 71, 100.0, &#x27;Amery Ice Shelf&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-69, 116, 100.0, &#x27;Totten Glacier&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-75.9, 253.25, 100.0, &#x27;Thwaites Glacier&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-77.3, 106.0, 3500, &#x27;Vostok&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-90.0, 0.0, 2840, &#x27;Pole&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9)), &#x27;lat_annotations&#x27;: ((-70, 220, 150, 10, 2, 0), (-60, 220, 150, 10, 2, 0)), &#x27;lon_annotations&#x27;: ([-66, 120, 150, 10, 2, 0], [-66, 160, 150, 10, 2, 0], [-66, 200, 150, 10, 2, 0], [-66, 240, 150, 10, 2, 0], [-66, 280, 150, 10, 2, 0], [-66, 320, 150, 10, 2, 0], [-66, 0, 150, 10, 2, 0], [-66, 40, 150, 10, 2, 0], [-66, 80, 150, 10, 2, 0]), &#x27;lat_lines&#x27;: range(-60, -80, -10), &#x27;lon_lines&#x27;: range(0, 360, 20), &#x27;latlon_line_colour&#x27;: &#x27;white&#x27;, &#x27;latlon_lines_increment&#x27;: 0.01, &#x27;latlon_lines_size&#x27;: 0.3, &#x27;latlon_lines_opacity&#x27;: 0.5, &#x27;latlon_lines_elevation&#x27;: 200}"}, {"fullname": "cpom.areas.definitions_3d.ant_atl14_a3_sw", "modulename": "cpom.areas.definitions_3d.ant_atl14_a3_sw", "kind": "module", "doc": "<p>3D Area Definition</p>\n\n<h1 id=\"antarctica-100m-dem-atl14-a3-sw-sector\">Antarctica 100m DEM : ATL14 A3 (SW) Sector</h1>\n"}, {"fullname": "cpom.areas.definitions_3d.ant_atl14_a3_sw.area_definition", "modulename": "cpom.areas.definitions_3d.ant_atl14_a3_sw", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Antarctica 100m DEM : ATL14 A3 (SW) Sector&#x27;, &#x27;hemisphere&#x27;: &#x27;south&#x27;, &#x27;epsg_number&#x27;: 3031, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: False, &#x27;bounding_lat&#x27;: -63.15, &#x27;specify_by_centre&#x27;: False, &#x27;centre_lon&#x27;: 320.0, &#x27;centre_lat&#x27;: -70.0, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: True, &#x27;llcorner_lat&#x27;: -67.852, &#x27;llcorner_lon&#x27;: 235.2, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 2000, &#x27;height_km&#x27;: 1390, &#x27;min_elevation&#x27;: -50, &#x27;max_elevation&#x27;: 4200, &#x27;minlon&#x27;: 0.0, &#x27;maxlon&#x27;: 360.0, &#x27;minlat&#x27;: -90.0, &#x27;maxlat&#x27;: -62.0, &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;dem_name&#x27;: &#x27;alt14_ant_a3_100m_004_004_zarr&#x27;, &#x27;smooth_dem&#x27;: False, &#x27;page_width&#x27;: 1400, &#x27;dem_stride&#x27;: 50, &#x27;zaxis_multiplier&#x27;: 0.05, &#x27;add_mss_layer&#x27;: True, &#x27;mss_gridarea&#x27;: &#x27;antarctic_ocean&#x27;, &#x27;mss_binsize_km&#x27;: 10, &#x27;view_angle_elevation&#x27;: 90, &#x27;view_angle_azimuth&#x27;: 90, &#x27;plot_zoom&#x27;: 1.2, &#x27;zaxis_limits&#x27;: [-300.0, 4500], &#x27;light_xdirection&#x27;: 10000.0, &#x27;light_ydirection&#x27;: 0, &#x27;light_zdirection&#x27;: 1.0, &#x27;place_annotations&#x27;: ((-80, 190, 3234.0, &#x27;Ross IS&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-76, 302, 200.0, &#x27;Ronne IS&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-70.5, 256, 100.0, &#x27;Amundsen Sea&#x27;, &#x27;white&#x27;, None, 9, 0.9), (-71.5, 315, 100.0, &#x27;Weddell Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-73.5, 190, 100.0, &#x27;Ross Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-67, 278, 100.0, &#x27;Bellingshausen Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-69, 71, 100.0, &#x27;Amery Ice Shelf&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-69, 116, 100.0, &#x27;Totten Glacier&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-75.9, 253.25, 100.0, &#x27;Thwaites Glacier&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-77.3, 106.0, 3500, &#x27;Vostok&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-90.0, 0.0, 2840, &#x27;Pole&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9)), &#x27;lat_annotations&#x27;: ((-70, 220, 150, 10, 2, 0), (-60, 220, 150, 10, 2, 0)), &#x27;lon_annotations&#x27;: ([-66, 120, 150, 10, 2, 0], [-66, 160, 150, 10, 2, 0], [-66, 200, 150, 10, 2, 0], [-66, 240, 150, 10, 2, 0], [-66, 280, 150, 10, 2, 0], [-66, 320, 150, 10, 2, 0], [-66, 0, 150, 10, 2, 0], [-66, 40, 150, 10, 2, 0], [-66, 80, 150, 10, 2, 0]), &#x27;lat_lines&#x27;: range(-60, -80, -10), &#x27;lon_lines&#x27;: range(0, 360, 20), &#x27;latlon_line_colour&#x27;: &#x27;white&#x27;, &#x27;latlon_lines_increment&#x27;: 0.01, &#x27;latlon_lines_size&#x27;: 0.3, &#x27;latlon_lines_opacity&#x27;: 0.5, &#x27;latlon_lines_elevation&#x27;: 200}"}, {"fullname": "cpom.areas.definitions_3d.ant_atl14_a4_se", "modulename": "cpom.areas.definitions_3d.ant_atl14_a4_se", "kind": "module", "doc": "<p>3D Area Definition</p>\n\n<h1 id=\"antarctica-100m-dem-atl14-a4-se-sector\">Antarctica 100m DEM : ATL14 A4 (SE) Sector</h1>\n"}, {"fullname": "cpom.areas.definitions_3d.ant_atl14_a4_se.area_definition", "modulename": "cpom.areas.definitions_3d.ant_atl14_a4_se", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Antarctica 100m DEM : ATL14 A4 (SE) Sector&#x27;, &#x27;hemisphere&#x27;: &#x27;south&#x27;, &#x27;epsg_number&#x27;: 3031, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: False, &#x27;bounding_lat&#x27;: -63.15, &#x27;specify_by_centre&#x27;: False, &#x27;centre_lon&#x27;: 320.0, &#x27;centre_lat&#x27;: -70.0, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: True, &#x27;llcorner_lat&#x27;: -70.04, &#x27;llcorner_lon&#x27;: 180.0, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 2790, &#x27;height_km&#x27;: 2190, &#x27;min_elevation&#x27;: -50, &#x27;max_elevation&#x27;: 4200, &#x27;minlon&#x27;: 0.0, &#x27;maxlon&#x27;: 360.0, &#x27;minlat&#x27;: -90.0, &#x27;maxlat&#x27;: -62.0, &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;dem_name&#x27;: &#x27;alt14_ant_a4_100m_004_004_zarr&#x27;, &#x27;smooth_dem&#x27;: False, &#x27;page_width&#x27;: 1400, &#x27;dem_stride&#x27;: 50, &#x27;zaxis_multiplier&#x27;: 0.05, &#x27;add_mss_layer&#x27;: True, &#x27;mss_gridarea&#x27;: &#x27;antarctic_ocean&#x27;, &#x27;mss_binsize_km&#x27;: 10, &#x27;view_angle_elevation&#x27;: 90, &#x27;view_angle_azimuth&#x27;: 90, &#x27;plot_zoom&#x27;: 1.2, &#x27;zaxis_limits&#x27;: [-300.0, 4500], &#x27;light_xdirection&#x27;: 10000.0, &#x27;light_ydirection&#x27;: 0, &#x27;light_zdirection&#x27;: 1.0, &#x27;place_annotations&#x27;: ((-80, 190, 3234.0, &#x27;Ross IS&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-76, 302, 200.0, &#x27;Ronne IS&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-70.5, 256, 100.0, &#x27;Amundsen Sea&#x27;, &#x27;white&#x27;, None, 9, 0.9), (-71.5, 315, 100.0, &#x27;Weddell Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-73.5, 190, 100.0, &#x27;Ross Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-67, 278, 100.0, &#x27;Bellingshausen Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-69, 71, 100.0, &#x27;Amery Ice Shelf&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-69, 116, 100.0, &#x27;Totten Glacier&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-75.9, 253.25, 100.0, &#x27;Thwaites Glacier&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-77.3, 106.0, 3500, &#x27;Vostok&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-90.0, 0.0, 2840, &#x27;Pole&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9)), &#x27;lat_annotations&#x27;: ((-70, 220, 150, 10, 2, 0), (-60, 220, 150, 10, 2, 0)), &#x27;lon_annotations&#x27;: ([-66, 120, 150, 10, 2, 0], [-66, 160, 150, 10, 2, 0], [-66, 200, 150, 10, 2, 0], [-66, 240, 150, 10, 2, 0], [-66, 280, 150, 10, 2, 0], [-66, 320, 150, 10, 2, 0], [-66, 0, 150, 10, 2, 0], [-66, 40, 150, 10, 2, 0], [-66, 80, 150, 10, 2, 0]), &#x27;lat_lines&#x27;: range(-60, -80, -10), &#x27;lon_lines&#x27;: range(0, 360, 20), &#x27;latlon_line_colour&#x27;: &#x27;white&#x27;, &#x27;latlon_lines_increment&#x27;: 0.01, &#x27;latlon_lines_size&#x27;: 0.3, &#x27;latlon_lines_opacity&#x27;: 0.5, &#x27;latlon_lines_elevation&#x27;: 200}"}, {"fullname": "cpom.areas.definitions_3d.antarctica", "modulename": "cpom.areas.definitions_3d.antarctica", "kind": "module", "doc": "<p>3D Area Definition</p>\n\n<h1 id=\"antarctica-dem-1km-rema-gapless-v13\">Antarctica DEM: 1km REMA Gapless v1::3</h1>\n"}, {"fullname": "cpom.areas.definitions_3d.antarctica.area_definition", "modulename": "cpom.areas.definitions_3d.antarctica", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Antarctica DEM: 1km REMA Gapless v1::3&#x27;, &#x27;hemisphere&#x27;: &#x27;south&#x27;, &#x27;epsg_number&#x27;: 3031, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: True, &#x27;bounding_lat&#x27;: -63.15, &#x27;specify_by_centre&#x27;: False, &#x27;centre_lon&#x27;: 0.0, &#x27;centre_lat&#x27;: -90.0, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: -50.0, &#x27;llcorner_lon&#x27;: 225.0, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 5500, &#x27;height_km&#x27;: 4500, &#x27;min_elevation&#x27;: -50, &#x27;max_elevation&#x27;: 4200, &#x27;minlon&#x27;: 0.0, &#x27;maxlon&#x27;: 360.0, &#x27;minlat&#x27;: -90.0, &#x27;maxlat&#x27;: -62.0, &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;dem_name&#x27;: &#x27;rema_gapless_1km_zarr&#x27;, &#x27;smooth_dem&#x27;: True, &#x27;page_width&#x27;: 1400, &#x27;dem_stride&#x27;: 3, &#x27;zaxis_multiplier&#x27;: 0.05, &#x27;add_mss_layer&#x27;: True, &#x27;mss_gridarea&#x27;: &#x27;antarctic_ocean&#x27;, &#x27;mss_binsize_km&#x27;: 10, &#x27;view_angle_elevation&#x27;: 90, &#x27;view_angle_azimuth&#x27;: 90, &#x27;plot_zoom&#x27;: 1.2, &#x27;zaxis_limits&#x27;: [-300.0, 4500], &#x27;light_xdirection&#x27;: 10000.0, &#x27;light_ydirection&#x27;: 0, &#x27;light_zdirection&#x27;: 1.0, &#x27;place_annotations&#x27;: ((-80, 190, 3234.0, &#x27;Ross IS&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-76, 302, 200.0, &#x27;Ronne IS&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-70.5, 256, 100.0, &#x27;Amundsen Sea&#x27;, &#x27;white&#x27;, None, 9, 0.9), (-71.5, 315, 100.0, &#x27;Weddell Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-73.5, 190, 100.0, &#x27;Ross Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-67, 278, 100.0, &#x27;Bellingshausen Sea&#x27;, &#x27;white&#x27;, None, 10, 0.9), (-69, 71, 100.0, &#x27;Amery Ice Shelf&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-69, 116, 100.0, &#x27;Totten Glacier&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-75.9, 253.25, 100.0, &#x27;Thwaites Glacier&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-77.3, 106.0, 3500, &#x27;Vostok&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9), (-90.0, 0.0, 2840, &#x27;Pole&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9)), &#x27;lat_annotations&#x27;: ((-70, 220, 150, 10, 2, 0), (-60, 220, 150, 10, 2, 0)), &#x27;lon_annotations&#x27;: ([-66, 120, 150, 10, 2, 0], [-66, 160, 150, 10, 2, 0], [-66, 200, 150, 10, 2, 0], [-66, 240, 150, 10, 2, 0], [-66, 280, 150, 10, 2, 0], [-66, 320, 150, 10, 2, 0], [-66, 0, 150, 10, 2, 0], [-66, 40, 150, 10, 2, 0], [-66, 80, 150, 10, 2, 0]), &#x27;lat_lines&#x27;: range(-60, -80, -10), &#x27;lon_lines&#x27;: range(0, 360, 20), &#x27;latlon_line_colour&#x27;: &#x27;white&#x27;, &#x27;latlon_lines_increment&#x27;: 0.01, &#x27;latlon_lines_size&#x27;: 0.3, &#x27;latlon_lines_opacity&#x27;: 0.5, &#x27;latlon_lines_elevation&#x27;: 200}"}, {"fullname": "cpom.areas.definitions_3d.ase", "modulename": "cpom.areas.definitions_3d.ase", "kind": "module", "doc": "<p>3D Area Definition</p>\n\n<h1 id=\"amundsen-sea-embayment-west-antarctica-dem-1km-rema-gapless-v11\">Amundsen Sea Embayment, West Antarctica DEM: 1km REMA Gapless v1::1</h1>\n"}, {"fullname": "cpom.areas.definitions_3d.ase.area_definition", "modulename": "cpom.areas.definitions_3d.ase", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Amundsen Sea Embayment DEM: 1km REMA Gapless v1::1&#x27;, &#x27;hemisphere&#x27;: &#x27;south&#x27;, &#x27;epsg_number&#x27;: 3031, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: False, &#x27;bounding_lat&#x27;: None, &#x27;specify_by_centre&#x27;: True, &#x27;centre_lon&#x27;: -103.0, &#x27;centre_lat&#x27;: -75.0, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: None, &#x27;llcorner_lon&#x27;: None, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 900, &#x27;height_km&#x27;: 900, &#x27;min_elevation&#x27;: -500, &#x27;max_elevation&#x27;: 2900, &#x27;minlon&#x27;: 0, &#x27;maxlon&#x27;: 360, &#x27;minlat&#x27;: -80, &#x27;maxlat&#x27;: -71, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;ase_xylimits_mask&#x27;, &#x27;masktype&#x27;: &#x27;xylimits&#x27;, &#x27;basin_numbers&#x27;: [], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;, &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;dem_name&#x27;: &#x27;rema_gapless_1km_zarr&#x27;, &#x27;smooth_dem&#x27;: False, &#x27;page_width&#x27;: 1300, &#x27;dem_stride&#x27;: 1, &#x27;zaxis_multiplier&#x27;: 0.07, &#x27;add_mss_layer&#x27;: True, &#x27;mss_gridarea&#x27;: &#x27;antarctic_ocean&#x27;, &#x27;mss_binsize_km&#x27;: 10, &#x27;view_angle_elevation&#x27;: 45, &#x27;view_angle_azimuth&#x27;: 215, &#x27;plot_zoom&#x27;: 0.8, &#x27;zaxis_limits&#x27;: [-100.0, 2500], &#x27;light_xdirection&#x27;: 10000.0, &#x27;light_ydirection&#x27;: 0, &#x27;light_zdirection&#x27;: 1.0, &#x27;place_annotations&#x27;: ([-74.1, 253, 100.0, &#x27;Pine Island Bay&#x27;, &#x27;white&#x27;, None, 11, 0.9], [-73.2, 253, 100.0, &#x27;AMUNDSEN SEA&#x27;, &#x27;white&#x27;, None, 13, 0.9], [-75.9, 253.25, 100.0, &#x27;Thwaites Glacier&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9], [-74.4, -112.667, 150.0, &#x27;Dotson Ice Shelf&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 11, 0.9], [-75.5, 265, 150.0, &#x27;Pine Island Glacier&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 10, 0.9], [-78.6, 255, 600.0, &#x27;WEST ANTARCTIC ICE SHEET&#x27;, &#x27;Black&#x27;, &#x27;White&#x27;, 9, 0.9], [-73.08333, -105.1, 150, &#x27;Burke Island&#x27;, &#x27;White&#x27;, None, 10, 0.9]), &#x27;lat_annotations&#x27;: ([-72, 254, 150, 8, 2, 0], [-74, 254, 150, 8, 2, 0]), &#x27;lon_annotations&#x27;: ([-73, 250, 150, 8, 2, 0], [-73, 245, 150, 8, 2, 0], [-71.8, 265, 150, 8, 2, 0], [-71.8, 255, 150, 8, 2, 0], [-71.5, 260, 150, 8, 2, 0], [-71.8, 270, 150, 8, 2, 0]), &#x27;lat_lines&#x27;: (-72, -74), &#x27;lon_lines&#x27;: (245, 250, 255, 260, 265, 270), &#x27;latlon_line_colour&#x27;: &#x27;white&#x27;, &#x27;latlon_lines_increment&#x27;: 0.01, &#x27;latlon_lines_size&#x27;: 0.8, &#x27;latlon_lines_opacity&#x27;: 0.5, &#x27;latlon_lines_elevation&#x27;: 200}"}, {"fullname": "cpom.areas.definitions_3d.greenland", "modulename": "cpom.areas.definitions_3d.greenland", "kind": "module", "doc": "<p>3D Area Definition</p>\n\n<h1 id=\"greenland-dem-arcticdem-1km4\">Greenland DEM: ArcticDEM 1km::4</h1>\n"}, {"fullname": "cpom.areas.definitions_3d.greenland.area_definition", "modulename": "cpom.areas.definitions_3d.greenland", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Greenland DEM: ArcticDEM 1km::4&#x27;, &#x27;hemisphere&#x27;: &#x27;north&#x27;, &#x27;epsg_number&#x27;: 3413, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: False, &#x27;bounding_lat&#x27;: None, &#x27;specify_by_centre&#x27;: True, &#x27;centre_lon&#x27;: -41.75, &#x27;centre_lat&#x27;: 71.5, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: None, &#x27;llcorner_lon&#x27;: None, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 1540, &#x27;height_km&#x27;: 2740, &#x27;min_elevation&#x27;: -50, &#x27;max_elevation&#x27;: 4200, &#x27;minlon&#x27;: 285.0, &#x27;maxlon&#x27;: 350.0, &#x27;minlat&#x27;: 59.0, &#x27;maxlat&#x27;: 85.0, &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;apply_area_mask_to_data&#x27;: False, &#x27;maskname&#x27;: None, &#x27;masktype&#x27;: None, &#x27;basin_numbers&#x27;: None, &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;, &#x27;dem_name&#x27;: &#x27;arcticdem_1km_greenland_v4.1_zarr&#x27;, &#x27;smooth_dem&#x27;: True, &#x27;page_width&#x27;: 1400, &#x27;dem_stride&#x27;: 2, &#x27;zaxis_multiplier&#x27;: 0.04, &#x27;add_mss_layer&#x27;: True, &#x27;mss_gridarea&#x27;: &#x27;greenland&#x27;, &#x27;mss_binsize_km&#x27;: 10, &#x27;view_angle_elevation&#x27;: 90, &#x27;view_angle_azimuth&#x27;: 90, &#x27;plot_zoom&#x27;: 1.2, &#x27;zaxis_limits&#x27;: [-200.0, 4000], &#x27;light_xdirection&#x27;: 10000.0, &#x27;light_ydirection&#x27;: 0, &#x27;light_zdirection&#x27;: 1.0, &#x27;lat_lines&#x27;: range(60, 85, 5), &#x27;lon_lines&#x27;: (350, 340, 330, 320, 310, 300), &#x27;latlon_line_colour&#x27;: &#x27;white&#x27;, &#x27;latlon_lines_increment&#x27;: 0.01, &#x27;latlon_lines_size&#x27;: 0.8, &#x27;latlon_lines_opacity&#x27;: 0.5, &#x27;latlon_lines_elevation&#x27;: 350, &#x27;lat_annotations&#x27;: ((65, 325, 350, 10, 20, 0), (60, 325, 350, 10, 20, 0), (80, 355, 350, 10, 4, 0), (70, 301, 350, 10, 10, -15), (75, 342, 350, 10, 10, 0)), &#x27;lon_annotations&#x27;: ((62.5, 330, 350, 10, -30, 0), (62.5, 320, 350, 10, 2, 0), (72.5, 300, 350, 10, -30, 0)), &#x27;place_annotations&#x27;: ((64, 302, 350, &#x27;Davis Strait&#x27;, &#x27;White&#x27;, None, 10, 0.9), (61, 325, 350, &#x27;N Atlantic&#x27;, &#x27;White&#x27;, None, 10, 0.9))}"}, {"fullname": "cpom.areas.definitions_3d.grn_atl14", "modulename": "cpom.areas.definitions_3d.grn_atl14", "kind": "module", "doc": "<p>3D Area Definition</p>\n\n<h1 id=\"greenland-dem-arcticdem-1km4\">Greenland DEM: ArcticDEM 1km::4</h1>\n"}, {"fullname": "cpom.areas.definitions_3d.grn_atl14.area_definition", "modulename": "cpom.areas.definitions_3d.grn_atl14", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Greenland DEM: ArcticDEM 1km::4&#x27;, &#x27;hemisphere&#x27;: &#x27;north&#x27;, &#x27;epsg_number&#x27;: 3413, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: False, &#x27;bounding_lat&#x27;: None, &#x27;specify_by_centre&#x27;: True, &#x27;centre_lon&#x27;: -41.75, &#x27;centre_lat&#x27;: 71.5, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: None, &#x27;llcorner_lon&#x27;: None, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 1540, &#x27;height_km&#x27;: 2740, &#x27;min_elevation&#x27;: -50, &#x27;max_elevation&#x27;: 4200, &#x27;minlon&#x27;: 285.0, &#x27;maxlon&#x27;: 350.0, &#x27;minlat&#x27;: 59.0, &#x27;maxlat&#x27;: 85.0, &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;apply_area_mask_to_data&#x27;: False, &#x27;maskname&#x27;: None, &#x27;masktype&#x27;: None, &#x27;basin_numbers&#x27;: None, &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;, &#x27;dem_name&#x27;: &#x27;atl14_grn_100m_004_003_zarr&#x27;, &#x27;smooth_dem&#x27;: False, &#x27;page_width&#x27;: 1400, &#x27;dem_stride&#x27;: 50, &#x27;zaxis_multiplier&#x27;: 0.04, &#x27;add_mss_layer&#x27;: True, &#x27;mss_gridarea&#x27;: &#x27;greenland&#x27;, &#x27;mss_binsize_km&#x27;: 10, &#x27;view_angle_elevation&#x27;: 90, &#x27;view_angle_azimuth&#x27;: 90, &#x27;plot_zoom&#x27;: 1.2, &#x27;zaxis_limits&#x27;: [-200.0, 4000], &#x27;light_xdirection&#x27;: 10000.0, &#x27;light_ydirection&#x27;: 0, &#x27;light_zdirection&#x27;: 1.0, &#x27;lat_lines&#x27;: range(60, 85, 5), &#x27;lon_lines&#x27;: (350, 340, 330, 320, 310, 300), &#x27;latlon_line_colour&#x27;: &#x27;white&#x27;, &#x27;latlon_lines_increment&#x27;: 0.01, &#x27;latlon_lines_size&#x27;: 0.8, &#x27;latlon_lines_opacity&#x27;: 0.5, &#x27;latlon_lines_elevation&#x27;: 350, &#x27;lat_annotations&#x27;: ((65, 325, 350, 10, 20, 0), (60, 325, 350, 10, 20, 0), (80, 355, 350, 10, 4, 0), (70, 301, 350, 10, 10, -15), (75, 342, 350, 10, 10, 0)), &#x27;lon_annotations&#x27;: ((62.5, 330, 350, 10, -30, 0), (62.5, 320, 350, 10, 2, 0), (72.5, 300, 350, 10, -30, 0)), &#x27;place_annotations&#x27;: ((64, 302, 350, &#x27;Davis Strait&#x27;, &#x27;White&#x27;, None, 10, 0.9), (61, 325, 350, &#x27;N Atlantic&#x27;, &#x27;White&#x27;, None, 10, 0.9))}"}, {"fullname": "cpom.areas.definitions_3d.grn_testarea", "modulename": "cpom.areas.definitions_3d.grn_testarea", "kind": "module", "doc": "<p>3D Area Definition</p>\n\n<h1 id=\"greenland-dem-arcticdem-1km4\">Greenland DEM: ArcticDEM 1km::4</h1>\n"}, {"fullname": "cpom.areas.definitions_3d.grn_testarea.area_definition", "modulename": "cpom.areas.definitions_3d.grn_testarea", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Greenland Test Area&#x27;, &#x27;hemisphere&#x27;: &#x27;north&#x27;, &#x27;epsg_number&#x27;: 3413, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: False, &#x27;bounding_lat&#x27;: None, &#x27;specify_by_centre&#x27;: True, &#x27;centre_lon&#x27;: -41, &#x27;centre_lat&#x27;: 70, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: None, &#x27;llcorner_lon&#x27;: None, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 500, &#x27;height_km&#x27;: 500, &#x27;min_elevation&#x27;: -50, &#x27;max_elevation&#x27;: 4200, &#x27;minlon&#x27;: 285.0, &#x27;maxlon&#x27;: 350.0, &#x27;minlat&#x27;: 59.0, &#x27;maxlat&#x27;: 85.0, &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;apply_area_mask_to_data&#x27;: False, &#x27;maskname&#x27;: None, &#x27;masktype&#x27;: None, &#x27;basin_numbers&#x27;: None, &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;, &#x27;dem_name&#x27;: &#x27;arcticdem_100m_greenland_v4.1_zarr&#x27;, &#x27;smooth_dem&#x27;: False, &#x27;page_width&#x27;: 1400, &#x27;dem_stride&#x27;: 4, &#x27;zaxis_multiplier&#x27;: 0.2, &#x27;add_mss_layer&#x27;: False, &#x27;mss_gridarea&#x27;: &#x27;greenland&#x27;, &#x27;mss_binsize_km&#x27;: 10, &#x27;view_angle_elevation&#x27;: 90, &#x27;view_angle_azimuth&#x27;: 90, &#x27;plot_zoom&#x27;: 1.2, &#x27;zaxis_limits&#x27;: [-200.0, 4000], &#x27;light_xdirection&#x27;: 10000.0, &#x27;light_ydirection&#x27;: 0, &#x27;light_zdirection&#x27;: 1.0, &#x27;lat_lines&#x27;: range(68, 73), &#x27;lon_lines&#x27;: (316, 320, 324), &#x27;latlon_line_colour&#x27;: &#x27;darkgrey&#x27;, &#x27;latlon_lines_increment&#x27;: 0.01, &#x27;latlon_lines_size&#x27;: 2.0, &#x27;latlon_lines_opacity&#x27;: 0.5, &#x27;latlon_lines_elevation&#x27;: None, &#x27;raise_latlon_lines_above_dem&#x27;: 20, &#x27;lat_annotations&#x27;: ((68, 320, 2600, 10, 0, 0), (69, 320, 2600, 10, 0, 0), (70, 320, 2600, 10, 0, 0), (71, 320, 2600, 10, 0, 0)), &#x27;lon_annotations&#x27;: ((68.5, 316, 350, 10, 0, 0), (68.5, 320, 350, 10, 0, 0)), &#x27;place_annotations&#x27;: ()}"}, {"fullname": "cpom.areas.definitions_3d.vostok", "modulename": "cpom.areas.definitions_3d.vostok", "kind": "module", "doc": "<p>3D Area Definition</p>\n\n<h1 id=\"lake-vostok\">Lake Vostok</h1>\n"}, {"fullname": "cpom.areas.definitions_3d.vostok.area_definition", "modulename": "cpom.areas.definitions_3d.vostok", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Lake Vostok, E. Antarctica, 400km sq. Area, DEM 1km::1&#x27;, &#x27;hemisphere&#x27;: &#x27;south&#x27;, &#x27;epsg_number&#x27;: 3031, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: False, &#x27;bounding_lat&#x27;: -63.15, &#x27;specify_by_centre&#x27;: True, &#x27;centre_lon&#x27;: 105.0, &#x27;centre_lat&#x27;: -77.2, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: None, &#x27;llcorner_lon&#x27;: None, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 400, &#x27;height_km&#x27;: 400, &#x27;min_elevation&#x27;: 3478.0, &#x27;max_elevation&#x27;: 3529.0, &#x27;minlon&#x27;: 101.0, &#x27;maxlon&#x27;: 107.5, &#x27;minlat&#x27;: -78.7, &#x27;maxlat&#x27;: -76.1, &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;antarctica_bedmachine_v2_grid_mask&#x27;, &#x27;basin_numbers&#x27;: [4], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;, &#x27;dem_name&#x27;: &#x27;rema_ant_1km_zarr&#x27;, &#x27;smooth_dem&#x27;: False, &#x27;page_width&#x27;: 1200, &#x27;dem_stride&#x27;: 10, &#x27;zaxis_multiplier&#x27;: 0.7, &#x27;add_mss_layer&#x27;: False, &#x27;mss_gridarea&#x27;: &#x27;antarctic_ocean&#x27;, &#x27;mss_binsize_km&#x27;: 10, &#x27;view_angle_elevation&#x27;: 35, &#x27;view_angle_azimuth&#x27;: 330, &#x27;plot_zoom&#x27;: 1.15, &#x27;zaxis_limits&#x27;: [2400.0, 4000], &#x27;light_xdirection&#x27;: 10000.0, &#x27;light_ydirection&#x27;: 10, &#x27;light_zdirection&#x27;: 0.0}"}, {"fullname": "cpom.areas.definitions_3d.vostok_600km", "modulename": "cpom.areas.definitions_3d.vostok_600km", "kind": "module", "doc": "<p>3D Area Definition</p>\n\n<h1 id=\"lake-vostok-at-600km-using-100m-rema-gapless-dem-sampled-by-5\">Lake Vostok at 600km using 100m REMA Gapless DEM (sampled by 5)</h1>\n"}, {"fullname": "cpom.areas.definitions_3d.vostok_600km.area_definition", "modulename": "cpom.areas.definitions_3d.vostok_600km", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Lake Vostok, E. Antarctica, 600km sq. Area, DEM 100m::5&#x27;, &#x27;use_definitions_from&#x27;: &#x27;vostok&#x27;, &#x27;width_km&#x27;: 600, &#x27;height_km&#x27;: 600, &#x27;dem_name&#x27;: &#x27;rema_ant_1km_zarr&#x27;, &#x27;page_width&#x27;: 1500, &#x27;dem_stride&#x27;: 1, &#x27;zaxis_multiplier&#x27;: 0.25}"}, {"fullname": "cpom.areas.definitions_3d.vostok_800km", "modulename": "cpom.areas.definitions_3d.vostok_800km", "kind": "module", "doc": "<p>3D Area Definition</p>\n\n<h1 id=\"lake-vostok-at-800km-using-100m-rema-gapless-dem-sampled-by-4\">Lake Vostok at 800km using 100m REMA Gapless DEM (sampled by 4)</h1>\n"}, {"fullname": "cpom.areas.definitions_3d.vostok_800km.area_definition", "modulename": "cpom.areas.definitions_3d.vostok_800km", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Lake Vostok, E. Antarctica, 800km sq. Area, DEM 100m::4&#x27;, &#x27;use_definitions_from&#x27;: &#x27;vostok&#x27;, &#x27;width_km&#x27;: 800, &#x27;height_km&#x27;: 800, &#x27;dem_name&#x27;: &#x27;rema_gapless_100m_zarr&#x27;, &#x27;page_width&#x27;: 1500, &#x27;dem_stride&#x27;: 4, &#x27;zaxis_multiplier&#x27;: 0.3}"}, {"fullname": "cpom.areas.definitions_3d.vostok_atl14", "modulename": "cpom.areas.definitions_3d.vostok_atl14", "kind": "module", "doc": "<p>3D Area Definition</p>\n\n<h1 id=\"lake-vostok\">Lake Vostok</h1>\n"}, {"fullname": "cpom.areas.definitions_3d.vostok_atl14.area_definition", "modulename": "cpom.areas.definitions_3d.vostok_atl14", "qualname": "area_definition", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;long_name&#x27;: &#x27;Lake Vostok, E. Antarctica, 400km sq. Area, DEM 1km::1&#x27;, &#x27;hemisphere&#x27;: &#x27;south&#x27;, &#x27;epsg_number&#x27;: 3031, &#x27;round&#x27;: False, &#x27;specify_by_bounding_lat&#x27;: False, &#x27;bounding_lat&#x27;: -63.15, &#x27;specify_by_centre&#x27;: True, &#x27;centre_lon&#x27;: 105.0, &#x27;centre_lat&#x27;: -77.2, &#x27;specify_plot_area_by_lowerleft_corner&#x27;: False, &#x27;llcorner_lat&#x27;: None, &#x27;llcorner_lon&#x27;: None, &#x27;lon_0&#x27;: None, &#x27;width_km&#x27;: 400, &#x27;height_km&#x27;: 400, &#x27;min_elevation&#x27;: 3478.0, &#x27;max_elevation&#x27;: 3529.0, &#x27;minlon&#x27;: 101.0, &#x27;maxlon&#x27;: 107.5, &#x27;minlat&#x27;: -78.7, &#x27;maxlat&#x27;: -76.1, &#x27;cmap_name&#x27;: &#x27;RdYlBu_r&#x27;, &#x27;cmap_over_color&#x27;: &#x27;#A85754&#x27;, &#x27;cmap_under_color&#x27;: &#x27;#3E4371&#x27;, &#x27;cmap_extend&#x27;: &#x27;both&#x27;, &#x27;apply_area_mask_to_data&#x27;: True, &#x27;maskname&#x27;: &#x27;antarctica_bedmachine_v2_grid_mask&#x27;, &#x27;basin_numbers&#x27;: [4], &#x27;show_polygon_mask&#x27;: False, &#x27;polygon_mask_color&#x27;: &#x27;red&#x27;, &#x27;dem_name&#x27;: &#x27;atl14_ant_100m_004_004_zarr&#x27;, &#x27;smooth_dem&#x27;: False, &#x27;page_width&#x27;: 1200, &#x27;dem_stride&#x27;: 10, &#x27;zaxis_multiplier&#x27;: 0.7, &#x27;add_mss_layer&#x27;: False, &#x27;mss_gridarea&#x27;: &#x27;antarctic_ocean&#x27;, &#x27;mss_binsize_km&#x27;: 10, &#x27;view_angle_elevation&#x27;: 35, &#x27;view_angle_azimuth&#x27;: 330, &#x27;plot_zoom&#x27;: 1.15, &#x27;zaxis_limits&#x27;: [2400.0, 4000], &#x27;light_xdirection&#x27;: 10000.0, &#x27;light_ydirection&#x27;: 10, &#x27;light_zdirection&#x27;: 0.0}"}, {"fullname": "cpom.areas.tests", "modulename": "cpom.areas.tests", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "cpom.areas.tests.test_area_plot3d", "modulename": "cpom.areas.tests.test_area_plot3d", "kind": "module", "doc": "<p>pytests of cpom.areas.area_plot3d.py</p>\n"}, {"fullname": "cpom.areas.tests.test_area_plot3d.pytestmark", "modulename": "cpom.areas.tests.test_area_plot3d", "qualname": "pytestmark", "kind": "variable", "doc": "<p></p>\n", "default_value": "MarkDecorator(mark=Mark(name=&#x27;plots&#x27;, args=(), kwargs={}))"}, {"fullname": "cpom.areas.tests.test_area_plot3d.test_area_plot3d", "modulename": "cpom.areas.tests.test_area_plot3d", "qualname": "test_area_plot3d", "kind": "function", "doc": "<p>pytest of cpom.areas.area_plot3d.py</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.tests.test_areas", "modulename": "cpom.areas.tests.test_areas", "kind": "module", "doc": "<p>pytests for clev2er.utils.areas.areas.py</p>\n"}, {"fullname": "cpom.areas.tests.test_areas.pytestmark", "modulename": "cpom.areas.tests.test_areas", "qualname": "pytestmark", "kind": "variable", "doc": "<p></p>\n", "default_value": "MarkDecorator(mark=Mark(name=&#x27;requires_external_data&#x27;, args=(), kwargs={}))"}, {"fullname": "cpom.areas.tests.test_areas.test_bad_area_name", "modulename": "cpom.areas.tests.test_areas", "qualname": "test_bad_area_name", "kind": "function", "doc": "<p>pytest to check for handling of invalid area names</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.areas.tests.test_areas.test_good_area_name", "modulename": "cpom.areas.tests.test_areas", "qualname": "test_good_area_name", "kind": "function", "doc": "<p>pytest to check for handling of valid area names</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.backgrounds", "modulename": "cpom.backgrounds", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "cpom.backgrounds.backgrounds", "modulename": "cpom.backgrounds.backgrounds", "kind": "module", "doc": "<p>Class to manage background images for polar plotting</p>\n"}, {"fullname": "cpom.backgrounds.backgrounds.log", "modulename": "cpom.backgrounds.backgrounds", "qualname": "log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger cpom.backgrounds.backgrounds (WARNING)&gt;"}, {"fullname": "cpom.backgrounds.backgrounds.all_backgrounds", "modulename": "cpom.backgrounds.backgrounds", "qualname": "all_backgrounds", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;basic_land&#x27;: [&#x27;antarctica_is&#x27;], &#x27;basic_land_black&#x27;: [&#x27;antarctica_is&#x27;], &#x27;cartopy_stock&#x27;: [&#x27;antarctica_is&#x27;, &#x27;arctic&#x27;], &#x27;cartopy_stock_ocean&#x27;: [&#x27;antarctica_is&#x27;, &#x27;arctic&#x27;], &#x27;arcgis_shaded_relief&#x27;: [&#x27;antarctica_is&#x27;, &#x27;arctic&#x27;], &#x27;bluemarble&#x27;: [&#x27;antarctica_is&#x27;, &#x27;arctic&#x27;], &#x27;natural_earth_cbh&#x27;: [&#x27;antarctica_is&#x27;, &#x27;arctic&#x27;], &#x27;natural_earth_cbh_oceanmasked&#x27;: [&#x27;antarctica_is&#x27;, &#x27;arctic&#x27;], &#x27;natural_earth_cbh_ocean&#x27;: [&#x27;antarctica_is&#x27;, &#x27;arctic&#x27;], &#x27;natural_earth_gray&#x27;: [&#x27;antarctica_is&#x27;, &#x27;arctic&#x27;], &#x27;natural_earth1&#x27;: [&#x27;antarctica_is&#x27;, &#x27;arctic&#x27;], &#x27;stamen&#x27;: [&#x27;antarctica_is&#x27;, &#x27;arctic&#x27;], &#x27;natural_earth_faded&#x27;: [&#x27;antarctica_is&#x27;, &#x27;arctic&#x27;], &#x27;moa&#x27;: [&#x27;antarctica_is&#x27;, &#x27;vostok&#x27;], &#x27;cpom_dem&#x27;: [&#x27;antarctica_is&#x27;], &#x27;awi_gis_dem&#x27;: [&#x27;greenland&#x27;], &#x27;arcticdem_1km&#x27;: [&#x27;arctic&#x27;], &#x27;rema_dem_1km&#x27;: [&#x27;antarctica_is&#x27;], &#x27;grn_s1_mosaic&#x27;: [&#x27;greenland&#x27;], &#x27;hillshade&#x27;: [&#x27;antarctica_is&#x27;, &#x27;greenland&#x27;], &#x27;ant_iceshelves&#x27;: [&#x27;antarctica_is&#x27;], &#x27;ibcso_bathymetry&#x27;: [&#x27;antarctica_is&#x27;], &#x27;ibcao_bathymetry&#x27;: [&#x27;arctic&#x27;]}"}, {"fullname": "cpom.backgrounds.backgrounds.all_background_resolutions", "modulename": "cpom.backgrounds.backgrounds", "qualname": "all_background_resolutions", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;low&#x27;, &#x27;medium&#x27;, &#x27;high&#x27;, &#x27;vhigh&#x27;, &#x27;vvhigh&#x27;]"}, {"fullname": "cpom.backgrounds.backgrounds.Background", "modulename": "cpom.backgrounds.backgrounds", "qualname": "Background", "kind": "class", "doc": "<p>class to handle background images</p>\n"}, {"fullname": "cpom.backgrounds.backgrounds.Background.__init__", "modulename": "cpom.backgrounds.backgrounds", "qualname": "Background.__init__", "kind": "function", "doc": "<p>class initialization</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>name (str):</strong>  background name</li>\n<li><strong>area (str):</strong>  area name from cpom.areas.areas</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">area</span></span>)</span>"}, {"fullname": "cpom.backgrounds.backgrounds.Background.name", "modulename": "cpom.backgrounds.backgrounds", "qualname": "Background.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.backgrounds.backgrounds.Background.moa_image", "modulename": "cpom.backgrounds.backgrounds", "qualname": "Background.moa_image", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.backgrounds.backgrounds.Background.moa_zimage", "modulename": "cpom.backgrounds.backgrounds", "qualname": "Background.moa_zimage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.backgrounds.backgrounds.Background.load", "modulename": "cpom.backgrounds.backgrounds", "qualname": "Background.load", "kind": "function", "doc": "<p>param: ax : axis\nparam: dataprj : cartopy coordinate reference system (crs)\nparam: background: replace default background image (thisarea.background_image) for plot\nwith one of the available backgrounds</p>\n\n<p>cartopy_stock : stock image for Cartopy, uses a downgraded natural earth image.\nOnly one resolution\ncartopy_stock_ocean : stock image for Cartopy with land blanked out in a single colour.\nOnly one resolution\narcgis_shaded_relief : resolution (low, medium, default is high) : : ArcGIS World Shaded\nRelief tiles\ngoogle_satellite : resolution (low, medium, high, vhigh, vvhigh (default)\nbluemarble : resolution (low, medium, high) : NASA Blue Marble world image\nnatural_earth_cbh : resolution (low, medium, default is high): Cross Blended Hypso with\nShaded Relief and Water\n<a href=\"https://www.naturalearthdata.com/downloads/50m-raster-data/50m-cross-blend-hypso/\">https://www.naturalearthdata.com/downloads/50m-raster-data/50m-cross-blend-hypso/</a>\nnatural_earth_cbh_oceanmasked : resolution (low, medium, default is high) : as for\nnatural_earth_cbh, but with oceans set to white\nnatural_earth_cbh_ocean : resolution (low, medium, high)\nnatural_earth_gray : resolution (low, medium, high):  Gray Earth with Shaded Relief,\nHypsography, and Ocean Bottom :\n<a href=\"https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/50m/raster/GRAY_50M_SR_OB.zip\">https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/50m/raster/GRAY_50M_SR_OB.zip</a>\nnatural_earth1 : resolution (low, medium, default is high): Natural Earth I with Shaded\nRelief and Water :\n<a href=\"https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/50m/raster/NE1_50M_SR_W.zip\">https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/50m/raster/NE1_50M_SR_W.zip</a>\nstamen : resolution (low, medium, default is high):terrain-background\n<a href=\"http://maps.stamen.com/terrain-background/#12/37.7706/-122.3782\">http://maps.stamen.com/terrain-background/#12/37.7706/-122.3782</a>\nnatural_earth_faded\nbasic_land : resolution (low, medium, high) : basic ocean and land plot\nmoa : MODIS Mosaic of Antarctica 2008-2009 (MOA2009) Image Map at 750m resolution,\ngray scale\ncpom_dem : CPOM Antarctic DEM at 1km resolution, gray scale\nhillshade : hillshade_params={\"azimuth\": f,\u201dpitch\": f,\u201ddem\": \u201cstr\u201d,\u201dalpha\": f}\nant_iceshelves\nibcso_bathymetry\nibcao_bathymetry\nawi_gis_dem : Greenland DEM from AWI 2014\ngrn_s1_mosaic : resolution (low, medium, high, vhigh)\narcticdem_1km :  ArcticDEM at 1km resolution\nrema_dem_1km : REMA Antarctic DEM at 1km resolution\n        '\nparam: resolution : 'low', 'medium','high','vhigh','vvhigh', if None,\nself.thisarea.background_image_resolution is used\nalpha:  set the background transparency (alpha), 0..1. If None,\nself.thisarea.background_image_alpha is used</p>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ax</span>,</span><span class=\"param\">\t<span class=\"n\">dataprj</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">resolution</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">include_features</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">hillshade_params</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">zorder</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.backgrounds.tests", "modulename": "cpom.backgrounds.tests", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "cpom.backgrounds.tests.test_backgrounds", "modulename": "cpom.backgrounds.tests.test_backgrounds", "kind": "module", "doc": "<p>pytest tests for cpom.backgrounds</p>\n"}, {"fullname": "cpom.backgrounds.tests.test_backgrounds.log", "modulename": "cpom.backgrounds.tests.test_backgrounds", "qualname": "log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger cpom.backgrounds.tests.test_backgrounds (INFO)&gt;"}, {"fullname": "cpom.backgrounds.tests.test_backgrounds.pytestmark", "modulename": "cpom.backgrounds.tests.test_backgrounds", "qualname": "pytestmark", "kind": "variable", "doc": "<p></p>\n", "default_value": "MarkDecorator(mark=Mark(name=&#x27;non_core&#x27;, args=(), kwargs={}))"}, {"fullname": "cpom.backgrounds.tests.test_backgrounds.test_backgrounds", "modulename": "cpom.backgrounds.tests.test_backgrounds", "qualname": "test_backgrounds", "kind": "function", "doc": "<p>test purpose: for each background, plot background in one or more test areas\nas specified in  cpom.backgrounds.backgrounds.all_backgrounds which is a dict\ncontaining background name as key, and a list of relevant areas to test</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">background_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tmp_path_factory</span><span class=\"p\">:</span> <span class=\"n\">_pytest</span><span class=\"o\">.</span><span class=\"n\">tmpdir</span><span class=\"o\">.</span><span class=\"n\">TempPathFactory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems", "modulename": "cpom.dems", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.atl14_ant_4quadrant_nc_to_zarr", "modulename": "cpom.dems.atl14_ant_4quadrant_nc_to_zarr", "kind": "module", "doc": "<p>Utility to combine four quadrant ATL14 Antarctic DEM NetCDF files\ninto a single Zarr mosaic.</p>\n\n<p>The four input files should be arranged as follows (by quadrant label in the filename):</p>\n\n<pre><code>   A2   |   A1\n  ---------------\n   A3   |   A4\n</code></pre>\n\n<p>For each file the script reads the GeoTransform (e.g. \n    [x0, dx, 0, y0, 0, dy])\nand computes coordinate arrays as:</p>\n\n<pre><code>x = x0 + dx * arange(nx)\ny = y0 + dy * arange(ny)\n</code></pre>\n\n<p>It then computes the global mosaic grid from the union of the quadrant extents and\nplaces each quadrant into the appropriate offset.\nA Zarr mosaic (and a vertically flipped copy) are then written using a specified chunk size.</p>\n"}, {"fullname": "cpom.dems.atl14_ant_4quadrant_nc_to_zarr.get_quadrant_data", "modulename": "cpom.dems.atl14_ant_4quadrant_nc_to_zarr", "qualname": "get_quadrant_data", "kind": "function", "doc": "<p>Open the NetCDF file, read the DEM (\"h\") and GeoTransform from the\n\"Polar_Stereographic\" variable, and compute the full x and y coordinate arrays.</p>\n\n<h6 id=\"returns-a-dictionary-with-keys\">Returns a dictionary with keys:</h6>\n\n<blockquote>\n  <ul>\n  <li>'h': 2D DEM data (numpy array)</li>\n  <li>'nx': number of columns</li>\n  <li>'ny': number of rows</li>\n  <li>'GT': the GeoTransform as a list of 6 floats [x0, dx, 0, y0, 0, dy]</li>\n  <li>'x': 1D numpy array of x coordinates (cell centers)</li>\n  <li>'y': 1D numpy array of y coordinates (cell centers)</li>\n  </ul>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nc_file</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.atl14_ant_4quadrant_nc_to_zarr.parse_quadrant_files", "modulename": "cpom.dems.atl14_ant_4quadrant_nc_to_zarr", "qualname": "parse_quadrant_files", "kind": "function", "doc": "<p>Determine which file is which quadrant based on filename.</p>\n\n<h6 id=\"for-this-mosaic-we-require\">For this mosaic we require:</h6>\n\n<blockquote>\n  <ul>\n  <li>A2: top left</li>\n  <li>A1: top right</li>\n  <li>A3: bottom left</li>\n  <li>A4: bottom right</li>\n  </ul>\n</blockquote>\n\n<p>Returns a dictionary mapping quadrant label to filename.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.atl14_ant_4quadrant_nc_to_zarr.build_global_grid", "modulename": "cpom.dems.atl14_ant_4quadrant_nc_to_zarr", "qualname": "build_global_grid", "kind": "function", "doc": "<p>Given a dictionary of quadrant data (with keys A1, A2, A3, A4), compute the global mosaic grid.</p>\n\n<h6 id=\"for-our-arrangement\">For our arrangement:</h6>\n\n<blockquote>\n  <h2 id=\"a2-a1-top-row\">A2   |   A1   (top row)</h2>\n  \n  <p>A3   |   A4   (bottom row)</p>\n</blockquote>\n\n<h6 id=\"we-compute\">We compute:</h6>\n\n<blockquote>\n  <p>global_x_min = min( A2.x[0], A3.x[0] )\n  global_x_max = max( A1.x[-1], A4.x[-1] )\n  global_y_max = max( A2.y[0], A1.y[0] )    (remember: dy is negative so the first element is the top)\n  global_y_min = min( A3.y[-1], A4.y[-1] )</p>\n</blockquote>\n\n<p>We also assume the same pixel spacing (dx and dy) in all quadrants.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>global_x, global_y, dx, dy, ncols_global, nrows_global</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">qdata</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.atl14_ant_4quadrant_nc_to_zarr.place_quadrant", "modulename": "cpom.dems.atl14_ant_4quadrant_nc_to_zarr", "qualname": "place_quadrant", "kind": "function", "doc": "<p>Place a quadrant\u2019s DEM (qdat) into the mosaic.</p>\n\n<h6 id=\"the-offset-indices-are-computed-as\">The offset indices are computed as:</h6>\n\n<blockquote>\n  <p>offset_col = round((qdat.x[0] - global_x[0]) / dx)\n  offset_row = round((global_y[0] - qdat.y[0]) / abs(dy))</p>\n</blockquote>\n\n<p>mosaic is updated in place.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mosaic</span>, </span><span class=\"param\"><span class=\"n\">global_x</span>, </span><span class=\"param\"><span class=\"n\">global_y</span>, </span><span class=\"param\"><span class=\"n\">qdat</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.atl14_ant_4quadrant_nc_to_zarr.main", "modulename": "cpom.dems.atl14_ant_4quadrant_nc_to_zarr", "qualname": "main", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.atl14_nc_a1a4_to_zarr", "modulename": "cpom.dems.atl14_nc_a1a4_to_zarr", "kind": "module", "doc": "<p>Utility to convert NetCDF format DEM files to Zarr format using a\nchunk size equivalent to the CS2 beamwidth or a selectable chunk size.</p>\n"}, {"fullname": "cpom.dems.atl14_nc_a1a4_to_zarr.DEMConverter", "modulename": "cpom.dems.atl14_nc_a1a4_to_zarr", "qualname": "DEMConverter", "kind": "class", "doc": "<p>Class to convert NetCDF DEM files to Zarr</p>\n"}, {"fullname": "cpom.dems.atl14_nc_a1a4_to_zarr.DEMConverter.__init__", "modulename": "cpom.dems.atl14_nc_a1a4_to_zarr", "qualname": "DEMConverter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">void_value</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "cpom.dems.atl14_nc_a1a4_to_zarr.DEMConverter.void_value", "modulename": "cpom.dems.atl14_nc_a1a4_to_zarr", "qualname": "DEMConverter.void_value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.atl14_nc_a1a4_to_zarr.DEMConverter.get_netcdf_extent", "modulename": "cpom.dems.atl14_nc_a1a4_to_zarr", "qualname": "DEMConverter.get_netcdf_extent", "kind": "function", "doc": "<p>Get DEM extent and resolution .</p>\n\n<p>Reads the coordinate arrays 'x' and 'y' and computes:</p>\n\n<ul>\n<li>ncols, nrows,</li>\n<li>binsize (assumed equal in x and y),</li>\n<li>corner coordinates (approximated using the cell centers and binsize).</li>\n</ul>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fname (str):</strong>  path to the NetCDF file.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  if the resolutions in x and y are not equal.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple: (ncols, nrows, top_left, top_right, bottom_left, bottom_right, binsize)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.atl14_nc_a1a4_to_zarr.DEMConverter.convert_netcdf_to_zarr", "modulename": "cpom.dems.atl14_nc_a1a4_to_zarr", "qualname": "DEMConverter.convert_netcdf_to_zarr", "kind": "function", "doc": "<p>Convert a NetCDF DEM file to Zarr format and create a flipped version.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ncfile (str):</strong>  Path of the NetCDF file.</li>\n<li><strong>zarrfile (str):</strong>  Path where the original Zarr file will be saved.</li>\n<li><strong>flipped_zarrfile (str):</strong>  Path where the flipped Zarr file will be saved.</li>\n<li><strong>chunk_width (int, optional):</strong>  chunk size in meters (default is 20000).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x</span>,</span><span class=\"param\">\t<span class=\"n\">y</span>,</span><span class=\"param\">\t<span class=\"n\">h</span>,</span><span class=\"param\">\t<span class=\"n\">zarrfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">flipped_zarrfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">chunk_width</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20000</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.atl14_nc_a1a4_to_zarr.combine_nc_files", "modulename": "cpom.dems.atl14_nc_a1a4_to_zarr", "qualname": "combine_nc_files", "kind": "function", "doc": "<p>combine x,y,h(y,x) from 4 netcdf files\n   each file contains x,y values stepped by 100.00 but\n   in different segments of cartesian space.\n   we want the final x,y,h(y,x) to include the maximum extent\n   of the contributing data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>a1_file (str):</strong>  file name of netcdf file 1</li>\n<li><strong>a2_file (str):</strong>  file name of netcdf file 2</li>\n<li><strong>a3_file (str):</strong>  file name of netcdf file 3</li>\n<li><strong>a4_file (str):</strong>  file name of netcdf file 4</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>h,x,y: h(y,x), x, y are all numpy arrays. h is a 2d array</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a1_file</span>, </span><span class=\"param\"><span class=\"n\">a2_file</span>, </span><span class=\"param\"><span class=\"n\">a3_file</span>, </span><span class=\"param\"><span class=\"n\">a4_file</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.atl14_nc_a1a4_to_zarr.combine_nc_files2", "modulename": "cpom.dems.atl14_nc_a1a4_to_zarr", "qualname": "combine_nc_files2", "kind": "function", "doc": "<p>Combine x, y, h(y,x) from 4 netCDF files into a single grid.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a1_file</span>, </span><span class=\"param\"><span class=\"n\">a2_file</span>, </span><span class=\"param\"><span class=\"n\">a3_file</span>, </span><span class=\"param\"><span class=\"n\">a4_file</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.atl14_nc_a1a4_to_zarr.combine_nc_files3", "modulename": "cpom.dems.atl14_nc_a1a4_to_zarr", "qualname": "combine_nc_files3", "kind": "function", "doc": "<p>Combine x, y, h(y,x) from 4 netCDF files with a uniform grid spacing.</p>\n\n<p>Each file contains x, y values stepped by 100.0, covering different segments\nof Cartesian space. This function creates a global grid covering the maximum extent\nof the data and fills in the values from each file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>a1_file, a2_file, a3_file, a4_file (str):</strong>  File names of the netCDF files.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple: (h_grid, global_x, global_y)\n      - h_grid (2D numpy array): Combined h values over the global grid.\n      - global_x (1D numpy array): Global x coordinates.\n      - global_y (1D numpy array): Global y coordinates.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a1_file</span>, </span><span class=\"param\"><span class=\"n\">a2_file</span>, </span><span class=\"param\"><span class=\"n\">a3_file</span>, </span><span class=\"param\"><span class=\"n\">a4_file</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.atl14_nc_a1a4_to_zarr.main", "modulename": "cpom.dems.atl14_nc_a1a4_to_zarr", "qualname": "main", "kind": "function", "doc": "<p>Main function for the command-line tool.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.atl14_netcdf_to_zarr", "modulename": "cpom.dems.atl14_netcdf_to_zarr", "kind": "module", "doc": "<p>Utility to convert ATL14 NetCDF format DEM files to Zarr format using a\nchunk size equivalent to the CS2 beamwidth or a selectable chunk size.</p>\n"}, {"fullname": "cpom.dems.atl14_netcdf_to_zarr.DEMConverter", "modulename": "cpom.dems.atl14_netcdf_to_zarr", "qualname": "DEMConverter", "kind": "class", "doc": "<p>Class to convert NetCDF DEM files to Zarr</p>\n"}, {"fullname": "cpom.dems.atl14_netcdf_to_zarr.DEMConverter.__init__", "modulename": "cpom.dems.atl14_netcdf_to_zarr", "qualname": "DEMConverter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">void_value</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "cpom.dems.atl14_netcdf_to_zarr.DEMConverter.void_value", "modulename": "cpom.dems.atl14_netcdf_to_zarr", "qualname": "DEMConverter.void_value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.atl14_netcdf_to_zarr.DEMConverter.get_netcdf_extent", "modulename": "cpom.dems.atl14_netcdf_to_zarr", "qualname": "DEMConverter.get_netcdf_extent", "kind": "function", "doc": "<p>Get DEM extent and resolution from the NetCDF file.</p>\n\n<p>Reads the coordinate arrays 'x' and 'y' and computes:</p>\n\n<ul>\n<li>ncols, nrows,</li>\n<li>binsize (assumed equal in x and y),</li>\n<li>corner coordinates (approximated using the cell centers and binsize).</li>\n</ul>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fname (str):</strong>  path to the NetCDF file.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  if the resolutions in x and y are not equal.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple: (ncols, nrows, top_left, top_right, bottom_left, bottom_right, binsize)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.atl14_netcdf_to_zarr.DEMConverter.convert_netcdf_to_zarr", "modulename": "cpom.dems.atl14_netcdf_to_zarr", "qualname": "DEMConverter.convert_netcdf_to_zarr", "kind": "function", "doc": "<p>Convert a NetCDF DEM file to Zarr format and create a flipped version.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ncfile (str):</strong>  Path of the NetCDF file.</li>\n<li><strong>zarrfile (str):</strong>  Path where the original Zarr file will be saved.</li>\n<li><strong>flipped_zarrfile (str):</strong>  Path where the flipped Zarr file will be saved.</li>\n<li><strong>chunk_width (int, optional):</strong>  chunk size in meters (default is 20000).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ncfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">zarrfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">flipped_zarrfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">chunk_width</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20000</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.atl14_netcdf_to_zarr.main", "modulename": "cpom.dems.atl14_netcdf_to_zarr", "qualname": "main", "kind": "function", "doc": "<p>Main function for the command-line tool.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.dems", "modulename": "cpom.dems.dems", "kind": "module", "doc": "<p>cpom.dems.dems.py</p>\n\n<p>DEM class to read and interpolate DEMs</p>\n"}, {"fullname": "cpom.dems.dems.log", "modulename": "cpom.dems.dems", "qualname": "log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger cpom.dems.dems (WARNING)&gt;"}, {"fullname": "cpom.dems.dems.dem_list", "modulename": "cpom.dems.dems", "qualname": "dem_list", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;awi_ant_1km&#x27;, &#x27;awi_grn_1km&#x27;, &#x27;awi_ant_1km_grounded&#x27;, &#x27;awi_ant_1km_floating&#x27;, &#x27;rema_ant_1km&#x27;, &#x27;rema_ant_1km_zarr&#x27;, &#x27;rema_ant_1km_v2&#x27;, &#x27;rema_ant_1km_v2_zarr&#x27;, &#x27;rema_ant_200m&#x27;, &#x27;rema_ant_200m_zarr&#x27;, &#x27;rema_gapless_100m&#x27;, &#x27;rema_gapless_100m_zarr&#x27;, &#x27;rema_gapless_1km&#x27;, &#x27;rema_gapless_1km_zarr&#x27;, &#x27;arcticdem_1km&#x27;, &#x27;arcticdem_1km_zarr&#x27;, &#x27;arcticdem_1km_v4.1&#x27;, &#x27;arcticdem_1km_greenland_v4.1&#x27;, &#x27;arcticdem_1km_greenland_v4.1_zarr&#x27;, &#x27;arcticdem_100m_greenland&#x27;, &#x27;arcticdem_100m_greenland_v4.1&#x27;, &#x27;arcticdem_100m_greenland_v4.1_zarr&#x27;, &#x27;atl14_grn_100m_004_003_zarr&#x27;, &#x27;atl14_ant_100m_004_004_zarr&#x27;, &#x27;atl14_ant_a1_100m_004_004_zarr&#x27;, &#x27;atl14_ant_a2_100m_004_004_zarr&#x27;, &#x27;atl14_ant_a3_100m_004_004_zarr&#x27;, &#x27;atl14_ant_a4_100m_004_004_zarr&#x27;]"}, {"fullname": "cpom.dems.dems.Dem", "modulename": "cpom.dems.dems", "qualname": "Dem", "kind": "class", "doc": "<p>class to load and interpolate Polar DEMs</p>\n"}, {"fullname": "cpom.dems.dems.Dem.__init__", "modulename": "cpom.dems.dems", "qualname": "Dem.__init__", "kind": "function", "doc": "<p>class initialization function</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>name (str):</strong>  DEM name id, must be in global dem_list</li>\n<li><strong>filled (bool, optional):</strong>  Use filled version of DEM if True. Defaults to True.</li>\n<li><strong>config (dict, optional):</strong>  configuration dictionary, defaults to None</li>\n<li><strong>dem_dir (str, optional):</strong>  path of directory containing DEM. Defaults to None</li>\n<li><strong>store_in_shared_memory (bool, optional):</strong>  stores/accesses zdem array in SharedMemory</li>\n<li><strong>thislog (logging.Logger|None, optional):</strong>  attach to a different log instance</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  when name not in global dem_list</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">filled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dem_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">store_in_shared_memory</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">thislog</span><span class=\"p\">:</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">Logger</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "cpom.dems.dems.Dem.name", "modulename": "cpom.dems.dems", "qualname": "Dem.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.crs_wgs", "modulename": "cpom.dems.dems", "qualname": "Dem.crs_wgs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.config", "modulename": "cpom.dems.dems", "qualname": "Dem.config", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.dem_dir", "modulename": "cpom.dems.dems", "qualname": "Dem.dem_dir", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.filled", "modulename": "cpom.dems.dems", "qualname": "Dem.filled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.reference_year", "modulename": "cpom.dems.dems", "qualname": "Dem.reference_year", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.xdem", "modulename": "cpom.dems.dems", "qualname": "Dem.xdem", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.ydem", "modulename": "cpom.dems.dems", "qualname": "Dem.ydem", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.zdem", "modulename": "cpom.dems.dems", "qualname": "Dem.zdem", "kind": "variable", "doc": "<p></p>\n", "annotation": ": zarr.core.Array | numpy.ndarray"}, {"fullname": "cpom.dems.dems.Dem.zdem_flip", "modulename": "cpom.dems.dems", "qualname": "Dem.zdem_flip", "kind": "variable", "doc": "<p></p>\n", "annotation": ": zarr.core.Array | numpy.ndarray"}, {"fullname": "cpom.dems.dems.Dem.mindemx", "modulename": "cpom.dems.dems", "qualname": "Dem.mindemx", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.mindemy", "modulename": "cpom.dems.dems", "qualname": "Dem.mindemy", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.binsize", "modulename": "cpom.dems.dems", "qualname": "Dem.binsize", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.store_in_shared_memory", "modulename": "cpom.dems.dems", "qualname": "Dem.store_in_shared_memory", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.shape", "modulename": "cpom.dems.dems", "qualname": "Dem.shape", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.dtype", "modulename": "cpom.dems.dems", "qualname": "Dem.dtype", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.shared_mem", "modulename": "cpom.dems.dems", "qualname": "Dem.shared_mem", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Any"}, {"fullname": "cpom.dems.dems.Dem.shared_mem_child", "modulename": "cpom.dems.dems", "qualname": "Dem.shared_mem_child", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.npz_type", "modulename": "cpom.dems.dems", "qualname": "Dem.npz_type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.zarr_type", "modulename": "cpom.dems.dems", "qualname": "Dem.zarr_type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.nc_type", "modulename": "cpom.dems.dems", "qualname": "Dem.nc_type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.zflip", "modulename": "cpom.dems.dems", "qualname": "Dem.zflip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.dems.Dem.void_value", "modulename": "cpom.dems.dems", "qualname": "Dem.void_value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float | int"}, {"fullname": "cpom.dems.dems.Dem.get_nc_extent", "modulename": "cpom.dems.dems", "qualname": "Dem.get_nc_extent", "kind": "function", "doc": "<p>get the DEM extent from nc file</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fname (str):</strong>  path of GeoTIFF file</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  _description_</li>\n<li><strong>IOError:</strong>  _description_</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple(int,int,int,int,int,int,int): width,height,top_left,top_right,bottom_left,\n  bottom_right,pixel_width</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.dems.Dem.get_geotiff_extent", "modulename": "cpom.dems.dems", "qualname": "Dem.get_geotiff_extent", "kind": "function", "doc": "<p>Get info from GeoTIFF on its extent</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fname (str):</strong>  path of GeoTIFF file</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  _description_</li>\n<li><strong>IOError:</strong>  _description_</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple(int,int,int,int,int,int,int): width,height,top_left,top_right,bottom_left,\n  bottom_right,pixel_width</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.dems.Dem.get_filename", "modulename": "cpom.dems.dems", "qualname": "Dem.get_filename", "kind": "function", "doc": "<p>Find the path of the DEM file from dir and file names :\nFor the directory, it is chosen in order of preference:\na) self.config[\"dem_dirs\"][self.name], or\nb) supplied self.dem_dir, or\nc) default_dir\nThe file name is:\nfilename: is self.filled use filled_filename</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>default_dir (str):</strong>  default dir to find DEM file names</li>\n<li><strong>filename (str):</strong>  file name of DEM (not filled)</li>\n<li><strong>filled_filename (str):</strong>  file name of DEM (not filled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str : path of DEM file</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>OSError :</strong>  directory or file not found</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">default_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">filled_filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.dems.Dem.clean_up", "modulename": "cpom.dems.dems", "qualname": "Dem.clean_up", "kind": "function", "doc": "<p>Free up, close or release any shared memory or other resources associated\nwith DEM</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.dems.Dem.load_npz", "modulename": "cpom.dems.dems", "qualname": "Dem.load_npz", "kind": "function", "doc": "<p>Load DEM from npz format file</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>npz_file (str):</strong>  path of npz file</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">npz_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.dems.Dem.load_zarr", "modulename": "cpom.dems.dems", "qualname": "Dem.load_zarr", "kind": "function", "doc": "<p>Load a .zarr file</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>demfile (str):</strong>  path of .zarr file</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">demfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.dems.Dem.load_nc", "modulename": "cpom.dems.dems", "qualname": "Dem.load_nc", "kind": "function", "doc": "<p>Load a netcdf file</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>demfile (str):</strong>  path of netcdf file</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">demfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.dems.Dem.load_geotiff", "modulename": "cpom.dems.dems", "qualname": "Dem.load_geotiff", "kind": "function", "doc": "<p>Load a GeoTIFF file</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>demfile (str):</strong>  path of GeoTIFF</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">demfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.dems.Dem.load", "modulename": "cpom.dems.dems", "qualname": "Dem.load", "kind": "function", "doc": "<p>load the DEM</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: DEM loaded ok (True), failed (False)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.dems.Dem.get_segment", "modulename": "cpom.dems.dems", "qualname": "Dem.get_segment", "kind": "function", "doc": "<p>return a cropped segment of the DEM, flattened or as a grid</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>segment_bounds (List):</strong>  [(minx,maxx),(miny,maxy)]</li>\n<li><strong>grid_xy (bool, optional):</strong>  return segment as a grid. Defaults to True.</li>\n<li><strong>flatten (bool, optional):</strong>  return segment as flattened list. Defaults to False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Tuple[np.ndarray, np.ndarray, np.ndarray]: (xdem,ydem,zdem)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">segment_bounds</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">grid_xy</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">flatten</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.dems.Dem.chunked_interpolation", "modulename": "cpom.dems.dems", "qualname": "Dem.chunked_interpolation", "kind": "function", "doc": "<p>Interpolate DEM in chunks to handle large datasets efficiently.</p>\n\n<p>This function performs interpolation on a DEM stored in a Zarr array by\nextracting relevant chunks and creating a sub-grid for interpolation.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x (np.ndarray):</strong>  Array of x coordinates in the DEM's projection (in meters).</li>\n<li><strong>y (np.ndarray):</strong>  Array of y coordinates in the DEM's projection (in meters).</li>\n<li><strong>myydem (np.ndarray):</strong>  Flipped y coordinates corresponding to the DEM grid.</li>\n<li><strong>xdem (np.ndarray):</strong>  x coordinates corresponding to the DEM grid.</li>\n<li><strong>method (str):</strong>  Interpolation method to use ('linear', 'nearest', etc.).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: Interpolated DEM elevation values at the specified coordinates.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">myydem</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">xdem</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.dems.Dem.interp_dem", "modulename": "cpom.dems.dems", "qualname": "Dem.interp_dem", "kind": "function", "doc": "<p>Interpolate DEM to return elevation values corresponding to\n   cartesian x,y in DEM's projection or lat,lon values</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x (np.ndarray):</strong>  x cartesian coordinates in the DEM's projection in m, or lat values</li>\n<li><strong>y (np.ndarray):</strong>  x cartesian coordinates in the DEM's projection in m, or lon values</li>\n<li><strong>method (str, optional):</strong>  linear, nearest, splinef2d. Defaults to \"linear\".</li>\n<li><strong>xy_is_latlon (bool, optional):</strong>  if True, x,y are lat, lon values. Defaults to False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: interpolated dem elevation values</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;linear&#39;</span>, </span><span class=\"param\"><span class=\"n\">xy_is_latlon</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.dems.Dem.gaussian_smooth", "modulename": "cpom.dems.dems", "qualname": "Dem.gaussian_smooth", "kind": "function", "doc": "<p>perform a gaussian smooth on the current loaded DEM\nsigma : degree of smoothing, def=1.0</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sigma</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.dems.Dem.hillshade", "modulename": "cpom.dems.dems", "qualname": "Dem.hillshade", "kind": "function", "doc": "<p>Convert the DEM 'z_dem' values to a hillshade value between 0..255\nazimuth: angle in degrees (0..360)\npitch : angle in degrees (0..90)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">azimuth</span><span class=\"o\">=</span><span class=\"mi\">225</span>, </span><span class=\"param\"><span class=\"n\">pitch</span><span class=\"o\">=</span><span class=\"mi\">45</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.geotiff_to_zarr", "modulename": "cpom.dems.geotiff_to_zarr", "kind": "module", "doc": "<p>Utility to convert Geotiff format DEM files to Zarr format using a\nchunk size equivalent to the CS2 beamwidth or a selectable chunk size</p>\n"}, {"fullname": "cpom.dems.geotiff_to_zarr.DEMConverter", "modulename": "cpom.dems.geotiff_to_zarr", "qualname": "DEMConverter", "kind": "class", "doc": "<p>Class to convert Geotiff format DEMs to zarr</p>\n"}, {"fullname": "cpom.dems.geotiff_to_zarr.DEMConverter.__init__", "modulename": "cpom.dems.geotiff_to_zarr", "qualname": "DEMConverter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">void_value</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "cpom.dems.geotiff_to_zarr.DEMConverter.void_value", "modulename": "cpom.dems.geotiff_to_zarr", "qualname": "DEMConverter.void_value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.geotiff_to_zarr.DEMConverter.get_geotiff_extent", "modulename": "cpom.dems.geotiff_to_zarr", "qualname": "DEMConverter.get_geotiff_extent", "kind": "function", "doc": "<p>Get info from GeoTIFF on its extent</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fname (str):</strong>  path of GeoTIFF file</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  _description_</li>\n<li><strong>IOError:</strong>  _description_</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple(int,int,int,int,int,int,int): width,height,top_left,top_right,bottom_left,\n  bottom_right,pixel_width</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.geotiff_to_zarr.DEMConverter.convert_geotiff_to_zarr", "modulename": "cpom.dems.geotiff_to_zarr", "qualname": "DEMConverter.convert_geotiff_to_zarr", "kind": "function", "doc": "<p>Convert a GeoTIFF file to Zarr format and create a flipped version.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>demfile (str):</strong>  Path of GeoTIFF file.</li>\n<li><strong>zarrfile (str):</strong>  Path where the original Zarr file will be saved.</li>\n<li><strong>flipped_zarrfile (str):</strong>  Path where the flipped Zarr file will be saved.</li>\n<li><strong>chunk_width (int, optional):</strong>  chunk size in m (def = 20000 (ie 20km))</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">demfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">zarrfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">flipped_zarrfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">chunk_width</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20000</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.geotiff_to_zarr.main", "modulename": "cpom.dems.geotiff_to_zarr", "qualname": "main", "kind": "function", "doc": "<p>main function for command line tool</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.get_cop90_dem", "modulename": "cpom.dems.get_cop90_dem", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.get_cop90_dem.json", "modulename": "cpom.dems.get_cop90_dem", "qualname": "json", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;@odata.context&#x27;: &#x27;$metadata#Products&#x27;, &#x27;value&#x27;: [{&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;30b568a6-4966-457d-ba21-dc3c60cc543c&#x27;, &#x27;Name&#x27;: &#x27;SP06_NAO_MS4__3_20180627T102204_20180627T102223_TOU_1234_4022_COG.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 7631747, &#x27;OriginDate&#x27;: &#x27;2025-02-24T15:46:07.579360Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-02-24T16:47:12.341462Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-02-24T16:47:12.341462Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2018/NAO_MS4__3_E1F0-COG/2018/06/27/SP06_NAO_MS4__3_20180627T102204_20180627T102223_TOU_1234_4022_COG&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;294dca7b5eacc99ec34ba288d0a975f2&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:47:10.733461Z&#x27;}, {&#x27;Value&#x27;: &#x27;8624aaa24f825328a88f75f6cb4c80ab4f7bb9ba5a1b578a73e8702f16346f28&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:47:10.777224Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2018-06-27T10:22:04.000000Z&#x27;, &#x27;End&#x27;: &#x27;2018-06-27T10:22:23.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#xx27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[-3.02754666812351, 35.8928605955429], [-3.02762949509519, 35.8928491831447], [-3.02795265712615, 35.8928056933632], [-3.02803555416226, 35.8927948031981], [-3.0282575480578, 35.8927663509978], [-3.02834923654217, 35.8927549237537], [-3.02870701837659, 35.8927115962316], [-3.02892593777801, 35.8926869247003], [-3.0294220292846, 35.892635175612], [-3.02954930504118, 35.8926225170868], [-3.03046645057654, 35.8925357465973], [-3.03211174262267, 35.8923937311718], [-3.03263921740386, 35.8923582079955], [-3.03332575952352, 35.8923256421142], [-3.03350184092101, 35.8923184563162], [-3.03487538056432, 35.8922714933651], [-3.03505152154395, 35.8922666362716], [-3.03573851947748, 35.8922522391798], [-3.03609081277546, 35.8922495209141], [-3.0367775594387, 35.8922533182296], [-3.0369536096171, 35.8922554579403], [-3.0383261668136, 35.8922812325523], [-3.03850210898327, 35.8922857029227], [-3.03918792009207, 35.8923076811149], [-3.03952119014644, 35.8923225657534], [-3.04013513618587, 35.8923577490235], [-3.04029246656989, 35.8923677075855], [-3.04151850268406, 35.8924526626244], [-3.04167558148463, 35.8924644900489], [-3.0422876886471, 35.892514262219], [-3.04244451045775, 35.8925279590772], [-3.04266948549803, 35.8925489674254], [-3.04268742215342, 35.8925506547626], [-3.04275725545001, 35.8925572724625], [-3.04277513090997, 35.8925589787544], [-3.04291504105275, 35.8925724303275], [-3.04293307360861, 35.8925741766129], [-3.0430031336625, 35.8925810101009], [-3.04319528411951, 35.8926011835272], [-3.04387402454672, 35.892677510409], [-3.04404784174835, 35.8926982368352], [-3.04540157466867, 35.8928688689877], [-3.04557491119969, 35.8928918997768], [-3.04624990408953, 35.8929862050932], [-3.04651073941085, 35.893025355407], [-3.04685372843127, 35.8930804159868], [-3.04694159856844, 35.8930948328306], [-3.04762632979168, 35.8932096023214], [-3.0477140520312, 35.8932246170364], [-3.04805579895953, 35.8932843271325], [-3.04814333173181, 35.8932999328444], [-3.04986081064055, 35.8936122508567], [-3.04994453040911, 35.8936277613511], [-3.0502707950602, 35.893689328089], [-3.05035439064521, 35.8937053905765], [-3.05100563205151, 35.8938327690522], [-3.05108905860332, 35.8938493749748], [-3.05141402964118, 35.8939151856978], [-3.05166333342623, 35.89396827658], [-3.05230954927774, 35.8941126845912], [-3.05247486358261, 35.8941507919762], [-3.05376107840584, 35.8944563855323], [-3.05392583902825, 35.894496704564], [-3.05456676884667, 35.8946581380359], [-3.05473106437668, 35.8947007050652], [-3.05495267503619, 35.8947597295813], [-3.05512649309511, 35.8948073740051], [-3.05577861752143, 35.894991214392], [-3.05594540867598, 35.8950394985632], [-3.05724277158116, 35.895424956329], [-3.05740863010782, 35.8954755066195], [-3.05805340374941, 35.8956770006327], [-3.05838022121243, 35.895784205801], [-3.05900988277641, 35.8960006595397], [-3.05917076355323, 35.8960572361705], [-3.06042096882983, 35.8965068424799], [-3.06058068087161, 35.8965655593564], [-3.06120122487504, 35.8967987120513], [-3.06150408354419, 35.89691725053], [-3.06206488788601, 35.8971456742645], [-3.06220813697038, 35.8972051249153], [-3.06332105663441, 35.897675636232], [-3.06346320919084, 35.8977368456998], [-3.06401536374467, 35.8979789517499], [-3.06415788957163, 35.8980425910823], [-3.06436199591724, 35.8981353812768], [-3.06438562769117, 35.8981461567203], [-3.0645329941007, 35.8982135519325], [-3.06470357789201, 35.8982932589391], [-3.06531754091192, 35.8985862975047], [-3.0654744239857, 35.89866265368], [-3.06664160281323, 35.8992418263281], [-3.0667905165812, 35.8993170911801], [-3.06736830164979, 35.8996144973632], [-3.06747448908981, 35.8996698730458], [-3.06766150685772, 35.8997709666247], [-3.06822708741978, 35.9000837187448], [-3.06837130986983, 35.9001648864553], [-3.06948969830228, 35.9008054099319], [-3.06963228239909, 35.9008885020666], [-3.07018509042963, 35.9012162735862], [-3.07044518447951, 35.901375478481], [-3.07090753498376, 35.901667558832], [-3.07102545095983, 35.9017431346083], [-3.07194005081148, 35.902337829483], [-3.07205667849964, 35.9024147598057], [-3.07250894842196, 35.902717388986], [-3.0726242541863, 35.9027956531737], [-3.07278148709805, 35.9029039062148], [-3.07280084026136, 35.9029172626653], [-3.0728761922031, 35.9029693912862], [-3.07289548106773, 35.9029827673803], [-3.07304588926576, 35.9030873197703], [-3.07306513133364, 35.9031007274348], [-3.07314016583589, 35.9031531359128], [-3.07329139815571, 35.9032607866103], [-3.07380250761407, 35.9036315454896], [-3.07393261987864, 35.9037274962166], [-3.07493987305343, 35.9044825949374], [-3.07506806628079, 35.9045802858141], [-3.07556421130642, 35.9049646265732], [-3.07581470730102, 35.9051651339351], [-3.07629536580959, 35.9055626671417], [-3.07641760134671, 35.9056654296766], [-3.07736296237288, 35.9064732845531], [-3.07748315277567, 35.9065776862761], [-3.07794785404851, 35.9069880073826], [-3.07815819047646, 35.9071792760341], [-3.07851523158508, 35.907513673519], [-3.07860611117676, 35.907599910467], [-3.07930960966787, 35.9082762724366], [-3.07939913445934, 35.9083634810643], [-3.07974560955851, 35.9087054633336], [-3.07983376419236, 35.9087936301714], [-3.07996310333485, 35.9089247096521], [-3.0799858310836, 35.9089478227689], [-3.08007424733724, 35.9090380490362], [-3.08009686142347, 35.9090612058327], [-3.08027294529261, 35.9092421388324], [-3.08029547207815, 35.9092653660809], [-3.08038312320628, 35.9093560558606], [-3.08051282025735, 35.9094929971235], [-3.08092679344658, 35.9099390833748], [-3.08103181290591, 35.910054184525], [-3.08184200612793, 35.9109574003525], [-3.08194475216462, 35.9110739195541], [-3.08234097101204, 35.9115310494576], [-3.08253952467873, 35.9117682175203], [-3.08291754851663, 35.9122359038358], [-3.08300453728988, 35.912345270486], [-3.08301329635321, 35.9123564812069], [-3.08375076252393, 35.9133019125813], [-3.0838441248461, 35.9134237741363], [-3.08420356811624, 35.9139015192087], [-3.08435953084254, 35.9141154968238], [-3.08461045610997, 35.9144710288279], [-3.08467414027391, 35.9145625112569], [-3.08516573987009, 35.9152785352347], [-3.08522811893154, 35.9153706667206], [-3.08546881229986, 35.9157311900336], [-3.08552986579577, 35.9158239424209], [-3.08562673312001, 35.9159732169908], [-3.08564883256398, 35.9160074525301], [-3.08573457379418, 35.9161409827601], [-3.08575644454757, 35.9161752239869], [-3.0859265540889, 35.9164429654204], [-3.08594826089219, 35.9164773127271], [-3.08603260916224, 35.9166114937057], [-3.08613275416265, 35.9167749120984], [-3.08643433180312, 35.9172799117532], [-3.08651039066462, 35.9174099312476], [-3.08709361806553, 35.9184279924171], [-3.08716712124833, 35.9185590431249], [-3.08744877076683, 35.9190721047856], [-3.08758803941242, 35.9193371840291], [-3.08784945319392, 35.9198577707445], [-3.08791517535134, 35.9199917169679], [-3.08841751638903, 35.9210398942148], [-3.0884806108769, 35.921174734804], [-3.08872153785046, 35.9217023254672], [-3.08882097930354, 35.9219293585883], [-3.08897067631643, 35.9222861696114], [-3.08900846001576, 35.9223778349406], [-3.08929848704403, 35.9230941752541], [-3.08937002679103, 35.9232774218799], [-3.08986674693145, 35.924588856679], [-3.08992743805011, 35.9247495134312], [-3.08994567645931, 35.9247982825341], [-3.09001614970626, 35.9249886541824], [-3.09003405144675, 35.9250375115944], [-3.0901723303078, 35.9254188272503], [-3.09018989064621, 35.9254677592357], [-3.09025771331282, 35.9256587476731], [-3.09032194850466, 35.9258472571366], [-3.09049998152194, 35.9263925542321], [-3.09054426604483, 35.9265326951053], [-3.09087897518298, 35.9276280828451], [-3.0909205219423, 35.9277688383138], [-3.09107719787737, 35.9283189299503], [-3.09115203512404, 35.9286021517832], [-3.09128718250703, 35.9291564669969], [-3.09132045129944, 35.9292988523914], [-3.09156908612218, 35.9304111448754], [-3.09159957763873, 35.9305539975117], [-3.09171306453916, 35.9311119739639], [-3.09174077132497, 35.9312552630574], [-3.09175503772211, 35.9313355079265], [-3.0918089780337, 35.9316487156766], [-3.09182237317021, 35.9317290900284], [-3.09192343344468, 35.9323563702466], [-3.0919359551985, 35.9324368623196], [-3.09198307328748, 35.932750924951], [-3.09199471502394, 35.9328314908705], [-3.09201803300303, 35.9329992729776], [-3.0920266029782, 35.9330629314116], [-3.09205897346882, 35.9333114091289], [-3.09206700329813, 35.9333751750685], [-3.09212747193827, 35.9338725214577], [-3.09213495306783, 35.933936330242], [-3.09216305298887, 35.9341852087656], [-3.09218366630052, 35.9343939162092], [-3.09223154184162, 35.9349594142946], [-3.09224240916875, 35.9351045270256], [-3.09231615953564, 35.936236869431], [-3.0923242060693, 35.9363821553537], [-3.09235008048819, 35.9369489997075], [-3.09235770168836, 35.9372399094196], [-3.09236154734143, 35.9378075258757], [-3.09236112075174, 35.9379531050526], [-3.09234677777013, 35.939088509384], [-3.09234352635205, 35.9392341003555], [-3.09232533839198, 35.9398018880878], [-3.09231542784407, 35.940015939982], [-3.09229926009803, 35.9402828543509], [-3.09229480404305, 35.9403512638518], [-3.09225760409167, 35.9408849463563], [-3.0922525234672, 35.9409533511946], [-3.09223148949612, 35.9412201342691], [-3.09222578321562, 35.9412885415037], [-3.09221090550623, 35.9414576229389], [-3.09220373314376, 35.9415346245813], [-3.09217422222109, 35.9418348303763], [-3.09216626094454, 35.9419117799893], [-3.09210107443774, 35.9425118996061], [-3.09209232224904, 35.9425888161917], [-3.09205664723914, 35.9428887152255], [-3.09202694288089, 35.9431105489039], [-3.09194284607063, 35.94367539586], [-3.09191988118137, 35.9438201051761], [-3.09172985961137, 35.9449476458866], [-3.09170409557161, 35.9450920815516], [-3.09159817040748, 35.9456547752717], [-3.09153827253432, 35.9459426762311], [-3.0914106268621, 35.9465026467606], [-3.09137650875415, 35.9466460356006], [-3.09109962401222, 35.9477626799521], [-3.09106273889324, 35.9479056393583], [-3.09091349959762, 35.948462314019], [-3.09085798566475, 35.9486591202181], [-3.09079535707227, 35.9488706156672], [-3.09077910603938, 35.9489247832665], [-3.09065074057711, 35.9493471613084], [-3.09063408339071, 35.9494012754297], [-3.09056834980334, 35.9496121456109], [-3.09055129752701, 35.9496661701009], [-3.09049872859395, 35.9498306743488], [-3.09047025792058, 35.9499180284341], [-3.09035717417948, 35.9502583326181], [-3.09032765279212, 35.9503454936616], [-3.0900933954254, 35.9510242750145], [-3.09006284232156, 35.9511111858936], [-3.08994166622998, 35.9514496744016], [-3.08985680361625, 35.9516760069006], [-3.08964379456922, 35.952219355132], [-3.08958783334038, 35.9523583356685], [-3.08914095653999, 35.9534394820014], [-3.08908231994045, 35.9535777522003], [-3.08884845168004, 35.9541155493089], [-3.0886957221787, 35.9544467083407], [-3.08832886286698, 35.9551986190871], [-3.08823216346089, 35.9553905784728], [-3.08782315122651, 35.9561868735002], [-3.08764785339118, 35.9565273590846], [-3.08760236793773, 35.9566144677049], [-3.08743978919547, 35.9569214962164], [-3.08742931008977, 35.956941223478], [-3.08738835966046, 35.9570180715526], [-3.08737783867325, 35.9570377534839], [-3.08729428873035, 35.9571935639107], [-3.08727840047119, 35.9572230550086], [-3.08721612527617, 35.9573381087348], [-3.08719055785963, 35.9573849958816], [-3.08701535440852, 35.9577043631599], [-3.0869559229796, 35.957811776078], [-3.08673462562381, 35.9582051038532], [-3.08667708347136, 35.9583057949184], [-3.08606963090281, 35.9593524586327], [-3.08597016900949, 35.9595195228124], [-3.08557434955807, 35.9601679035573], [-3.08538639238877, 35.9604625577166], [-3.08505227684922, 35.9609643709134], [-3.08496537002725, 35.9610924954133], [-3.08427803096964, 35.9620873459259], [-3.08418867279319, 35.9622143462647], [-3.08383544812065, 35.962707384483], [-3.08365286341359, 35.9629534727087], [-3.0832944362504, 35.9634202035839], [-3.08320142966401, 35.9635393045015], [-3.08246747829862, 35.9644636875007], [-3.08237191647739, 35.9645820662587], [-3.08199495143548, 35.9650414172625], [-3.08189657938168, 35.9651593322172], [-3.08174697343781, 35.9653357506515], [-3.08163578486594, 35.9654645335654], [-3.08122159282132, 35.9659357787414], [-3.08111409795049, 35.9660560456997], [-3.08026582829795, 35.9669893837873], [-3.08015586337967, 35.9671083793431], [-3.07972250596148, 35.9675696225655], [-3.07949774902006, 35.9678011641222], [-3.07905482208823, 35.9682429196118], [-3.0789401672263, 35.9683554586787], [-3.07803766999661, 35.9692272920064], [-3.07792088418914, 35.9693383301431], [-3.07746131489458, 35.9697684076533], [-3.07722671812788, 35.969981262546], [-3.0767718187415, 35.9703814677638], [-3.07665424298003, 35.970483360801], [-3.07573003912375, 35.9712723211681], [-3.07560992882204, 35.9713733148754], [-3.07513791869317, 35.9717642433277], [-3.0750149115539, 35.9718645781882], [-3.07482073625862, 35.9720205664454], [-3.0746805123668, 35.9721313011567], [-3.07416507848511, 35.9725314213274], [-3.07403171167787, 35.9726333008604], [-3.07298232457477, 35.9734221317207], [-3.07284672374065, 35.9735224302571], [-3.07231412264277, 35.9739100532056], [-3.07204019520449, 35.9741031182362], [-3.07150478069228, 35.9744685000703], [-3.07136660876886, 35.9745612928284], [-3.07028222091999, 35.9752779133079], [-3.07014230816005, 35.9753688935355], [-3.0695933359853, 35.9757201318511], [-3.06931575884286, 35.9758921740347], [-3.06878257043785, 35.9762122152205], [-3.06864510571186, 35.9762934385987], [-3.06756747814435, 35.9769201731112], [-3.06742856762274, 35.9769996859815], [-3.06688411632924, 35.9773063854822], [-3.06674325575154, 35.977384463137], [-3.06655106534429, 35.9774892750991], [-3.06653656469646, 35.97749716988], [-3.06644838566234, 35.9775450981571], [-3.0662876237647, 35.977630876925], [-3.06568664864989, 35.9779456205973], [-3.06553168269833, 35.9780253376537], [-3.06434790405038, 35.9786233807752], [-3.06419540001226, 35.9786990684431], [-3.06359789311698, 35.9789903458906], [-3.06335111073414, 35.9791072135104], [-3.06328871757365, 35.979135691918], [-3.06268058942129, 35.9794111936139], [-3.06252399460491, 35.9794808157088], [-3.06129772827482, 35.9800157538652], [-3.06113984712735, 35.9800833165886], [-3.06052170808258, 35.9803427530501], [-3.06021166038016, 35.9804679861337], [-3.05962098590673, 35.980697377285], [-3.05946901015567, 35.9807552623796], [-3.05436173595607, 35.9826962470897], [-3.0542002452742, 35.9827575211346], [-3.05293647162443, 35.9832270818892], [-3.05277385841423, 35.9832862300332], [-3.05213760999048, 35.9835127172107], [-3.05180922811379, 35.9836245658923], [-3.05116491234301, 35.9838342458029], [-3.0509992078211, 35.9838869247462], [-3.04970319159404, 35.984289243313], [-3.0495365521038, 35.9843397331739], [-3.04888485320278, 35.9845323724481], [-3.04858527401793, 35.9846170049988], [-3.04806942775412, 35.9847560436097], [-3.04793690559774, 35.9847910120716], [-3.04690139751391, 35.985058401716], [-3.04676838003867, 35.9850920010198], [-3.04624875037064, 35.9852203438148], [-3.04611529121962, 35.9852525615877], [-3.04591864941355, 35.9852989381952], [-3.04588183161917, 35.9853075651297], [-3.04573822086285, 35.9853409958721], [-3.04570139213387, 35.9853495129723], [-3.04541397694134, 35.9854155432008], [-3.04537717784116, 35.9854239414105], [-3.04523334141723, 35.9854565490816], [-3.04502494541598, 35.9855020118441], [-3.04435510011492, 35.9856424442774], [-3.04418302228586, 35.9856773214585], [-3.04283863519901, 35.9859404682313], [-3.04266594405723, 35.9859730750358], [-3.04199140247232, 35.9860957883926], [-3.04164443324662, 35.9861541494408], [-3.04096591811164, 35.9862590235389], [-3.04079170324669, 35.9862847673597], [-3.0394313871457, 35.9864765588425], [-3.03925675069566, 35.9864999997], [-3.0385749490284, 35.9865869171716], [-3.03828216093307, 35.9866209509884], [-3.03782256856405, 35.9866692248824], [-3.03770466274925, 35.9866810793333], [-3.03678454072722, 35.9867694565611], [-3.03666652378744, 35.9867802624638], [-3.03620601852502, 35.9868203641991], [-3.03608787896738, 35.9868301231573], [-3.03588498621476, 35.9868459759578], [-3.03582728335591, 35.9868503586048], [-3.03560206875073, 35.9868669728637], [-3.03554427675955, 35.9868711100655], [-3.03509375159346, 35.9869023784775], [-3.03503597473263, 35.9869062624088], [-3.034810641169, 35.9869209188864], [-3.03457664256461, 35.9869340773203], [-3.03388920659241, 35.9869666816528], [-3.03371289556457, 35.9869738758292], [-3.03233756169488, 35.9870208823392], [-3.0321611903007, 35.9870257422213], [-3.0314732928151, 35.9870401443767], [-3.03112053182898, 35.9870428618629], [-3.03043286674898, 35.9870390561691], [-3.03025658243797, 35.9870369127835], [-3.02888222377699, 35.987011087734], [-3.02870605657639, 35.9870066082702], [-3.02801936340957, 35.9869845889155], [-3.02774500727672, 35.9869729484562], [-3.0273614811129, 35.9869526953021], [-3.02726317379041, 35.9869471371588], [-3.02649674050041, 35.9869009409782], [-3.02639852267194, 35.9868946537703], [-3.02601561110116, 35.9868687104647], [-3.02591746421614, 35.9868616932811], [-3.0257152657326, 35.986846479186], [-3.02563808353232, 35.9868404439097], [-3.02533716720771, 35.9868160245648], [-3.02526003339463, 35.9868095370074], [-3.02465874101637, 35.9867571825139], [-3.02458166867995, 35.9867502433077], [-3.02428129717778, 35.986722308444], [-3.02402956488031, 35.9866964492119], [-3.02334882517147, 35.9866198768796], [-3.02317449581863, 35.9865990820774], [-3.02181679674607, 35.986427866597], [-3.02164296178411, 35.9864047555368], [-3.02096601092933, 35.9863101140487], [-3.02079154546209, 35.9862845147427], [-3.01984300760171, 35.9861387451873], [-3.0196711180751, 35.9861111449655], [-3.01900196603272, 35.9859990733661], [-3.01883070349575, 35.985969201642], [-3.01749756738684, 35.9857273866273], [-3.01732696549458, 35.9856952482622], [-3.01666296575165, 35.9855655025826], [-3.01640203253462, 35.9855116862868], [-3.0160475012393, 35.9854346958643], [-3.01595671257874, 35.985414631941], [-3.0152494539034, 35.9852556101729], [-3.0151589129962, 35.9852349036623], [-3.01480626974657, 35.9851528926403], [-3.01471596811727, 35.9851315422873], [-3.01450985729465, 35.9850820105762], [-3.01443174767737, 35.985062975972], [-3.01412740115713, 35.9849877797061], [-3.01404943560656, 35.9849682518314], [-3.01344243419555, 35.9848141513668], [-3.01336469877215, 35.9847941514445], [-3.01306196000488, 35.9847152278403], [-3.01281815102931, 35.9846490278137], [-3.01217147707139, 35.9844663804744], [-3.01200614325896, 35.9844184416111], [-3.01072064591235, 35.9840359904889], [-3.01055632313962, 35.9839858525428], [-3.00991750007779, 35.9837860488673], [-3.00959203080616, 35.9836792256384], [-3.00896172416444, 35.9834624846001], [-3.00880068051584, 35.983405833243], [-3.00754923352838, 35.982955627102], [-3.00738936598303, 35.9828968311526], [-3.00676822592875, 35.9826633661748], [-3.00651492040833, 35.982564847289], [-3.00614667702986, 35.9824167527766], [-3.00605247416591, 35.9823783956744], [-3.00531965953387, 35.9820763190629], [-3.00522590946711, 35.9820371991095], [-3.00486131998696, 35.9818832085911], [-3.00476810090609, 35.981843359498], [-3.00457851538626, 35.9817613421621], [-3.00451673497713, 35.981734402928], [-3.00427619417781, 35.9816286864604], [-3.00421462013868, 35.9816014119523], [-3.00373518952347, 35.9813873802867], [-3.00367383825271, 35.9813597773978], [-3.00343496782333, 35.9812514705047], [-3.00322184475553, 35.9811522064452], [-3.00263198388753, 35.9808700923082], [-3.00258006648311, 35.9808451005282], [-3.00248146818597, 35.9807967434818], [-3.00131341444164, 35.9802168563689], [-3.001164392955, 35.9801414981799], [-3.00058620028574, 35.9798437253575], [-3.00047993958998, 35.9797882814964], [-3.00029279633552, 35.9796870674812], [-2.99972684856403, 35.9793739466567], [-2.99958253526634, 35.9792926838242], [-2.99846347512584, 35.9786514067752], [-2.99832080964109, 35.9785682165336], [-2.9977676974317, 35.9782400604729], [-2.99753390032683, 35.9780973270927], [-2.99717341417699, 35.9778709192108], [-2.99708136464682, 35.9778124509447], [-2.99636652363279, 35.9773532604314], [-2.99627526744028, 35.9772939792591], [-2.99592091919306, 35.9770612021813], [-2.99583045841002, 35.9770011106028], [-2.99566470233562, 35.9768897700898], [-2.99561943210962, 35.9768591908577], [-2.99544332394711, 35.9767395661187], [-2.99539828220866, 35.9767087994533], [-2.99504766033923, 35.9764679603315], [-2.99500282274996, 35.9764369896522], [-2.99482830262703, 35.9763157706681], [-2.99465160597374, 35.9761902940912], [-2.99414034822181, 35.9758191391279], [-2.99401020150858, 35.9757230866386], [-2.99300271912453, 35.9749671866805], [-2.99287450157408, 35.9748693921164], [-2.99237827574793, 35.9744846465557], [-2.99212774980484, 35.9742839328422], [-2.99164705534733, 35.973885999962], [-2.99152481421522, 35.9737831349435], [-2.99057944939603, 35.9729744753025], [-2.99045926361649, 35.9728699697156], [-2.98999459451056, 35.9724592438758], [-2.98979162733901, 35.9722746699088], [-2.98946292944746, 35.9719671239605], [-2.98937922731956, 35.9718878591053], [-2.988730791251, 35.9712663408967], [-2.98864822875375, 35.9711862428501], [-2.98832847125189, 35.9708722504134], [-2.98824705559039, 35.9707913263985], [-2.98811151258134, 35.9706549537085], [-2.9880816642055, 35.9706247868435], [-2.98796559035301, 35.9705069436202], [-2.98793591385684, 35.9704766783435], [-2.98770499002201, 35.9702401051575], [-2.98767547320535, 35.9702097289879], [-2.98756064236757, 35.9700910183788], [-2.98742404727475, 35.9699467606009], [-2.9870102569769, 35.969500274779], [-2.98690528122588, 35.9693850639679], [-2.98609554034312, 35.9684810701231], [-2.98599285281753, 35.9683644458991], [-2.98559690213173, 35.9679069380503], [-2.98539850316965, 35.9676695873057], [-2.98506099687527, 35.9672513611841], [-2.98506099614589, 35.9672513602077], [-2.98506099584952, 35.967251359913], [-2.98502078412311, 35.967201530444], [-2.98492511825393, 35.9670808591608], [-2.98418831748268, 35.9661346823602], [-2.98409504328008, 35.9660127227613], [-2.98373596054098, 35.965534602614], [-2.98357463279494, 35.9653125967825], [-2.98330287311034, 35.9649258972693], [-2.98323396617385, 35.9648263651631], [-2.98270262651619, 35.9640471876375], [-2.98263528721285, 35.9639469231935], [-2.98237573220704, 35.9635544849018], [-2.98230996627213, 35.963453498931], [-2.98220984909626, 35.963297349105], [-2.98219306574057, 35.9632710659724], [-2.98212786659127, 35.963168545827], [-2.9821112144745, 35.9631422548297], [-2.98198172036801, 35.9629369671685], [-2.98196517572093, 35.9629106311847], [-2.98190085428281, 35.9628078223914], [-2.98180594398803, 35.962652395671], [-2.98150487302649, 35.9621470668241], [-2.9814289470837, 35.9620169638586], [-2.98084678889276, 35.9609982563311], [-2.98077342694502, 35.960867123363], [-2.98049233947159, 35.9603537448283], [-2.98035336803997, 35.9600885079203], [-2.9800925508898, 35.9595676234305], [-2.98002698443364, 35.9594336019504], [-2.97952588718526, 35.9583848440628], [-2.97946295590579, 35.9582499298528], [-2.9792226755229, 35.9577220565865], [-2.97911271570461, 35.9574689413439], [-2.97892286881118, 35.9570102635017], [-2.97887518182624, 35.9568923693485], [-2.97851097620775, 35.9559706142808], [-2.97846526850108, 35.9558521383555], [-2.978290899849, 35.955389032265], [-2.9782471877863, 35.9552700182456], [-2.97818634337122, 35.9551001060537], [-2.97817939202813, 35.9550806123614], [-2.97815232046007, 35.9550043753341], [-2.97814538917493, 35.9549847729534], [-2.97809161069947, 35.954832032804], [-2.978084724871, 35.9548123919881], [-2.9780580287758, 35.9547359176523], [-2.97800440531615, 35.9545767958638], [-2.97782712716423, 35.954031274275], [-2.97778303432295, 35.9538910644105], [-2.97744987447835, 35.9527952480873], [-2.97740852566792, 35.9526544267274], [-2.97725264362367, 35.9521041320896], [-2.97717822303274, 35.9518208287313], [-2.97704388583508, 35.9512663204536], [-2.97701082482677, 35.951123879593], [-2.97676384849399, 35.9500112499193], [-2.97673357098298, 35.9498683513089], [-2.97662093038329, 35.9493102301422], [-2.97659344328025, 35.9491669128952], [-2.97657053119227, 35.9490341516103], [-2.97648583820768, 35.9485157983546], [-2.97646531784809, 35.9483827373116], [-2.97631461351608, 35.9473438642994], [-2.97629648791727, 35.9472105207188], [-2.97623047555603, 35.9466899910038], [-2.97621462084333, 35.946555218367], [-2.97619307993595, 35.9463566487229], [-2.97619084969469, 35.94633581837], [-2.9761772213603, 35.9462068281108], [-2.97616194222131, 35.9460455537196], [-2.97611271411098, 35.9454584159124], [-2.97610159846269, 35.9453075600946], [-2.97602964433271, 35.9441750738688], [-2.9760218296766, 35.9440297843608], [-2.97599685835381, 35.9434628807703], [-2.97598970151521, 35.9431719278084], [-2.97598676509133, 35.9426042800069], [-2.97598742502437, 35.9424587011568], [-2.97600359048774, 35.941323252375], [-2.97600707569213, 35.9411776638203], [-2.97602617624145, 35.9406098638986], [-2.97604149892106, 35.9403204092595], [-2.97608202060163, 35.939759533528], [-2.97609378837247, 35.9396157688462], [-2.97619630386354, 35.9384949956459], [-2.97621083099444, 35.9383512976112], [-2.97627285081448, 35.9377912017418], [-2.9762901395998, 35.9376475864978], [-2.97631490083961, 35.9374571839909], [-2.97633576324512, 35.9373082687625], [-2.97642104085462, 35.9367403579375], [-2.97644432672235, 35.9365948464096], [-2.9766369843333, 35.9354609790976], [-2.97666310381169, 35.9353157231461], [-2.97677047128621, 35.934749865665], [-2.97680164070366, 35.9345943444446], [-2.9768309790033, 35.9344611898832], [-2.97695950384959, 35.93390132315], [-2.97699384688718, 35.9337579605653], [-2.97727246473643, 35.932641573437], [-2.97730957017568, 35.9324986497098], [-2.97745966153943, 35.9319421285148], [-2.97754213848817, 35.9316576818052], [-2.97771365046817, 35.9311050559515], [-2.9777589927411, 35.9309636330025], [-2.97812325964513, 35.9298628265698], [-2.97812759276586, 35.9298497694928], [-2.97817267963895, 35.9297181244506], [-2.97821519069208, 35.9295974225646], [-2.97821519529458, 35.9295974096548], [-2.97821519567894, 35.9295974084054], [-2.97837088109242, 35.9291553696023], [-2.97842588580085, 35.9290040325927], [-2.97845852720922, 35.9289169364347], [-2.97846388107937, 35.9289026915431], [-2.97853382243235, 35.9287171291325], [-2.97858515205622, 35.928584474602], [-2.97878916160909, 35.9280706133123], [-2.97884267356557, 35.9279391620799], [-2.97926932071473, 35.9269165294744], [-2.97932521782385, 35.9267857368764], [-2.97954786471255, 35.9262769384186], [-2.97967027261831, 35.9260101290696], [-2.97992547187652, 35.925478699612], [-2.97999221608125, 35.9253428515502], [-2.98052292042378, 35.9242866866702], [-2.98059226631577, 35.9241516989977], [-2.98086777092916, 35.9236269625636], [-2.98101421630725, 35.923359675536], [-2.98130975552999, 35.922842162182], [-2.98138680734308, 35.9227099497928], [-2.98199761541312, 35.9216826618974], [-2.98207719810833, 35.9215514385921], [-2.98239246684737, 35.9210416648135], [-2.98248442269001, 35.9208961551782], [-2.98252291121766, 35.9208365377455], [-2.98253278675546, 35.9208212750115], [-2.98260998366723, 35.9207022323269], [-2.98261987994791, 35.9206870055301], [-2.98265855161325, 35.9206276359442], [-2.98266848709353, 35.920612416621], [-2.98277191960549, 35.9204543279679], [-2.9828474319586, 35.9203408058946], [-2.98314567415922, 35.9198997271374], [-2.98322310650908, 35.9197870553252], [-2.98383430437252, 35.9189119050302], [-2.98391362110563, 35.9188001333885], [-2.98422661316914, 35.9183660051878], [-2.98440210815726, 35.9181305893579], [-2.9847745295185, 35.9176471842019], [-2.9848712119155, 35.9175238417114], [-2.98563435909837, 35.9165668253477], [-2.98573338856118, 35.9164447375181], [-2.98612411419998, 35.9159711261519], [-2.98632910088932, 35.9157308590957], [-2.98673774061983, 35.9152675258001], [-2.98684365529405, 35.9151493960498], [-2.98767841500575, 35.9142334853696], [-2.98778657133924, 35.9141167332536], [-2.98821269118648, 35.9136641557014], [-2.98834341685421, 35.9135279418228], [-2.9884230860407, 35.9134464931377], [-2.98844358318859, 35.9134255996065], [-2.98860349561854, 35.9132630721367], [-2.98862401764246, 35.9132422754275], [-2.98870426072255, 35.9131611957463], [-2.98872488904745, 35.9131404132804], [-2.9888632595926, 35.9130014158943], [-2.98895639247204, 35.9129090756581], [-2.98932238886697, 35.9125508925467], [-2.98941694636844, 35.9124595490608], [-2.9934749337832, 35.9085616236505], [-2.9935917616073, 35.9084506814571], [-2.99405148841793, 35.9080209725528], [-2.99429140629769, 35.9078036920063], [-2.99476725450558, 35.9073861013812], [-2.99489029092855, 35.9072798119301], [-2.99585761718674, 35.9064571676059], [-2.99598265597062, 35.9063524861562], [-2.99647413399014, 35.9059474322796], [-2.9967266009203, 35.9057457080509], [-2.9972194566334, 35.9053639362542], [-2.99726398535906, 35.9053296286922], [-2.99734673736843, 35.9052668415906], [-2.99834631500087, 35.904515922408], [-2.99847564625083, 35.9044202470636], [-2.99898343045784, 35.9040503503829], [-2.99911497874321, 35.9039559977165], [-2.99931879643708, 35.9038120643896], [-2.99946313889215, 35.9037118364719], [-3.00000466742194, 35.9033421175095], [-3.00014452304664, 35.903248169687], [-3.00124272255594, 35.9025223570966], [-3.00138445215938, 35.9024302040593], [-3.00194059161819, 35.9020744853366], [-3.0021703108292, 35.9019313701919], [-3.00250783911647, 35.9017265952037], [-3.00259468097482, 35.9016744308647], [-3.00327432196291, 35.9012702358987], [-3.00343897775379, 35.9011741391556], [-3.00408510118901, 35.9008041284427], [-3.00425179026744, 35.9007104766109], [-3.00530483790196, 35.900124833135], [-3.00569886194302, 35.8999065144593], [-3.00580062145214, 35.89985078741], [-3.00599223101953, 35.8997470809215], [-3.00614138516081, 35.8996677277533], [-3.00672584460724, 35.8993621146526], [-3.00687642230194, 35.8992847376531], [-3.00786421091524, 35.8987859772348], [-3.00795683251272, 35.8987397115588], [-3.0083191078824, 35.898560702326], [-3.00841226893711, 35.8985151683679], [-3.00860978474302, 35.8984196821852], [-3.00866988821123, 35.898390830817], [-3.00890472456143, 35.898278899998], [-3.00906213179994, 35.8982052571747], [-3.00944179205113, 35.8980309385396], [-3.00953940744186, 35.897986638503], [-3.00960239057825, 35.8979583889035], [-3.00962341612174, 35.8979489822144], [-3.00970551908765, 35.8979123427971], [-3.00972659768347, 35.8979029600841], [-3.00992821395903, 35.8978134424199], [-3.00998096940191, 35.8977901677006], [-3.01018688989004, 35.8976998982532], [-3.01023973459775, 35.8976768806786], [-3.01120082975041, 35.8972609347897], [-3.01134330911395, 35.8972003338908], [-3.0119009464051, 35.8969672812196], [-3.01214637272828, 35.8968677821345], [-3.01220460931786, 35.896845061574], [-3.012831565207, 35.8966022672985], [-3.01299290691947, 35.8965410639624], [-3.01425549006992, 35.8960720388096], [-3.01441794697272, 35.896012957297], [-3.0150535755847, 35.8957867261278], [-3.01538163112867, 35.8956750069356], [-3.01602529443703, 35.8954655758365], [-3.01619082919752, 35.8954129596334], [-3.01748549610904, 35.8950111129992], [-3.01765195939053, 35.8949606814015], [-3.018302962046, 35.8947682650012], [-3.01860188989728, 35.8946838204863], [-3.01911590092766, 35.8945452781415], [-3.01924795286251, 35.8945104321111], [-3.01983308156468, 35.8943593213332], [-3.01985517770955, 35.8943536356116], [-3.01994113719662, 35.8943315973184], [-3.01996312272356, 35.8943259811494], [-3.02018126003084, 35.8942704612137], [-3.0202242284508, 35.8942596029949], [-3.02039199601777, 35.8942175121073], [-3.02043506187261, 35.8942067855236], [-3.0209527054476, 35.8940787908774], [-3.02109442682899, 35.8940445893558], [-3.02164812455399, 35.8939142399243], [-3.02182816672949, 35.893873196966], [-3.02197558373324, 35.8938406856982], [-3.02201336666161, 35.8938324116064], [-3.02223360023994, 35.8937845234124], [-3.02236715252872, 35.8937562115898], [-3.02288879375809, 35.8936484633852], [-3.02316561125876, 35.8935943771876], [-3.02489898030817, 35.893267774015], [-3.02493737474199, 35.893260570752], [-3.02515971112153, 35.8932191989573], [-3.02566221436966, 35.8931356980817], [-3.02634157944571, 35.8930362179394], [-3.02754666812351, 35.8928605955429]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;89e74e22-44e5-49c4-b2f6-cc4e1611cdd7&#x27;, &#x27;Name&#x27;: &#x27;SP07_NAO_MS4__3_20180630T113242_20180630T113311_TOU_1234_715a_COG.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 4384824, &#x27;OriginDate&#x27;: &#x27;2025-02-24T15:50:06.376896Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-02-24T16:50:56.350741Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-02-24T16:50:56.350741Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2018/NAO_MS4__3_E1F0-COG/2018/06/30/SP07_NAO_MS4__3_20180630T113242_20180630T113311_TOU_1234_715a_COG&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;374def712758e14edba92f0dbbfe1fb6&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:50:54.939657Z&#x27;}, {&#x27;Value&#x27;: &#x27;ca9436efb94e50d812e907cbcfa8733393dcd2c4106b10aa2c724e321cd1ccab&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:50:54.963787Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2018-06-30T11:32:42.000000Z&#x27;, &#x27;End&#x27;: &#x27;2018-06-30T11:33:11.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((-6.66172849345836 56.0883192361789, -6.66411846547649 56.0881075084015, -6.6670866592912 56.0881226331531, -6.66841946550395 56.0882291317656, -6.66880165833866 56.0882714050935, -6.66969535231461 56.0883913069733, -6.67131729778266 56.0886879807541, -6.67151996423896 56.0887317494655, -6.67181899961033 56.0887982367363, -6.67275235648638 56.0890117519534, -6.67299089011992 56.0890675585574, -6.67484500326398 56.0895110308158, -6.67508192816906 56.0895689458786, -6.67600268365744 56.0897989033343, -6.67631813546928 56.0898799528439, -6.67663057450331 56.0899624957851, -6.67671060505416 56.0899837880817, -6.67733387929803 56.090150774623, -6.67741373728736 56.0901723195203, -6.6777246461949 56.0902567837814, -6.67780422903252 56.0902785537497, -6.6780982177385 56.0903595295261, -6.67825023727707 56.0904019541989, -6.67884164701002 56.09056916139, -6.67899291399484 56.0906124842276, -6.68016945332263 56.0909537856282, -6.68031991325321 56.0909979906193, -6.68090496936651 56.0911720642451, -6.68128048008472 56.0912873631251, -6.68215770004919 56.0915651744893, -6.68238161460695 56.0916374062235, -6.68411974894618 56.0922084278248, -6.68434157248258 56.0922826324463, -6.68520248742162 56.0925758429415, -6.68563961072553 56.0927300967393, -6.68648330066521 56.0930384139358, -6.68669851017416 56.093118431481, -6.68836783467384 56.0937498487937, -6.68858072952438 56.0938317605169, -6.68940636452254 56.0941548609103, -6.68972475041977 56.0942826826634, -6.69014417635833 56.0944553948008, -6.69025138876625 56.0944999240417, -6.6910850639051 56.0948491583175, -6.69119163157773 56.0948941836675, -6.69160589327499 56.0950707115663, -6.69171176745502 56.0951162131576, -6.69197056633205 56.0952283866846, -6.69206885951557 56.0952713297284, -6.69245116479345 56.0954396799041, -6.69254892551545 56.0954830707003, -6.69330892161718 56.095823059827, -6.69340607964591 56.0958668671851, -6.69378375843216 56.0960385013189, -6.69407814296825 56.0961755409314, -6.69484455218584 56.0965409627105, -6.69503972163008 56.0966355288753, -6.69655119688391 56.0973797343956, -6.6967436273345 56.0974760108155, -6.69748869315503 56.0978547939881, -6.69786516718389 56.0980524050921, -6.69858811110168 56.0984441799378, -6.69877203229572 56.0985454503681, -6.70019510219624 56.0993415880995, -6.70037610323537 56.0994444738543, -6.70107622962574 56.0998488379167, -6.70137554866057 56.1000264420413, -6.70184570208454 56.1003130607081, -6.70196552487371 56.1003869208295, -6.70289434556005 56.1009658281354, -6.70301271639663 56.1010404275513, -6.70347146246859 56.101332767562, -6.70358834634387 56.1014080863249, -6.70380128499002 56.1015468405883, -6.7038529766458 56.1015806919241, -6.70405402655568 56.1017130116732, -6.70410543720443 56.1017470166091, -6.704505436831 56.1020129153725, -6.70455659217974 56.1020470912419, -6.70475546148489 56.1021806192021, -6.70496876982385 56.1023269245628, -6.70559612375055 56.1027665165559, -6.70575536420728 56.1028799428083, -6.70698447249712 56.1037699538119, -6.70714042481033 56.1038847618947, -6.70774218010108 56.1043351801287, -6.70804410052519 56.1045688674081, -6.70861964595952 56.1050296837448, -6.7087655174385 56.1051484882922, -6.70988985383105 56.1060800539196, -6.71003230679804 56.1062001401572, -6.71058109618103 56.1066708908165, -6.71070996270958 56.1067832426582, -6.71083750482795 56.1068981808945, -6.71129034901427 56.1073132008873, -6.71140514529292 56.1074200659764, -6.71228998732282 56.1082568373996, -6.71240211427873 56.1083645675786, -6.7128341230223 56.1087863296745, -6.71294353966013 56.1088948878736, -6.71310182477709 56.1090545078868, -6.71311855312814 56.1090714200949, -6.71318386282689 56.1091376154624, -6.71320062612107 56.1091546496025, -6.71333071547272 56.1092871795872, -6.71334737762634 56.1093041978136, -6.71341214761182 56.1093705217381, -6.71354979879578 56.1095145736352, -6.7140149060583 56.1100121342317, -6.71413232503742 56.1101402356397, -6.71503367771737 56.111143294562, -6.71514739497156 56.1112724101638, -6.71558363974809 56.111777908746, -6.71579986384927 56.1120390809015, -6.71620675296327 56.1125519846697, -6.71630918747961 56.1126839544781, -6.71709323197365 56.1137166568983, -6.71719186235178 56.113849519808, -6.71756901541341 56.1143693189004, -6.71775651084568 56.1146402650283, -6.71811020668813 56.1151771120686, -6.71819887528425 56.115315172757, -6.71887425478339 56.1163944793908, -6.71895872575412 56.1165330973812, -6.71927974798319 56.1170743736427, -6.71936511815668 56.1172226259887, -6.71948530226753 56.1174377432696, -6.71955791955767 56.1175713821945, -6.71983181798574 56.1180899792173, -6.71990020298801 56.1182232580737, -6.72041663745233 56.1192600374304, -6.72048101626044 56.119393254486, -6.72072487368543 56.1199138029976, -6.72078555014714 56.1200475337403, -6.72084478694027 56.120187314131, -6.72106792820426 56.1207334197714, -6.72112312288382 56.1208736934921, -6.72144559746117 56.1217258831051, -6.72383642244865 56.1223539040709, -6.72394803496983 56.1223867129552, -6.72518814249685 56.1227707303616, -6.72630376888434 56.1231341514202, -6.72801829901952 56.1237332839414, -6.72862558672814 56.1239604597674, -6.73106035502014 56.1249660421332, -6.73284080022484 56.1257756557456, -6.735858618223 56.1273354735745, -6.73711049515407 56.1280701215915, -6.73909364615645 56.1293486499088, -6.7398440593993 56.1298808600136, -6.74065034098721 56.1304777151029, -6.74072399837998 56.1305346572293, -6.74109172552414 56.1308249212557, -6.74138265395546 56.1310594337776, -6.74277783283886 56.1322871106684, -6.74382633674008 56.1332977453708, -6.74484857365689 56.1343642164315, -6.7448813202833 56.1344013318206, -6.7457310116399 56.1354475921714, -6.74649130046642 56.1364695609436, -6.74763782747446 56.1382787215659, -6.74804899125772 56.1390581450722, -6.74875656771721 56.1406734196719, -6.74904909496933 56.1415079436414, -6.74957080976372 56.143730214465, -6.74973839386924 56.145117554924, -6.74975239001783 56.1473873147852, -6.74965716328933 56.1482649848817, -6.74914407976809 56.1505409585145, -6.74866579328527 56.1519298971856, -6.748011335814 56.1534603945986, -6.74793334315932 56.1536125290207, -6.74767333940775 56.1540937839777, -6.74748682736386 56.1544220879641, -6.74677877415953 56.1555376666381, -6.74622978199001 56.1563187208913, -6.74564761893166 56.157092543162, -6.74563276913859 56.1571110422037, -6.74552686766796 56.1572415522598, -6.74542002166207 56.1573718225571, -6.74531223111313 56.1575018530935, -6.74446382375594 56.1585145246489, -6.74435409028271 56.1586441325683, -6.74424341825006 56.1587734921324, -6.74413180765048 56.1589026033388, -6.74369289484601 56.1594051302755, -6.74352052379272 56.1595994556552, -6.74334602626091 56.1597931890503, -6.74316940222577 56.1599863304524, -6.74293312801507 56.160240843406, -6.7428722898583 56.1603060461972, -6.74281120930583 56.1603711787678, -6.74274988635673 56.1604362411174, -6.7422697775447 56.1609430672852, -6.74220795233744 56.1610080059219, -6.7421458856341 56.1610728731989, -6.74208357743379 56.161137669116, -6.74183968176833 56.161390043788, -6.74177691443514 56.1614546718775, -6.74171390683663 56.1615192275656, -6.74165065897193 56.161583710852, -6.74149812538672 56.161738461019, -6.74143759455716 56.1617995859669, -6.74137684782059 56.1618606446123, -6.74131588517628 56.1619216369548, -6.74107726052349 56.1621592755505, -6.74101585029381 56.1622201502565, -6.74095422497277 56.1622809576947, -6.74089238455962 56.1623416978648, -6.74040828723672 56.1628150041361, -6.74034599231208 56.1628756319759, -6.74028348307388 56.1629361915672, -6.74022075952141 56.1629966829097, -6.73997534732228 56.163232288175, -6.73978131975267 56.1634160108955, -6.73958531505755 56.1635990808446, -6.73938733321785 56.1637814980133, -6.73886302233893 56.1642580965534, -6.73872768993922 56.1643800047049, -6.73859147432762 56.164501607941, -6.73845437549871 56.1646229062591, -6.73737831102325 56.1655664611402, -6.73723944825629 56.1656871416956, -6.73709971109482 56.1658075095435, -6.73695909953377 56.165927564681, -6.73640734526628 56.1663945206658, -6.73612091681142 56.1666327159983, -6.73583104577894 56.1668696145052, -6.73553773213235 56.1671052161631, -6.73495912225779 56.1675620552461, -6.73480990298442 56.1676788656088, -6.73465983720979 56.1677953404131, -6.73450892492991 56.1679114796561, -6.7333254096908 56.1688145716433, -6.7331728100449 56.1689300299172, -6.73301937363873 56.1690451451838, -6.73286510046858 56.1691599174402, -6.73226019460583 56.1696061699655, -6.73201030610237 56.1697880662621, -6.73175831550094 56.169969062952, -6.73150422278829 56.170149160023, -6.73113059322813 56.1704104971235, -6.73103449715517 56.1704773801159, -6.73093811109625 56.1705441344554, -6.73084143505074 56.1706107601413, -6.73008515121172 56.1711293944136, -6.72998788892383 56.1711957651322, -6.72989033883039 56.1712620056531, -6.72979250093084 56.1713281159757, -6.72940980672518 56.1715854395245, -6.72931138899555 56.1716512914305, -6.72921268567574 56.1717170116077, -6.72911369676525 56.1717826000554, -6.72890900853463 56.1719175610834, -6.72884196009436 56.171961623868, -6.72877478274766 56.1720056262239, -6.72870747649438 56.1720495681509, -6.72844459803841 56.1722206280608, -6.72837709613453 56.1722644085769, -6.72830946626033 56.1723081283175, -6.72824170841567 56.1723517872822, -6.72772217529005 56.1726854429503, -6.72642522684489 56.1734696039751, -6.72508703416005 56.1742315574026, -6.72323661314336 56.1752044947987, -6.72276152012565 56.1754350965543, -6.72123949333131 56.1761292149219, -6.72017949722499 56.1765830647015, -6.71655978594596 56.1779257545316, -6.71394602563903 56.1787587879056, -6.70836708952006 56.1801631821367, -6.70542339351222 56.1807236179713, -6.70037870972212 56.1814373430744, -6.69831564411347 56.1816325122413, -6.69543407553677 56.1818316286625, -6.69462650220095 56.1818670811244, -6.69242281504807 56.1819219517747, -6.69102707949534 56.1819302723376, -6.688230840009 56.1818798675541, -6.68683296647456 56.1818210579094, -6.68397362132798 56.1816295669941, -6.6825153819962 56.181495220726, -6.6791410983594 56.1810808541484, -6.67723562912193 56.1807870374101, -6.67363967107242 56.180104527547, -6.67195248306329 56.1797217950659, -6.66875572012233 56.1788812485106, -6.6672484151154 56.178427649555, -6.66368487177467 56.1771832144397, -6.66166336944788 56.1763713678762, -6.65976697606531 56.1755188378505, -6.65867997104233 56.175662092689, -6.65842780640966 56.1756941406628, -6.65744259635884 56.1758147426574, -6.65693561605259 56.1758720868843, -6.65594377961468 56.1759751074884, -6.65568905493175 56.1760003933307, -6.65369973094794 56.1761887338888, -6.6534442903731 56.1762117483322, -6.65244680386413 56.1762970681631, -6.65213036295962 56.1763223568902, -6.65189522485162 56.1763398316699, -6.65183499062867 56.1763442440767, -6.65136462314629 56.1763782002885, -6.65130437486724 56.1763824856472, -6.65106928750338 56.1763989575839, -6.65100897844331 56.1764031192868, -6.65072118373203 56.1764226736525, -6.6505244582109 56.1764353614743, -6.64975661729735 56.1764822364633, -6.64955957814526 56.1764935868632, -6.64802224869678 56.1765768537869, -6.64782501618133 56.1765868588482, -6.64705538808718 56.1766232609051, -6.64659956200091 56.1766412228069, -6.64559139700699 56.1766730083817, -6.64533276724363 56.1766800094849, -6.63887746946732 56.1768470410209, -6.63685967181036 56.1768925645298, -6.63660084299461 56.1768972508536, -6.63559121820151 56.1769110397269, -6.63515861182094 56.176913736381, -6.63448127419388 56.1769129331361, -6.63430760005825 56.1769122097304, -6.63295298211519 56.176902527633, -6.63277926513698 56.1769007677245, -6.63210184410401 56.1768918853242, -6.63192816586978 56.1768890901798, -6.63164418469805 56.1768836733074, -6.63155901843813 56.1768819241838, -6.63122667159801 56.1768746121585, -6.63114140337752 56.1768726111766, -6.63047646233709 56.1768560313733, -6.63039118088574 56.1768537797357, -6.63005872896767 56.1768445144233, -6.62971496991839 56.1768328996603, -6.62870712699215 56.1767928730045, -6.62844883664085 56.176781461489, -6.62643584722642 56.1766835171318, -6.62617790658724 56.1766698108686, -6.62517275963149 56.1766118934063, -6.62465818831334 56.176577619964, -6.62365675647519 56.1765018876109, -6.62340025382667 56.1764813291171, -6.6214021296734 56.176312110455, -6.62114623094576 56.1762892742514, -6.62014954127494 56.1761957878068, -6.61978829768565 56.1761595656287, -6.61937492847406 56.176115430975, -6.61926896436018 56.1761039142045, -6.6184432921965 56.1760125888647, -6.61833744719668 56.1760006779345, -6.61792512319176 56.1759534845078, -6.61781951978278 56.1759411940385, -6.61754141362504 56.1759082908968, -6.61739362459884 56.1758904056939, -6.61681773521809 56.1758191496086, -6.61667019661019 56.175800492978, -6.61552085145387 56.1756520193288, -6.61537363182018 56.1756325987867, -6.61480019737434 56.1755553839938, -6.61440248122084 56.1754988655105, -6.61342618253542 56.1753527998522, -6.61317638302377 56.1753142362662, -6.61123261333146 56.1750048460193, -6.6109839555671 56.1749640701359, -6.61001648747407 56.1748007463571, -6.60952279093085 56.1747125989376, -6.60856511752626 56.1745321967491, -6.60832021981049 56.1744848501365, -6.60641571079956 56.1741071455759, -6.60617220818042 56.1740576321094, -6.60522537188654 56.1738603301229, -6.60494418330538 56.1738000778323, -6.60479181106891 56.1737665236307, -6.60475280588783 56.1737579018156, -6.60444812111592 56.1736902998022, -6.60440902412196 56.1736815924566, -6.60425663736947 56.1736475267707, -6.60421758698993 56.173638764472, -6.60395397795173 56.1735793936907, -6.60375322290155 56.1735333093413, -6.60297242097702 56.1733506687254, -6.602772765377 56.1733030911416, -6.60122005133591 56.1729262289324, -6.60102153933222 56.1728771663229, -6.60024970308731 56.1726829616513, -6.59992701588803 56.1725993916922, -6.59943901572215 56.1724693773849, -6.599314144632 56.1724357438605, -6.5983422504191 56.1721711123052, -6.59821791162692 56.1721368899468, -6.59773403681173 56.1720022785102, -6.59761023477462 56.1719674694297, -6.59645482412706 56.1716391515843, -6.59634771329985 56.17160843589, -6.59593070576807 56.1714877624068, -6.59582396679079 56.1714565941087, -6.59499323894325 56.1712118259838, -6.59488691422218 56.1711802165299, -6.59447317484872 56.1710561161365, -6.59414105405991 56.1709536964086, -6.59326259718507 56.1706752897673, -6.59303837786715 56.17060290533, -6.59129795728501 56.1700306696174, -6.5910758605357 56.1699563091867, -6.59021389777093 56.1696624812468, -6.58994964251971 56.1695704509225, -6.58977686991131 56.169508990886, -6.58973258833726 56.1694931824605, -6.58938779181486 56.1693696516243, -6.58934358095509 56.169353755659, -6.5891715274136 56.1692916740188, -6.58912750557489 56.1692757334504, -6.58883852274368 56.1691707205594, -6.58866627115703 56.1691072542887, -6.58799732796101 56.1688573638989, -6.58782653174504 56.1687926811013, -6.58650026727942 56.1682835056942, -6.58633096882829 56.1682176203621, -6.58567367740439 56.1679583463299, -6.58529763843435 56.1678054643814, -6.58449026736203 56.1674672422823, -6.58428448632595 56.1673795971186, -6.58403130695123 56.1672699722499, -6.58215117101972 56.1663153317309, -6.58113380871097 56.1656489451959, -6.58100367999737 56.1655535141561, -6.57919809551548 56.1638475967226, -6.57823905787633 56.1622893840912, -6.57782881109861 56.1608296020889, -6.57782509218309 56.1595712216307, -6.57782754155469 56.1595518211977, -6.57827069722893 56.158013207188, -6.57877085881363 56.1571126015537, -6.57940726049358 56.1562832971561, -6.58015392580908 56.1555279755169, -6.58138720130524 56.1545628561846, -6.5814827371954 56.1544983740659, -6.58230792469566 56.1539881099568, -6.58352268095391 56.1533613070625, -6.58644802616249 56.152280260706, -6.58702005651054 56.1521238042744, -6.59014149542387 56.1515204998049, -6.63965525007664 56.1450092525185, -6.63981319784029 56.1440872970293, -6.6400006259672 56.1433990529856, -6.64040061358507 56.1422063774319, -6.64060217271911 56.141701509359, -6.64116728055688 56.14048933811, -6.64154381375964 56.1397847465238, -6.64229762948327 56.1385435379073, -6.64266437034441 56.1380058705621, -6.64364620637931 56.1367209747115, -6.64427650152577 56.1359785446273, -6.64701596380208 56.1333572577704, -6.64929707143517 56.1315492507405, -6.65191140882478 56.1297406172014, -6.65204232268352 56.1296612606157, -6.65240769630645 56.1294434675788, -6.6526430514482 56.1293055087034, -6.65406335811638 56.1285233885722, -6.65527626724671 56.1278959349117, -6.65746139043708 56.1268630346932, -6.65841841046376 56.1264502107658, -6.65991018421172 56.1258441677402, -6.66043443904284 56.1256438043798, -6.66132664380993 56.1253225980948, -6.64986195668544 56.0990940996251, -6.64941536241486 56.0972665596654, -6.64962322909367 56.0955238209941, -6.65060257886523 56.0936049506975, -6.65071475598314 56.0934565398129, -6.65082860233741 56.0933131465159, -6.65176313053776 56.0923319132041, -6.65227964620283 56.0918926263136, -6.65329027664794 56.0911687548862, -6.65469024789294 56.0903728886076, -6.65563394973909 56.0899349917823, -6.65722834460689 56.0893326109145, -6.65738682433085 56.0892808736904, -6.66032564894276 56.0885423049404, -6.66172849345836 56.0883192361789))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[-6.66172849345836, 56.0883192361789], [-6.66411846547649, 56.0881075084015], [-6.6670866592912, 56.0881226331531], [-6.66841946550395, 56.0882291317656], [-6.66880165833866, 56.0882714050935], [-6.66969535231461, 56.0883913069733], [-6.67131729778266, 56.0886879807541], [-6.67151996423896, 56.0887317494655], [-6.67181899961033, 56.0887982367363], [-6.67275235648638, 56.0890117519534], [-6.67299089011992, 56.0890675585574], [-6.67484500326398, 56.0895110308158], [-6.67508192816906, 56.0895689458786], [-6.67600268365744, 56.0897989033343], [-6.67631813546928, 56.0898799528439], [-6.67663057450331, 56.0899624957851], [-6.67671060505416, 56.0899837880817], [-6.67733387929803, 56.090150774623], [-6.67741373728736, 56.0901723195203], [-6.6777246461949, 56.0902567837814], [-6.67780422903252, 56.0902785537497], [-6.6780982177385, 56.0903595295261], [-6.67825023727707, 56.0904019541989], [-6.67884164701002, 56.09056916139], [-6.67899291399484, 56.0906124842276], [-6.68016945332263, 56.0909537856282], [-6.68031991325321, 56.0909979906193], [-6.68090496936651, 56.0911720642451], [-6.68128048008472, 56.0912873631251], [-6.68215770004919, 56.0915651744893], [-6.68238161460695, 56.0916374062235], [-6.68411974894618, 56.0922084278248], [-6.68434157248258, 56.0922826324463], [-6.68520248742162, 56.0925758429415], [-6.68563961072553, 56.0927300967393], [-6.68648330066521, 56.0930384139358], [-6.68669851017416, 56.093118431481], [-6.68836783467384, 56.0937498487937], [-6.68858072952438, 56.0938317605169], [-6.68940636452254, 56.0941548609103], [-6.68972475041977, 56.0942826826634], [-6.69014417635833, 56.0944553948008], [-6.69025138876625, 56.0944999240417], [-6.6910850639051, 56.0948491583175], [-6.69119163157773, 56.0948941836675], [-6.69160589327499, 56.0950707115663], [-6.69171176745502, 56.0951162131576], [-6.69197056633205, 56.0952283866846], [-6.69206885951557, 56.0952713297284], [-6.69245116479345, 56.0954396799041], [-6.69254892551545, 56.0954830707003], [-6.69330892161718, 56.095823059827], [-6.69340607964591, 56.0958668671851], [-6.69378375843216, 56.0960385013189], [-6.69407814296825, 56.0961755409314], [-6.69484455218584, 56.0965409627105], [-6.69503972163008, 56.0966355288753], [-6.69655119688391, 56.0973797343956], [-6.6967436273345, 56.0974760108155], [-6.69748869315503, 56.0978547939881], [-6.69786516718389, 56.0980524050921], [-6.69858811110168, 56.0984441799378], [-6.69877203229572, 56.0985454503681], [-6.70019510219624, 56.0993415880995], [-6.70037610323537, 56.0994444738543], [-6.70107622962574, 56.0998488379167], [-6.70137554866057, 56.1000264420413], [-6.70184570208454, 56.1003130607081], [-6.70196552487371, 56.1003869208295], [-6.70289434556005, 56.1009658281354], [-6.70301271639663, 56.1010404275513], [-6.70347146246859, 56.101332767562], [-6.70358834634387, 56.1014080863249], [-6.70380128499002, 56.1015468405883], [-6.7038529766458, 56.1015806919241], [-6.70405402655568, 56.1017130116732], [-6.70410543720443, 56.1017470166091], [-6.704505436831, 56.1020129153725], [-6.70455659217974, 56.1020470912419], [-6.70475546148489, 56.1021806192021], [-6.70496876982385, 56.1023269245628], [-6.70559612375055, 56.1027665165559], [-6.70575536420728, 56.1028799428083], [-6.70698447249712, 56.1037699538119], [-6.70714042481033, 56.1038847618947], [-6.70774218010108, 56.1043351801287], [-6.70804410052519, 56.1045688674081], [-6.70861964595952, 56.1050296837448], [-6.7087655174385, 56.1051484882922], [-6.70988985383105, 56.1060800539196], [-6.71003230679804, 56.1062001401572], [-6.71058109618103, 56.1066708908165], [-6.71070996270958, 56.1067832426582], [-6.71083750482795, 56.1068981808945], [-6.71129034901427, 56.1073132008873], [-6.71140514529292, 56.1074200659764], [-6.71228998732282, 56.1082568373996], [-6.71240211427873, 56.1083645675786], [-6.7128341230223, 56.1087863296745], [-6.71294353966013, 56.1088948878736], [-6.71310182477709, 56.1090545078868], [-6.71311855312814, 56.1090714200949], [-6.71318386282689, 56.1091376154624], [-6.71320062612107, 56.1091546496025], [-6.71333071547272, 56.1092871795872], [-6.71334737762634, 56.1093041978136], [-6.71341214761182, 56.1093705217381], [-6.71354979879578, 56.1095145736352], [-6.7140149060583, 56.1100121342317], [-6.71413232503742, 56.1101402356397], [-6.71503367771737, 56.111143294562], [-6.71514739497156, 56.1112724101638], [-6.71558363974809, 56.111777908746], [-6.71579986384927, 56.1120390809015], [-6.71620675296327, 56.1125519846697], [-6.71630918747961, 56.1126839544781], [-6.71709323197365, 56.1137166568983], [-6.71719186235178, 56.113849519808], [-6.71756901541341, 56.1143693189004], [-6.71775651084568, 56.1146402650283], [-6.71811020668813, 56.1151771120686], [-6.71819887528425, 56.115315172757], [-6.71887425478339, 56.1163944793908], [-6.71895872575412, 56.1165330973812], [-6.71927974798319, 56.1170743736427], [-6.71936511815668, 56.1172226259887], [-6.71948530226753, 56.1174377432696], [-6.71955791955767, 56.1175713821945], [-6.71983181798574, 56.1180899792173], [-6.71990020298801, 56.1182232580737], [-6.72041663745233, 56.1192600374304], [-6.72048101626044, 56.119393254486], [-6.72072487368543, 56.1199138029976], [-6.72078555014714, 56.1200475337403], [-6.72084478694027, 56.120187314131], [-6.72106792820426, 56.1207334197714], [-6.72112312288382, 56.1208736934921], [-6.72144559746117, 56.1217258831051], [-6.72383642244865, 56.1223539040709], [-6.72394803496983, 56.1223867129552], [-6.72518814249685, 56.1227707303616], [-6.72630376888434, 56.1231341514202], [-6.72801829901952, 56.1237332839414], [-6.72862558672814, 56.1239604597674], [-6.73106035502014, 56.1249660421332], [-6.73284080022484, 56.1257756557456], [-6.735858618223, 56.1273354735745], [-6.73711049515407, 56.1280701215915], [-6.73909364615645, 56.1293486499088], [-6.7398440593993, 56.1298808600136], [-6.74065034098721, 56.1304777151029], [-6.74072399837998, 56.1305346572293], [-6.74109172552414, 56.1308249212557], [-6.74138265395546, 56.1310594337776], [-6.74277783283886, 56.1322871106684], [-6.74382633674008, 56.1332977453708], [-6.74484857365689, 56.1343642164315], [-6.7448813202833, 56.1344013318206], [-6.7457310116399, 56.1354475921714], [-6.74649130046642, 56.1364695609436], [-6.74763782747446, 56.1382787215659], [-6.74804899125772, 56.1390581450722], [-6.74875656771721, 56.1406734196719], [-6.74904909496933, 56.1415079436414], [-6.74957080976372, 56.143730214465], [-6.74973839386924, 56.145117554924], [-6.74975239001783, 56.1473873147852], [-6.74965716328933, 56.1482649848817], [-6.74914407976809, 56.1505409585145], [-6.74866579328527, 56.1519298971856], [-6.748011335814, 56.1534603945986], [-6.74793334315932, 56.1536125290207], [-6.74767333940775, 56.1540937839777], [-6.74748682736386, 56.1544220879641], [-6.74677877415953, 56.1555376666381], [-6.74622978199001, 56.1563187208913], [-6.74564761893166, 56.157092543162], [-6.74563276913859, 56.1571110422037], [-6.74552686766796, 56.1572415522598], [-6.74542002166207, 56.1573718225571], [-6.74531223111313, 56.1575018530935], [-6.74446382375594, 56.1585145246489], [-6.74435409028271, 56.1586441325683], [-6.74424341825006, 56.1587734921324], [-6.74413180765048, 56.1589026033388], [-6.74369289484601, 56.1594051302755], [-6.74352052379272, 56.1595994556552], [-6.74334602626091, 56.1597931890503], [-6.74316940222577, 56.1599863304524], [-6.74293312801507, 56.160240843406], [-6.7428722898583, 56.1603060461972], [-6.74281120930583, 56.1603711787678], [-6.74274988635673, 56.1604362411174], [-6.7422697775447, 56.1609430672852], [-6.74220795233744, 56.1610080059219], [-6.7421458856341, 56.1610728731989], [-6.74208357743379, 56.161137669116], [-6.74183968176833, 56.161390043788], [-6.74177691443514, 56.1614546718775], [-6.74171390683663, 56.1615192275656], [-6.74165065897193, 56.161583710852], [-6.74149812538672, 56.161738461019], [-6.74143759455716, 56.1617995859669], [-6.74137684782059, 56.1618606446123], [-6.74131588517628, 56.1619216369548], [-6.74107726052349, 56.1621592755505], [-6.74101585029381, 56.1622201502565], [-6.74095422497277, 56.1622809576947], [-6.74089238455962, 56.1623416978648], [-6.74040828723672, 56.1628150041361], [-6.74034599231208, 56.1628756319759], [-6.74028348307388, 56.1629361915672], [-6.74022075952141, 56.1629966829097], [-6.73997534732228, 56.163232288175], [-6.73978131975267, 56.1634160108955], [-6.73958531505755, 56.1635990808446], [-6.73938733321785, 56.1637814980133], [-6.73886302233893, 56.1642580965534], [-6.73872768993922, 56.1643800047049], [-6.73859147432762, 56.164501607941], [-6.73845437549871, 56.1646229062591], [-6.73737831102325, 56.1655664611402], [-6.73723944825629, 56.1656871416956], [-6.73709971109482, 56.1658075095435], [-6.73695909953377, 56.165927564681], [-6.73640734526628, 56.1663945206658], [-6.73612091681142, 56.1666327159983], [-6.73583104577894, 56.1668696145052], [-6.73553773213235, 56.1671052161631], [-6.73495912225779, 56.1675620552461], [-6.73480990298442, 56.1676788656088], [-6.73465983720979, 56.1677953404131], [-6.73450892492991, 56.1679114796561], [-6.7333254096908, 56.1688145716433], [-6.7331728100449, 56.1689300299172], [-6.73301937363873, 56.1690451451838], [-6.73286510046858, 56.1691599174402], [-6.73226019460583, 56.1696061699655], [-6.73201030610237, 56.1697880662621], [-6.73175831550094, 56.169969062952], [-6.73150422278829, 56.170149160023], [-6.73113059322813, 56.1704104971235], [-6.73103449715517, 56.1704773801159], [-6.73093811109625, 56.1705441344554], [-6.73084143505074, 56.1706107601413], [-6.73008515121172, 56.1711293944136], [-6.72998788892383, 56.1711957651322], [-6.72989033883039, 56.1712620056531], [-6.72979250093084, 56.1713281159757], [-6.72940980672518, 56.1715854395245], [-6.72931138899555, 56.1716512914305], [-6.72921268567574, 56.1717170116077], [-6.72911369676525, 56.1717826000554], [-6.72890900853463, 56.1719175610834], [-6.72884196009436, 56.171961623868], [-6.72877478274766, 56.1720056262239], [-6.72870747649438, 56.1720495681509], [-6.72844459803841, 56.1722206280608], [-6.72837709613453, 56.1722644085769], [-6.72830946626033, 56.1723081283175], [-6.72824170841567, 56.1723517872822], [-6.72772217529005, 56.1726854429503], [-6.72642522684489, 56.1734696039751], [-6.72508703416005, 56.1742315574026], [-6.72323661314336, 56.1752044947987], [-6.72276152012565, 56.1754350965543], [-6.72123949333131, 56.1761292149219], [-6.72017949722499, 56.1765830647015], [-6.71655978594596, 56.1779257545316], [-6.71394602563903, 56.1787587879056], [-6.70836708952006, 56.1801631821367], [-6.70542339351222, 56.1807236179713], [-6.70037870972212, 56.1814373430744], [-6.69831564411347, 56.1816325122413], [-6.69543407553677, 56.1818316286625], [-6.69462650220095, 56.1818670811244], [-6.69242281504807, 56.1819219517747], [-6.69102707949534, 56.1819302723376], [-6.688230840009, 56.1818798675541], [-6.68683296647456, 56.1818210579094], [-6.68397362132798, 56.1816295669941], [-6.6825153819962, 56.181495220726], [-6.6791410983594, 56.1810808541484], [-6.67723562912193, 56.1807870374101], [-6.67363967107242, 56.180104527547], [-6.67195248306329, 56.1797217950659], [-6.66875572012233, 56.1788812485106], [-6.6672484151154, 56.178427649555], [-6.66368487177467, 56.1771832144397], [-6.66166336944788, 56.1763713678762], [-6.65976697606531, 56.1755188378505], [-6.65867997104233, 56.175662092689], [-6.65842780640966, 56.1756941406628], [-6.65744259635884, 56.1758147426574], [-6.65693561605259, 56.1758720868843], [-6.65594377961468, 56.1759751074884], [-6.65568905493175, 56.1760003933307], [-6.65369973094794, 56.1761887338888], [-6.6534442903731, 56.1762117483322], [-6.65244680386413, 56.1762970681631], [-6.65213036295962, 56.1763223568902], [-6.65189522485162, 56.1763398316699], [-6.65183499062867, 56.1763442440767], [-6.65136462314629, 56.1763782002885], [-6.65130437486724, 56.1763824856472], [-6.65106928750338, 56.1763989575839], [-6.65100897844331, 56.1764031192868], [-6.65072118373203, 56.1764226736525], [-6.6505244582109, 56.1764353614743], [-6.64975661729735, 56.1764822364633], [-6.64955957814526, 56.1764935868632], [-6.64802224869678, 56.1765768537869], [-6.64782501618133, 56.1765868588482], [-6.64705538808718, 56.1766232609051], [-6.64659956200091, 56.1766412228069], [-6.64559139700699, 56.1766730083817], [-6.64533276724363, 56.1766800094849], [-6.63887746946732, 56.1768470410209], [-6.63685967181036, 56.1768925645298], [-6.63660084299461, 56.1768972508536], [-6.63559121820151, 56.1769110397269], [-6.63515861182094, 56.176913736381], [-6.63448127419388, 56.1769129331361], [-6.63430760005825, 56.1769122097304], [-6.63295298211519, 56.176902527633], [-6.63277926513698, 56.1769007677245], [-6.63210184410401, 56.1768918853242], [-6.63192816586978, 56.1768890901798], [-6.63164418469805, 56.1768836733074], [-6.63155901843813, 56.1768819241838], [-6.63122667159801, 56.1768746121585], [-6.63114140337752, 56.1768726111766], [-6.63047646233709, 56.1768560313733], [-6.63039118088574, 56.1768537797357], [-6.63005872896767, 56.1768445144233], [-6.62971496991839, 56.1768328996603], [-6.62870712699215, 56.1767928730045], [-6.62844883664085, 56.176781461489], [-6.62643584722642, 56.1766835171318], [-6.62617790658724, 56.1766698108686], [-6.62517275963149, 56.1766118934063], [-6.62465818831334, 56.176577619964], [-6.62365675647519, 56.1765018876109], [-6.62340025382667, 56.1764813291171], [-6.6214021296734, 56.176312110455], [-6.62114623094576, 56.1762892742514], [-6.62014954127494, 56.1761957878068], [-6.61978829768565, 56.1761595656287], [-6.61937492847406, 56.176115430975], [-6.61926896436018, 56.1761039142045], [-6.6184432921965, 56.1760125888647], [-6.61833744719668, 56.1760006779345], [-6.61792512319176, 56.1759534845078], [-6.61781951978278, 56.1759411940385], [-6.61754141362504, 56.1759082908968], [-6.61739362459884, 56.1758904056939], [-6.61681773521809, 56.1758191496086], [-6.61667019661019, 56.175800492978], [-6.61552085145387, 56.1756520193288], [-6.61537363182018, 56.1756325987867], [-6.61480019737434, 56.1755553839938], [-6.61440248122084, 56.1754988655105], [-6.61342618253542, 56.1753527998522], [-6.61317638302377, 56.1753142362662], [-6.61123261333146, 56.1750048460193], [-6.6109839555671, 56.1749640701359], [-6.61001648747407, 56.1748007463571], [-6.60952279093085, 56.1747125989376], [-6.60856511752626, 56.1745321967491], [-6.60832021981049, 56.1744848501365], [-6.60641571079956, 56.1741071455759], [-6.60617220818042, 56.1740576321094], [-6.60522537188654, 56.1738603301229], [-6.60494418330538, 56.1738000778323], [-6.60479181106891, 56.1737665236307], [-6.60475280588783, 56.1737579018156], [-6.60444812111592, 56.1736902998022], [-6.60440902412196, 56.1736815924566], [-6.60425663736947, 56.1736475267707], [-6.60421758698993, 56.173638764472], [-6.60395397795173, 56.1735793936907], [-6.60375322290155, 56.1735333093413], [-6.60297242097702, 56.1733506687254], [-6.602772765377, 56.1733030911416], [-6.60122005133591, 56.1729262289324], [-6.60102153933222, 56.1728771663229], [-6.60024970308731, 56.1726829616513], [-6.59992701588803, 56.1725993916922], [-6.59943901572215, 56.1724693773849], [-6.599314144632, 56.1724357438605], [-6.5983422504191, 56.1721711123052], [-6.59821791162692, 56.1721368899468], [-6.59773403681173, 56.1720022785102], [-6.59761023477462, 56.1719674694297], [-6.59645482412706, 56.1716391515843], [-6.59634771329985, 56.17160843589], [-6.59593070576807, 56.1714877624068], [-6.59582396679079, 56.1714565941087], [-6.59499323894325, 56.1712118259838], [-6.59488691422218, 56.1711802165299], [-6.59447317484872, 56.1710561161365], [-6.59414105405991, 56.1709536964086], [-6.59326259718507, 56.1706752897673], [-6.59303837786715, 56.17060290533], [-6.59129795728501, 56.1700306696174], [-6.5910758605357, 56.1699563091867], [-6.59021389777093, 56.1696624812468], [-6.58994964251971, 56.1695704509225], [-6.58977686991131, 56.169508990886], [-6.58973258833726, 56.1694931824605], [-6.58938779181486, 56.1693696516243], [-6.58934358095509, 56.169353755659], [-6.5891715274136, 56.1692916740188], [-6.58912750557489, 56.1692757334504], [-6.58883852274368, 56.1691707205594], [-6.58866627115703, 56.1691072542887], [-6.58799732796101, 56.1688573638989], [-6.58782653174504, 56.1687926811013], [-6.58650026727942, 56.1682835056942], [-6.58633096882829, 56.1682176203621], [-6.58567367740439, 56.1679583463299], [-6.58529763843435, 56.1678054643814], [-6.58449026736203, 56.1674672422823], [-6.58428448632595, 56.1673795971186], [-6.58403130695123, 56.1672699722499], [-6.58215117101972, 56.1663153317309], [-6.58113380871097, 56.1656489451959], [-6.58100367999737, 56.1655535141561], [-6.57919809551548, 56.1638475967226], [-6.57823905787633, 56.1622893840912], [-6.57782881109861, 56.1608296020889], [-6.57782509218309, 56.1595712216307], [-6.57782754155469, 56.1595518211977], [-6.57827069722893, 56.158013207188], [-6.57877085881363, 56.1571126015537], [-6.57940726049358, 56.1562832971561], [-6.58015392580908, 56.1555279755169], [-6.58138720130524, 56.1545628561846], [-6.5814827371954, 56.1544983740659], [-6.58230792469566, 56.1539881099568], [-6.58352268095391, 56.1533613070625], [-6.58644802616249, 56.152280260706], [-6.58702005651054, 56.1521238042744], [-6.59014149542387, 56.1515204998049], [-6.63965525007664, 56.1450092525185], [-6.63981319784029, 56.1440872970293], [-6.6400006259672, 56.1433990529856], [-6.64040061358507, 56.1422063774319], [-6.64060217271911, 56.141701509359], [-6.64116728055688, 56.14048933811], [-6.64154381375964, 56.1397847465238], [-6.64229762948327, 56.1385435379073], [-6.64266437034441, 56.1380058705621], [-6.64364620637931, 56.1367209747115], [-6.64427650152577, 56.1359785446273], [-6.64701596380208, 56.1333572577704], [-6.64929707143517, 56.1315492507405], [-6.65191140882478, 56.1297406172014], [-6.65204232268352, 56.1296612606157], [-6.65240769630645, 56.1294434675788], [-6.6526430514482, 56.1293055087034], [-6.65406335811638, 56.1285233885722], [-6.65527626724671, 56.1278959349117], [-6.65746139043708, 56.1268630346932], [-6.65841841046376, 56.1264502107658], [-6.65991018421172, 56.1258441677402], [-6.66043443904284, 56.1256438043798], [-6.66132664380993, 56.1253225980948], [-6.64986195668544, 56.0990940996251], [-6.64941536241486, 56.0972665596654], [-6.64962322909367, 56.0955238209941], [-6.65060257886523, 56.0936049506975], [-6.65071475598314, 56.0934565398129], [-6.65082860233741, 56.0933131465159], [-6.65176313053776, 56.0923319132041], [-6.65227964620283, 56.0918926263136], [-6.65329027664794, 56.0911687548862], [-6.65469024789294, 56.0903728886076], [-6.65563394973909, 56.0899349917823], [-6.65722834460689, 56.0893326109145], [-6.65738682433085, 56.0892808736904], [-6.66032564894276, 56.0885423049404], [-6.66172849345836, 56.0883192361789]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;d588636a-99ac-4aba-958e-440300c88baa&#x27;, &#x27;Name&#x27;: &#x27;SP06_NAO_MS4__3_20170813T092601_20170813T092605_TOU_1234_f3dd_COG.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 27790870, &#x27;OriginDate&#x27;: &#x27;2025-02-24T15:10:39.272182Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-02-24T16:12:10.395456Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-02-24T16:12:10.395456Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2018/NAO_MS4__3_E1F0-COG/2017/08/13/SP06_NAO_MS4__3_20170813T092601_20170813T092605_TOU_1234_f3dd_COG&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;bd8275b59a4f796a10a74b7e5e23257f&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:12:09.087706Z&#x27;}, {&#x27;Value&#x27;: &#x27;7fcd0e8776d23432dc025589644aa0ec5a9548b636532fb878516b03ec9bf94d&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:12:09.168292Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2017-08-13T09:26:01.000000Z&#x27;, &#x27;End&#x27;: &#x27;2017-08-13T09:26:05.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((14.3001647254945 44.4343826935729, 14.2999576319834 44.4343918802468, 14.2997505922243 44.4344016822731, 14.2995436062106 44.4344120996521, 14.2987373842965 44.4344550816494, 14.298518406047 44.4344674481734, 14.2982995043305 44.4344805033815, 14.2980806791391 44.4344942472743, 14.2979341855001 44.4345039126862, 14.2978864881198 44.434507084396, 14.2975998311241 44.4345263854129, 14.2974110833599 44.4345396165792, 14.2972224056253 44.4345533601837, 14.2970337979153 44.4345676162267, 14.2963031882504 44.434624844255, 14.2961159399825 44.4346400220642, 14.2959287714294 44.4346557049272, 14.2957416825863 44.4346718928445, 14.2942831768157 44.4348020742141, 14.2940962622742 44.4348192685663, 14.2939094379652 44.434836967006, 14.2937227038838 44.4348551695337, 14.2929947759233 44.4349281251307, 14.29269795929 44.4349591725001, 14.2924014057405 44.4349914933689, 14.2921051152554 44.4350250877393, 14.291676213738 44.435075606162, 14.2915663053974 44.435088731586, 14.291456437349 44.4351020322433, 14.2913466095917 44.4351155081337, 14.2904900774302 44.4352220072912, 14.2903803184424 44.4352358343355, 14.2902706019167 44.435249836388, 14.2901609278521 44.4352640134488, 14.2897332821958 44.4353199966206, 14.2896236487694 44.4353345292965, 14.2895140600016 44.4353492368458, 14.2894045158915 44.4353641192686, 14.2879880032277 44.4355588948122, 14.2879000083757 44.4355711107968, 14.2878120436368 44.4355834396172, 14.2877241090105 44.4355958812737, 14.2873813549572 44.4356448328432, 14.287293517446 44.4356574945783, 14.2872057111427 44.4356702688975, 14.2871179360467 44.4356831558006, 14.2864333187165 44.4357845815454, 14.2863455884372 44.4357976957328, 14.2862578904965 44.4358109223859, 14.2861702248937 44.435824261505, 14.2858283777594 44.4358767341184, 14.2855423131513 44.4359218986382, 14.2852566194092 44.4359682606023, 14.2849712965161 44.4360158200138, 14.2842002769725 44.4361477439375, 14.2840027730798 44.4361821438945, 14.2838054635124 44.4362171175881, 14.2836083482649 44.4362526650197, 14.2820727533417 44.4365343280232, 14.2818761161382 44.4365710032549, 14.2816796859734 44.4366082494076, 14.2814834628419 44.4366460664823, 14.2807193899716 44.4367957010199, 14.2805164151414 44.4368361077889, 14.2803136768556 44.4368771254071, 14.2801111751084 44.4369187538759, 14.2798538201439 44.4369724976152, 14.27966419203 44.4370126795033, 14.2794747844565 44.4370533970152, 14.2792855974188 44.4370946501523, 14.2785505924554 44.4372571897194, 14.2783623398832 44.4372994008838, 14.278174318352 44.4373421423633, 14.2779865278571 44.4373854141593, 14.276525873045 44.4377265208823, 14.2763388064384 44.4377707878945, 14.2761519817615 44.4378155811062, 14.2759653990097 44.4378609005186, 14.275238743453 44.4380396780634, 14.2748631314302 44.4381344813637, 14.2744885783983 44.4382314168545, 14.2741150843207 44.4383304845472, 14.2733812262776 44.4385298910392, 14.2731933341041 44.4385815631079, 14.2730057303185 44.4386337747642, 14.2728184149163 44.4386865260097, 14.2713598694279 44.4391021075997, 14.2711731407732 44.4391559322708, 14.2709867124906 44.4392102931146, 14.2708005845759 44.4392651901328, 14.2700758965625 44.4394813654305, 14.2698194434301 44.4395590623487, 14.2695635921841 44.4396377770559, 14.2692033331452 44.4397510150275, 14.269098429811 44.4397846927561, 14.2689936328099 44.4398185427425, 14.2683113368892 44.4400402718326, 14.2681366844352 44.4400976065039, 14.2679623371035 44.4401554195865, 14.2677882948907 44.4402137110819, 14.2664333707773 44.4406720294672, 14.2662599559098 44.4407312691923, 14.2660868562707 44.4407909838498, 14.2659140718565 44.4408511734413, 14.2652414444176 44.4410877619797, 14.2650686756281 44.4411491207953, 14.2648962345211 44.4412109544263, 14.2647241210933 44.4412732628745, 14.2644979487489 44.4413559229756, 14.2644661224535 44.4413675699255, 14.2643542831681 44.4414085825236, 14.2641633706213 44.4414793401219, 14.2639728795856 44.4415506823016, 14.2637828100567 44.4416226090648, 14.263074097394 44.4418935806111, 14.2628926517045 44.4419636401198, 14.262711606032 44.4420342323277, 14.2625309603731 44.4421053572368, 14.2611575635541 44.4426513462373, 14.2609818346711 44.4427218654805, 14.2608064991256 44.4427928887766, 14.2606315569144 44.4428644161276, 14.2599509051958 44.4431452993387, 14.2596034650399 44.4432913407878, 14.2592576648534 44.4434393700361, 14.2589135046134 44.4435893870994, 14.2582456478299 44.4438857698724, 14.2580748138365 44.4439622612954, 14.2579044064103 44.4440392424775, 14.2577344255486 44.4441167134205, 14.2564121439971 44.4447246829203, 14.2562430228651 44.4448031270968, 14.2560743391808 44.4448820560448, 14.2559060929415 44.4449614697665, 14.2552516691017 44.4452730567038, 14.2549365175752 44.4454255762636, 14.2546229798274 44.4455797964583, 14.2543110558436 44.4457357173021, 14.253742062673 44.4460247354887, 14.2535965228926 44.4460992187208, 14.2534513515079 44.4461740721726, 14.2533065485175 44.4462492958456, 14.2521801445908 44.446838820451, 14.2520360702285 44.4469147862583, 14.2518923716274 44.4469911185369, 14.2517490487864 44.4470678172882, 14.2511915691245 44.4473683619211, 14.2510489975674 44.4474457926606, 14.2509068090364 44.4475235860101, 14.2507650035305 44.4476017419714, 14.250578355145 44.4477053701608, 14.2505425063566 44.4477253012936, 14.2504548919483 44.4477741168721, 14.2504192416087 44.4477940112604, 14.2502620907348 44.4478819014569, 14.2502263449185 44.4479019229854, 14.2501389132904 44.4479509984325, 14.2499630562397 44.4480506330776, 14.2497878174764 44.4481508276544, 14.2496131969986 44.448251582166, 14.2490031726889 44.4486067719632, 14.2488472617706 44.4486982945966, 14.2486918611134 44.4487902635628, 14.248536970716 44.4488826788641, 14.2473329625472 44.4496068914227, 14.2471790938513 44.4497001951961, 14.2470257453619 44.449793939383, 14.2469951545718 44.4498126701619, 14.2420383262897 44.4528523688241, 14.2420030916813 44.4528740141927, 14.2418720744953 44.452954650611, 14.2417414407274 44.453035609398, 14.2412335009526 44.4533525809065, 14.2409530583595 44.4535302235379, 14.2406744619564 44.45370935156, 14.2403977117396 44.4538899649868, 14.2398203523003 44.4542724114063, 14.239672853039 44.454370900704, 14.2395259029053 44.4544698119095, 14.239379501899 44.4545691450252, 14.2382420486854 44.4553470889046, 14.2380967503553 44.4554472591513, 14.2379520105324 44.4555478449213, 14.2378078292163 44.4556488462169, 14.2372477354112 44.4560443439633, 14.2369627620498 44.4562488100969, 14.236680077747 44.4564548990732, 14.236399682504 44.4566626109101, 14.2358574374879 44.4570707656462, 14.2357189738569 44.4571758248125, 14.2355810959881 44.457281279692, 14.2354438038819 44.457387130287, 14.2343777029598 44.4582156744789, 14.2342415886911 44.4583223077647, 14.2341060689602 44.4584293299489, 14.2339711437678 44.4585367410339, 14.2334472879311 44.458957130775, 14.2332595188464 44.4591095265003, 14.2330729467113 44.4592626752686, 14.2328875715281 44.459416577086, 14.2326798557173 44.459590996562, 14.2326533497616 44.4596132900843, 14.2256703082495 44.4654953565085, 14.2255423063236 44.4656040237542, 14.2250372941903 44.4660361818339, 14.2249084090417 44.4661473714413, 14.224780143923 44.4662589289797, 14.2246524988351 44.4663708544513, 14.2236619240679 44.4672465324426, 14.223535524506 44.4673591849819, 14.2234097531347 44.4674721982503, 14.2232846099555 44.4675855722499, 14.2227990474907 44.468029092441, 14.2225525743199 44.4682579614673, 14.2223086613506 44.4684882293107, 14.2220673085966 44.4687198959883, 14.2216017110568 44.469174325756, 14.2214829691364 44.4692911932966, 14.2213648788982 44.4694083993928, 14.2212474403439 44.4695259440469, 14.2203366788637 44.470445239348, 14.2202433811122 44.4705400512412, 14.2185623036728 44.4722600167809, 14.2185440383481 44.4722787290221, 14.21842699346 44.4723987985422, 14.2183106250231 44.4725192079615, 14.2178594344592 44.4729901183263, 14.2176646269207 44.4731964650877, 14.2174718061612 44.4734037640942, 14.2172809721932 44.4736120153562, 14.2169775406413 44.4739481542196, 14.2169000789005 44.4740345005437, 14.2168229587771 44.4741210037521, 14.2167461802719 44.4742076638458, 14.2161500172906 44.4748847771289, 14.2160739265213 44.4749717436991, 14.2159981798166 44.4750588643342, 14.2159227771775 44.4751461390351, 14.2156300411961 44.4754871182504, 14.2155553204274 44.4755747075953, 14.2154809462338 44.4756624482107, 14.2154069186163 44.4757503400972, 14.2148373279057 44.4764309487743, 14.2148073040812 44.4764669182567, 14.2147773383069 44.476502912619, 14.2147474305828 44.4765389318611, 14.2146310059415 44.4766795168129, 14.2146012086033 44.4767155925975, 14.2145714694987 44.4767516930778, 14.2145417886279 44.476787818254, 14.2143106936655 44.4770698326854, 14.2142811145359 44.4771060249549, 14.2142515938553 44.4771422417534, 14.2142221316238 44.4771784830807, 14.2141074671736 44.4773199069116, 14.2139758446626 44.4774842178057, 14.2138454236977 44.4776490180557, 14.2137162042863 44.4778143076658, 14.213327476743 44.4783176941716, 14.2132285324679 44.478447062203, 14.2131303243288 44.4785767170893, 14.2130328523294 44.4787066588325, 14.2122787571462 44.4797218259578, 14.2121829470134 44.4798520767365, 14.2120878766052 44.479982604598, 14.2119935459254 44.4801134095444, 14.2116290774941 44.480623874741, 14.211530500834 44.4807634194591, 14.2114327661326 44.480903266684, 14.2113358733945 44.481043416418, 14.2112148854784 44.4812203334734, 14.2111291335351 44.4813469680615, 14.2110440690594 44.4814738395341, 14.210959692055 44.4816009478929, 14.2106360091134 44.482093473137, 14.2105536843706 44.4822200020539, 14.2104720409036 44.4823467564124, 14.2089735144255 44.4846780370635, 14.2089565665538 44.4847044578788, 14.2083833200268 44.485599995976, 14.2083103718579 44.485715011744, 14.2082379840563 44.4858302083581, 14.2081661566249 44.4859455858193, 14.207888229735 44.4863962367211, 14.2078175269828 44.4865119680539, 14.2077473880865 44.4866278745665, 14.2076778130489 44.4867439562599, 14.2075591853871 44.4869437972651, 14.2075492673709 44.4869605284619, 14.2075393610681 44.48697726322, 14.2075294664786 44.4869940015395, 14.2074907330618 44.4870596170187, 14.2074807646764 44.4870765275916, 14.2074708082475 44.4870934417782, 14.207460863775 44.4871103595782, 14.2073837814928 44.4872416796141, 14.2073738988344 44.4872585398155, 14.2073640280519 44.4872754035843, 14.2073541691454 44.4872922709206, 14.2073158279827 44.4873579607214, 14.2036760898178 44.4936025040985, 14.2036228542418 44.4936945382366, 14.2035253069284 44.4938644981397, 14.20342896262 44.4940348122833, 14.2031699428865 44.4944994503991, 14.2031041132804 44.4946187614453, 14.2030388741107 44.4947382378244, 14.2029742253807 44.4948578795375, 14.2024746564263 44.495792200431, 14.2024111921267 44.4959121625804, 14.2023483214847 44.496032284001, 14.2022860445036 44.4961525646938, 14.2020455010947 44.4966222356483, 14.2019844192608 44.4967428179233, 14.2019239341135 44.4968635533579, 14.2018640456558 44.4969844419531, 14.2017061271046 44.4973068252453, 14.201691086519 44.4973375961603, 14.2016543354801 44.4974130332523, 14.20163936162 44.4974438452917, 14.2015737192285 44.4975793875974, 14.2015588900106 44.4976100794608, 14.2015225584092 44.4976855256273, 14.2014502497229 44.4978379192892, 14.2013788875859 44.4979905395584, 14.2013084720052 44.4981433864367, 14.2010651099614 44.4986796261019, 14.2010034763655 44.4988172984148, 14.200942610778 44.4989551442492, 14.2008825132039 44.4990931636063, 14.200419802503 44.500170911141, 14.2003612404937 44.5003092743517, 14.2003034504022 44.5004478022298, 14.2002464322338 44.5005864947766, 14.2000270843006 44.5011280037029, 14.1999532432573 44.5013139991028, 14.1998807905895 44.5015002704207, 14.1998097263097 44.5016868176594, 14.1997411549142 44.5018706795869, 14.1997236581114 44.5019178487769, 14.1997062500837 44.5019650346895, 14.1996889308311 44.5020122373246, 14.1995545629459 44.5023804644938, 14.1995374249376 44.5024276898129, 14.1995203757923 44.5024749315031, 14.1995034155102 44.5025221895643, 14.1994376127292 44.5027065713165, 14.1994208279132 44.5027538683052, 14.1994041321093 44.5028011813234, 14.1993875253178 44.502848510371, 14.1993308329238 44.5030110080335, 14.1992987603193 44.5031039821288, 14.1992670312204 44.5031970159803, 14.1992356456285 44.5032901095885, 14.1991145801034 44.5036534102849, 14.1990838799463 44.5037466274876, 14.1990535242271 44.5038399018317, 14.1990235129473 44.5039332333176, 14.1987921218848 44.5046616244642, 14.1987627967624 44.5047550770638, 14.198733816995 44.504848584185, 14.1987051825842 44.5049421458282, 14.1985948635728 44.5053072198077, 14.1985260584024 44.5055424526827, 14.1984594364112 44.5057779996687, 14.1983949976255 44.5060138607694, 14.1982489697032 44.5065678371246, 14.1982123180569 44.5067099894948, 14.1981764595458 44.5068522433749, 14.1981413941759 44.5069945987657, 14.1978741096645 44.5081055842854, 14.197840632362 44.5082481309521, 14.1978079504057 44.5083907699796, 14.1977760638014 44.5085335013686, 14.197668327781 44.5090284055312, 14.197399475786 44.5108949276762, 14.1972663346806 44.5127661445473, 14.1975429455994 44.5165070540173, 14.1979512359723 44.5183564971064, 14.1992990315258 44.5219733084779, 14.2002312724628 44.5237210938515, 14.2025923231661 44.5270575618629, 14.204008374378 44.5286281750286, 14.2072809063521 44.5315401256686, 14.2091196815491 44.532865689281, 14.2131624399319 44.535227261854, 14.2153445338554 44.536250475977, 14.2199828716957 44.5379595775539, 14.2224139892385 44.5386362039526, 14.2274474208367 44.5396189373485, 14.2300224601608 44.5399197188361, 14.2326197429626 44.5401241146692, 14.2487240364452 44.5407838277183, 14.2490528828948 44.5412617319725, 14.2508003744206 44.543521303803, 14.2533261798783 44.5464467885477, 14.2553674079577 44.5485754351856, 14.2568198848889 44.5499443977557, 14.2591360929614 44.5519226314142, 14.2623936375711 44.5544478877061, 14.2649637481564 44.5562575289341, 14.2667539102611 44.5574022432073, 14.2695542833576 44.5590267372141, 14.2734245969042 44.561059333154, 14.2764296859313 44.5624837239882, 14.2784921047669 44.5633622821611, 14.2816742619983 44.5645735591907, 14.2860158011285 44.5660390696392, 14.2893459356389 44.5670260510135, 14.2916051467968 44.5676062793614, 14.2950526293793 44.5683599782726, 14.299706470741 44.569204728592, 14.3032397269492 44.5697181507474, 14.3056130044161 44.5699787964067, 14.3074016717153 44.5701438630957, 14.3097927183786 44.5703228440985, 14.3115906178446 44.5704262486855, 14.33826433232 44.5714965348077, 14.3383802330733 44.5715010418977, 14.3385347806831 44.5715068804581, 14.3386507013436 44.5715111312085, 14.3388052740263 44.5715166279294, 14.3389212134882 44.5715206222995, 14.3390758112389 44.571525777181, 14.3391917684021 44.571529515133, 14.3658330820698 44.5723553898838, 14.3679600770892 44.5723779391156, 14.3707952346895 44.5723505470247, 14.3729209706726 44.5722869097422, 14.3757454200124 44.5721449641229, 14.3799660019405 44.57176027518, 14.3855361132015 44.5710215219936, 14.389670658053 44.5702980870139, 14.3923807929823 44.5697059925335, 14.3963766244817 44.5686531512439, 14.40157790742 44.5670386390586, 14.405383971148 44.5656697236921, 14.4078419632614 44.5646576035722, 14.4096585840058 44.5638599486475, 14.4120371360914 44.5627482979997, 14.4137883413496 44.5618784787644, 14.4143200619644 44.5615981667567, 14.4158053573159 44.560773654078, 14.4177465046069 44.5596397066339, 14.4191729294856 44.5587632994702, 14.4210309259146 44.5575630959793, 14.4236932496207 44.5556634417993, 14.4270591512324 44.5530106151508, 14.4294456830911 44.5509310400368, 14.4309369461997 44.5494915629852, 14.4330242107755 44.5472527151215, 14.435593900743 44.5441761661471, 14.4373611854034 44.5418001999134, 14.438426933729 44.5401783670392, 14.439856909325 44.5376888411578, 14.4415292224022 44.5343101887296, 14.4426077395934 44.5317317425538, 14.4432060846791 44.5299916501077, 14.4436871136713 44.5282181570946, 14.4452063615356 44.525095377217, 14.4462536874625 44.5225478027214, 14.4468343416256 44.5208291920421, 14.4475289984798 44.5182209381094, 14.4482156546438 44.5147195617254, 14.4485510093625 44.5120757536977, 14.4486537666186 44.5103098539826, 14.448685599393 44.5089825704894, 14.4486675596764 44.5072133089391, 14.4486086708682 44.5058867000577, 14.4484272078752 44.5035791700968, 14.4482777572262 44.5022564306654, 14.44801836115 44.5004974820318, 14.4477787211353 44.4991817982133, 14.4473999238552 44.4974364740573, 14.4466526313629 44.4948389243235, 14.4454223076167 44.4914194404498, 14.4443241389984 44.4888877591784, 14.4434785922159 44.4872300534827, 14.4420401375207 44.484788612205, 14.4399046676423 44.4816091680954, 14.4381399347681 44.4792814350127, 14.4368603334922 44.4777749879859, 14.4347862725874 44.4755833725869, 14.4318280471998 44.4727659977586, 14.4294647774017 44.4707315409662, 14.4278004146194 44.4694341571307, 14.4265173135019 44.4684820473217, 14.4247641414015 44.4672435635455, 14.4234174842631 44.4663379464034, 14.4217010721262 44.4652392938018, 14.4214196069052 44.4650349342441, 14.4178671942228 44.4626934013255, 14.4150848589502 44.4610297548266, 14.4131598505713 44.4599874830378, 14.4101671545795 44.4585243067341, 14.406055218555 44.45671604764, 14.4028799981015 44.4554668267307, 14.4007121193063 44.4547092092835, 14.3973836900188 44.4536855718212, 14.3928642571951 44.4524773826448, 14.3894135168846 44.4516887301226, 14.3870828842786 44.4512437496051, 14.3835417081451 44.4506974568323, 14.3787817439713 44.450133958101, 14.3751829485083 44.4498349998173, 14.3727756430482 44.4497190892094, 14.3709650214928 44.4496633357995, 14.3685495965878 44.4496307914361, 14.366737077448 44.4496377282756, 14.358341692177 44.4498148796878, 14.3580692668348 44.4498213267154, 14.3578820598831 44.449826244572, 14.3558244233344 44.4476659873665, 14.3542591036392 44.4463247132254, 14.3507797408209 44.4438744602678, 14.348882188408 44.4427770846365, 14.3448073015934 44.4408586147824, 14.3426492695777 44.4400466041339, 14.3404359343026 44.4393102935437, 14.3388295681531 44.4388428473666, 14.3387558005877 44.4388214786364, 14.3386819857356 44.4388001942081, 14.3386081235966 44.4387789940818, 14.33831983074 44.4386966288064, 14.3382458496989 44.4386755901997, 14.3381718220798 44.438654636164, 14.3380977478825 44.4386337666995, 14.3375197576923 44.4384716852841, 14.3374455911178 44.4384509847117, 14.337371378713 44.4384303689209, 14.3372971204777 44.4384098379117, 14.3370074179619 44.4383301201691, 14.336745092656 44.4382591445334, 14.3364822195892 44.438189226831, 14.3362187987489 44.4381203670581, 14.33548144487 44.4379309716026, 14.3352921017257 44.4378829516627, 14.3351024920427 44.4378354782848, 14.3349126158161 44.4377885514674, 14.3334298033682 44.4374268476884, 14.3332394130968 44.437381015725, 14.3330487684806 44.4373357332669, 14.3328578695145 44.4372910003127, 14.3321124115687 44.437118691767, 14.3319027679632 44.4370709628049, 14.3316928346688 44.4370238965247, 14.331482611679 44.4369774929247, 14.3314111038473 44.4369619555236, 14.3313743472324 44.4369539855302, 14.3312126290499 44.4369190358753, 14.3311758490362 44.4369111049917, 14.3310856257383 44.4368917123483, 14.3310487378337 44.436883802548, 14.3308009378641 44.436830847903, 14.3306266654484 44.4367941040733, 14.3304522084435 44.4367578149936, 14.3302775668456 44.4367219806631, 14.3295957785416 44.4365840052601, 14.329420776064 44.436549081151, 14.3292455981602 44.4365146136545, 14.3290702448263 44.4364806027697, 14.327701361715 44.4362189166504, 14.3275256644224 44.436185818045, 14.3273498008946 44.4361531778297, 14.3271737711273 44.4361209960037, 14.3264866758123 44.4359972851855, 14.3261150021733 44.4359325298772, 14.3257426552809 44.4358698178913, 14.3253696350969 44.435809149221, 14.3246044217533 44.4356891008186, 14.3244080260799 44.4356588819158, 14.3242114629903 44.435629229415, 14.324014732479 44.4356001433156, 14.3224792966823 44.4353777324008, 14.322282243083 44.4353497781056, 14.3220850346766 44.4353223920524, 14.3218876714574 44.4352955742403, 14.3211174482769 44.4351932116215, 14.320721891357 44.4351429961074, 14.320325791371 44.4350950628614, 14.3199291482725 44.4350494118779, 14.3191546972384 44.434964848761, 14.3189559813996 44.4349437357821, 14.3187571488426 44.4349231956284, 14.3185581995614 44.4349032282993, 14.317005838956 44.4347519753114, 14.3167984902535 44.4347324042254, 14.3165910291573 44.4347134553266, 14.3163834556607 44.4346951286145, 14.3155747295057 44.4346261850993, 14.3153517664619 44.4346079043809, 14.3151286912261 44.4345903414905, 14.3149055037899 44.4345734964273, 14.3147205826125 44.434560141035, 14.314690791883 44.4345580023841, 14.314660999337 44.4345558765222, 14.3146312049747 44.4345537634494, 14.3143621207311 44.4345347958262, 14.3141760963183 44.434522186088, 14.3139900071288 44.4345100748818, 14.3138038531579 44.4344984622076, 14.3130848254581 44.4344555464706, 14.3129003994904 44.4344450308802, 14.3127159200941 44.4344350045889, 14.3125313872647 44.4344254675963, 14.3110917248686 44.4343548923122, 14.3109070829473 44.4343463316482, 14.3107223976149 44.434338260842, 14.3105376688664 44.4343306798934, 14.3098170815427 44.434303023745, 14.3094315216408 44.4342903639515, 14.3090458403071 44.4342798378697, 14.3086600374981 44.4342714454988, 14.3078766200545 44.4342587395755, 14.3076757160939 44.4342560594701, 14.307474798023 44.4342539579542, 14.3072738658356 44.4342524350277, 14.3057067735076 44.4342450603978, 14.3055058109134 44.4342446921221, 14.305304847074 44.4342449025836, 14.3051038819836 44.4342456917826, 14.3043202063817 44.4342510239765, 14.303918359589 44.4342560719372, 14.3035165851002 44.4342634336091, 14.3031148828661 44.4342731089934, 14.3023317799275 44.4342964846176, 14.3021310045681 44.4343030563106, 14.3019302665907 44.4343102059813, 14.3017295659893 44.4343179336296, 14.3001647254945 44.4343826935729))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[14.3001647254945, 44.4343826935729], [14.2999576319834, 44.4343918802468], [14.2997505922243, 44.4344016822731], [14.2995436062106, 44.4344120996521], [14.2987373842965, 44.4344550816494], [14.298518406047, 44.4344674481734], [14.2982995043305, 44.4344805033815], [14.2980806791391, 44.4344942472743], [14.2979341855001, 44.4345039126862], [14.2978864881198, 44.434507084396], [14.2975998311241, 44.4345263854129], [14.2974110833599, 44.4345396165792], [14.2972224056253, 44.4345533601837], [14.2970337979153, 44.4345676162267], [14.2963031882504, 44.434624844255], [14.2961159399825, 44.4346400220642], [14.2959287714294, 44.4346557049272], [14.2957416825863, 44.4346718928445], [14.2942831768157, 44.4348020742141], [14.2940962622742, 44.4348192685663], [14.2939094379652, 44.434836967006], [14.2937227038838, 44.4348551695337], [14.2929947759233, 44.4349281251307], [14.29269795929, 44.4349591725001], [14.2924014057405, 44.4349914933689], [14.2921051152554, 44.4350250877393], [14.291676213738, 44.435075606162], [14.2915663053974, 44.435088731586], [14.291456437349, 44.4351020322433], [14.2913466095917, 44.4351155081337], [14.2904900774302, 44.4352220072912], [14.2903803184424, 44.4352358343355], [14.2902706019167, 44.435249836388], [14.2901609278521, 44.4352640134488], [14.2897332821958, 44.4353199966206], [14.2896236487694, 44.4353345292965], [14.2895140600016, 44.4353492368458], [14.2894045158915, 44.4353641192686], [14.2879880032277, 44.4355588948122], [14.2879000083757, 44.4355711107968], [14.2878120436368, 44.4355834396172], [14.2877241090105, 44.4355958812737], [14.2873813549572, 44.4356448328432], [14.287293517446, 44.4356574945783], [14.2872057111427, 44.4356702688975], [14.2871179360467, 44.4356831558006], [14.2864333187165, 44.4357845815454], [14.2863455884372, 44.4357976957328], [14.2862578904965, 44.4358109223859], [14.2861702248937, 44.435824261505], [14.2858283777594, 44.4358767341184], [14.2855423131513, 44.4359218986382], [14.2852566194092, 44.4359682606023], [14.2849712965161, 44.4360158200138], [14.2842002769725, 44.4361477439375], [14.2840027730798, 44.4361821438945], [14.2838054635124, 44.4362171175881], [14.2836083482649, 44.4362526650197], [14.2820727533417, 44.4365343280232], [14.2818761161382, 44.4365710032549], [14.2816796859734, 44.4366082494076], [14.2814834628419, 44.4366460664823], [14.2807193899716, 44.4367957010199], [14.2805164151414, 44.4368361077889], [14.2803136768556, 44.4368771254071], [14.2801111751084, 44.4369187538759], [14.2798538201439, 44.4369724976152], [14.27966419203, 44.4370126795033], [14.2794747844565, 44.4370533970152], [14.2792855974188, 44.4370946501523], [14.2785505924554, 44.4372571897194], [14.2783623398832, 44.4372994008838], [14.278174318352, 44.4373421423633], [14.2779865278571, 44.4373854141593], [14.276525873045, 44.4377265208823], [14.2763388064384, 44.4377707878945], [14.2761519817615, 44.4378155811062], [14.2759653990097, 44.4378609005186], [14.275238743453, 44.4380396780634], [14.2748631314302, 44.4381344813637], [14.2744885783983, 44.4382314168545], [14.2741150843207, 44.4383304845472], [14.2733812262776, 44.4385298910392], [14.2731933341041, 44.4385815631079], [14.2730057303185, 44.4386337747642], [14.2728184149163, 44.4386865260097], [14.2713598694279, 44.4391021075997], [14.2711731407732, 44.4391559322708], [14.2709867124906, 44.4392102931146], [14.2708005845759, 44.4392651901328], [14.2700758965625, 44.4394813654305], [14.2698194434301, 44.4395590623487], [14.2695635921841, 44.4396377770559], [14.2692033331452, 44.4397510150275], [14.269098429811, 44.4397846927561], [14.2689936328099, 44.4398185427425], [14.2683113368892, 44.4400402718326], [14.2681366844352, 44.4400976065039], [14.2679623371035, 44.4401554195865], [14.2677882948907, 44.4402137110819], [14.2664333707773, 44.4406720294672], [14.2662599559098, 44.4407312691923], [14.2660868562707, 44.4407909838498], [14.2659140718565, 44.4408511734413], [14.2652414444176, 44.4410877619797], [14.2650686756281, 44.4411491207953], [14.2648962345211, 44.4412109544263], [14.2647241210933, 44.4412732628745], [14.2644979487489, 44.4413559229756], [14.2644661224535, 44.4413675699255], [14.2643542831681, 44.4414085825236], [14.2641633706213, 44.4414793401219], [14.2639728795856, 44.4415506823016], [14.2637828100567, 44.4416226090648], [14.263074097394, 44.4418935806111], [14.2628926517045, 44.4419636401198], [14.262711606032, 44.4420342323277], [14.2625309603731, 44.4421053572368], [14.2611575635541, 44.4426513462373], [14.2609818346711, 44.4427218654805], [14.2608064991256, 44.4427928887766], [14.2606315569144, 44.4428644161276], [14.2599509051958, 44.4431452993387], [14.2596034650399, 44.4432913407878], [14.2592576648534, 44.4434393700361], [14.2589135046134, 44.4435893870994], [14.2582456478299, 44.4438857698724], [14.2580748138365, 44.4439622612954], [14.2579044064103, 44.4440392424775], [14.2577344255486, 44.4441167134205], [14.2564121439971, 44.4447246829203], [14.2562430228651, 44.4448031270968], [14.2560743391808, 44.4448820560448], [14.2559060929415, 44.4449614697665], [14.2552516691017, 44.4452730567038], [14.2549365175752, 44.4454255762636], [14.2546229798274, 44.4455797964583], [14.2543110558436, 44.4457357173021], [14.253742062673, 44.4460247354887], [14.2535965228926, 44.4460992187208], [14.2534513515079, 44.4461740721726], [14.2533065485175, 44.4462492958456], [14.2521801445908, 44.446838820451], [14.2520360702285, 44.4469147862583], [14.2518923716274, 44.4469911185369], [14.2517490487864, 44.4470678172882], [14.2511915691245, 44.4473683619211], [14.2510489975674, 44.4474457926606], [14.2509068090364, 44.4475235860101], [14.2507650035305, 44.4476017419714], [14.250578355145, 44.4477053701608], [14.2505425063566, 44.4477253012936], [14.2504548919483, 44.4477741168721], [14.2504192416087, 44.4477940112604], [14.2502620907348, 44.4478819014569], [14.2502263449185, 44.4479019229854], [14.2501389132904, 44.4479509984325], [14.2499630562397, 44.4480506330776], [14.2497878174764, 44.4481508276544], [14.2496131969986, 44.448251582166], [14.2490031726889, 44.4486067719632], [14.2488472617706, 44.4486982945966], [14.2486918611134, 44.4487902635628], [14.248536970716, 44.4488826788641], [14.2473329625472, 44.4496068914227], [14.2471790938513, 44.4497001951961], [14.2470257453619, 44.449793939383], [14.2469951545718, 44.4498126701619], [14.2420383262897, 44.4528523688241], [14.2420030916813, 44.4528740141927], [14.2418720744953, 44.452954650611], [14.2417414407274, 44.453035609398], [14.2412335009526, 44.4533525809065], [14.2409530583595, 44.4535302235379], [14.2406744619564, 44.45370935156], [14.2403977117396, 44.4538899649868], [14.2398203523003, 44.4542724114063], [14.239672853039, 44.454370900704], [14.2395259029053, 44.4544698119095], [14.239379501899, 44.4545691450252], [14.2382420486854, 44.4553470889046], [14.2380967503553, 44.4554472591513], [14.2379520105324, 44.4555478449213], [14.2378078292163, 44.4556488462169], [14.2372477354112, 44.4560443439633], [14.2369627620498, 44.4562488100969], [14.236680077747, 44.4564548990732], [14.236399682504, 44.4566626109101], [14.2358574374879, 44.4570707656462], [14.2357189738569, 44.4571758248125], [14.2355810959881, 44.457281279692], [14.2354438038819, 44.457387130287], [14.2343777029598, 44.4582156744789], [14.2342415886911, 44.4583223077647], [14.2341060689602, 44.4584293299489], [14.2339711437678, 44.4585367410339], [14.2334472879311, 44.458957130775], [14.2332595188464, 44.4591095265003], [14.2330729467113, 44.4592626752686], [14.2328875715281, 44.459416577086], [14.2326798557173, 44.459590996562], [14.2326533497616, 44.4596132900843], [14.2256703082495, 44.4654953565085], [14.2255423063236, 44.4656040237542], [14.2250372941903, 44.4660361818339], [14.2249084090417, 44.4661473714413], [14.224780143923, 44.4662589289797], [14.2246524988351, 44.4663708544513], [14.2236619240679, 44.4672465324426], [14.223535524506, 44.4673591849819], [14.2234097531347, 44.4674721982503], [14.2232846099555, 44.4675855722499], [14.2227990474907, 44.468029092441], [14.2225525743199, 44.4682579614673], [14.2223086613506, 44.4684882293107], [14.2220673085966, 44.4687198959883], [14.2216017110568, 44.469174325756], [14.2214829691364, 44.4692911932966], [14.2213648788982, 44.4694083993928], [14.2212474403439, 44.4695259440469], [14.2203366788637, 44.470445239348], [14.2202433811122, 44.4705400512412], [14.2185623036728, 44.4722600167809], [14.2185440383481, 44.4722787290221], [14.21842699346, 44.4723987985422], [14.2183106250231, 44.4725192079615], [14.2178594344592, 44.4729901183263], [14.2176646269207, 44.4731964650877], [14.2174718061612, 44.4734037640942], [14.2172809721932, 44.4736120153562], [14.2169775406413, 44.4739481542196], [14.2169000789005, 44.4740345005437], [14.2168229587771, 44.4741210037521], [14.2167461802719, 44.4742076638458], [14.2161500172906, 44.4748847771289], [14.2160739265213, 44.4749717436991], [14.2159981798166, 44.4750588643342], [14.2159227771775, 44.4751461390351], [14.2156300411961, 44.4754871182504], [14.2155553204274, 44.4755747075953], [14.2154809462338, 44.4756624482107], [14.2154069186163, 44.4757503400972], [14.2148373279057, 44.4764309487743], [14.2148073040812, 44.4764669182567], [14.2147773383069, 44.476502912619], [14.2147474305828, 44.4765389318611], [14.2146310059415, 44.4766795168129], [14.2146012086033, 44.4767155925975], [14.2145714694987, 44.4767516930778], [14.2145417886279, 44.476787818254], [14.2143106936655, 44.4770698326854], [14.2142811145359, 44.4771060249549], [14.2142515938553, 44.4771422417534], [14.2142221316238, 44.4771784830807], [14.2141074671736, 44.4773199069116], [14.2139758446626, 44.4774842178057], [14.2138454236977, 44.4776490180557], [14.2137162042863, 44.4778143076658], [14.213327476743, 44.4783176941716], [14.2132285324679, 44.478447062203], [14.2131303243288, 44.4785767170893], [14.2130328523294, 44.4787066588325], [14.2122787571462, 44.4797218259578], [14.2121829470134, 44.4798520767365], [14.2120878766052, 44.479982604598], [14.2119935459254, 44.4801134095444], [14.2116290774941, 44.480623874741], [14.211530500834, 44.4807634194591], [14.2114327661326, 44.480903266684], [14.2113358733945, 44.481043416418], [14.2112148854784, 44.4812203334734], [14.2111291335351, 44.4813469680615], [14.2110440690594, 44.4814738395341], [14.210959692055, 44.4816009478929], [14.2106360091134, 44.482093473137], [14.2105536843706, 44.4822200020539], [14.2104720409036, 44.4823467564124], [14.2089735144255, 44.4846780370635], [14.2089565665538, 44.4847044578788], [14.2083833200268, 44.485599995976], [14.2083103718579, 44.485715011744], [14.2082379840563, 44.4858302083581], [14.2081661566249, 44.4859455858193], [14.207888229735, 44.4863962367211], [14.2078175269828, 44.4865119680539], [14.2077473880865, 44.4866278745665], [14.2076778130489, 44.4867439562599], [14.2075591853871, 44.4869437972651], [14.2075492673709, 44.4869605284619], [14.2075393610681, 44.48697726322], [14.2075294664786, 44.4869940015395], [14.2074907330618, 44.4870596170187], [14.2074807646764, 44.4870765275916], [14.2074708082475, 44.4870934417782], [14.207460863775, 44.4871103595782], [14.2073837814928, 44.4872416796141], [14.2073738988344, 44.4872585398155], [14.2073640280519, 44.4872754035843], [14.2073541691454, 44.4872922709206], [14.2073158279827, 44.4873579607214], [14.2036760898178, 44.4936025040985], [14.2036228542418, 44.4936945382366], [14.2035253069284, 44.4938644981397], [14.20342896262, 44.4940348122833], [14.2031699428865, 44.4944994503991], [14.2031041132804, 44.4946187614453], [14.2030388741107, 44.4947382378244], [14.2029742253807, 44.4948578795375], [14.2024746564263, 44.495792200431], [14.2024111921267, 44.4959121625804], [14.2023483214847, 44.496032284001], [14.2022860445036, 44.4961525646938], [14.2020455010947, 44.4966222356483], [14.2019844192608, 44.4967428179233], [14.2019239341135, 44.4968635533579], [14.2018640456558, 44.4969844419531], [14.2017061271046, 44.4973068252453], [14.201691086519, 44.4973375961603], [14.2016543354801, 44.4974130332523], [14.20163936162, 44.4974438452917], [14.2015737192285, 44.4975793875974], [14.2015588900106, 44.4976100794608], [14.2015225584092, 44.4976855256273], [14.2014502497229, 44.4978379192892], [14.2013788875859, 44.4979905395584], [14.2013084720052, 44.4981433864367], [14.2010651099614, 44.4986796261019], [14.2010034763655, 44.4988172984148], [14.200942610778, 44.4989551442492], [14.2008825132039, 44.4990931636063], [14.200419802503, 44.500170911141], [14.2003612404937, 44.5003092743517], [14.2003034504022, 44.5004478022298], [14.2002464322338, 44.5005864947766], [14.2000270843006, 44.5011280037029], [14.1999532432573, 44.5013139991028], [14.1998807905895, 44.5015002704207], [14.1998097263097, 44.5016868176594], [14.1997411549142, 44.5018706795869], [14.1997236581114, 44.5019178487769], [14.1997062500837, 44.5019650346895], [14.1996889308311, 44.5020122373246], [14.1995545629459, 44.5023804644938], [14.1995374249376, 44.5024276898129], [14.1995203757923, 44.5024749315031], [14.1995034155102, 44.5025221895643], [14.1994376127292, 44.5027065713165], [14.1994208279132, 44.5027538683052], [14.1994041321093, 44.5028011813234], [14.1993875253178, 44.502848510371], [14.1993308329238, 44.5030110080335], [14.1992987603193, 44.5031039821288], [14.1992670312204, 44.5031970159803], [14.1992356456285, 44.5032901095885], [14.1991145801034, 44.5036534102849], [14.1990838799463, 44.5037466274876], [14.1990535242271, 44.5038399018317], [14.1990235129473, 44.5039332333176], [14.1987921218848, 44.5046616244642], [14.1987627967624, 44.5047550770638], [14.198733816995, 44.504848584185], [14.1987051825842, 44.5049421458282], [14.1985948635728, 44.5053072198077], [14.1985260584024, 44.5055424526827], [14.1984594364112, 44.5057779996687], [14.1983949976255, 44.5060138607694], [14.1982489697032, 44.5065678371246], [14.1982123180569, 44.5067099894948], [14.1981764595458, 44.5068522433749], [14.1981413941759, 44.5069945987657], [14.1978741096645, 44.5081055842854], [14.197840632362, 44.5082481309521], [14.1978079504057, 44.5083907699796], [14.1977760638014, 44.5085335013686], [14.197668327781, 44.5090284055312], [14.197399475786, 44.5108949276762], [14.1972663346806, 44.5127661445473], [14.1975429455994, 44.5165070540173], [14.1979512359723, 44.5183564971064], [14.1992990315258, 44.5219733084779], [14.2002312724628, 44.5237210938515], [14.2025923231661, 44.5270575618629], [14.204008374378, 44.5286281750286], [14.2072809063521, 44.5315401256686], [14.2091196815491, 44.532865689281], [14.2131624399319, 44.535227261854], [14.2153445338554, 44.536250475977], [14.2199828716957, 44.5379595775539], [14.2224139892385, 44.5386362039526], [14.2274474208367, 44.5396189373485], [14.2300224601608, 44.5399197188361], [14.2326197429626, 44.5401241146692], [14.2487240364452, 44.5407838277183], [14.2490528828948, 44.5412617319725], [14.2508003744206, 44.543521303803], [14.2533261798783, 44.5464467885477], [14.2553674079577, 44.5485754351856], [14.2568198848889, 44.5499443977557], [14.2591360929614, 44.5519226314142], [14.2623936375711, 44.5544478877061], [14.2649637481564, 44.5562575289341], [14.2667539102611, 44.5574022432073], [14.2695542833576, 44.5590267372141], [14.2734245969042, 44.561059333154], [14.2764296859313, 44.5624837239882], [14.2784921047669, 44.5633622821611], [14.2816742619983, 44.5645735591907], [14.2860158011285, 44.5660390696392], [14.2893459356389, 44.5670260510135], [14.2916051467968, 44.5676062793614], [14.2950526293793, 44.5683599782726], [14.299706470741, 44.569204728592], [14.3032397269492, 44.5697181507474], [14.3056130044161, 44.5699787964067], [14.3074016717153, 44.5701438630957], [14.3097927183786, 44.5703228440985], [14.3115906178446, 44.5704262486855], [14.33826433232, 44.5714965348077], [14.3383802330733, 44.5715010418977], [14.3385347806831, 44.5715068804581], [14.3386507013436, 44.5715111312085], [14.3388052740263, 44.5715166279294], [14.3389212134882, 44.5715206222995], [14.3390758112389, 44.571525777181], [14.3391917684021, 44.571529515133], [14.3658330820698, 44.5723553898838], [14.3679600770892, 44.5723779391156], [14.3707952346895, 44.5723505470247], [14.3729209706726, 44.5722869097422], [14.3757454200124, 44.5721449641229], [14.3799660019405, 44.57176027518], [14.3855361132015, 44.5710215219936], [14.389670658053, 44.5702980870139], [14.3923807929823, 44.5697059925335], [14.3963766244817, 44.5686531512439], [14.40157790742, 44.5670386390586], [14.405383971148, 44.5656697236921], [14.4078419632614, 44.5646576035722], [14.4096585840058, 44.5638599486475], [14.4120371360914, 44.5627482979997], [14.4137883413496, 44.5618784787644], [14.4143200619644, 44.5615981667567], [14.4158053573159, 44.560773654078], [14.4177465046069, 44.5596397066339], [14.4191729294856, 44.5587632994702], [14.4210309259146, 44.5575630959793], [14.4236932496207, 44.5556634417993], [14.4270591512324, 44.5530106151508], [14.4294456830911, 44.5509310400368], [14.4309369461997, 44.5494915629852], [14.4330242107755, 44.5472527151215], [14.435593900743, 44.5441761661471], [14.4373611854034, 44.5418001999134], [14.438426933729, 44.5401783670392], [14.439856909325, 44.5376888411578], [14.4415292224022, 44.5343101887296], [14.4426077395934, 44.5317317425538], [14.4432060846791, 44.5299916501077], [14.4436871136713, 44.5282181570946], [14.4452063615356, 44.525095377217], [14.4462536874625, 44.5225478027214], [14.4468343416256, 44.5208291920421], [14.4475289984798, 44.5182209381094], [14.4482156546438, 44.5147195617254], [14.4485510093625, 44.5120757536977], [14.4486537666186, 44.5103098539826], [14.448685599393, 44.5089825704894], [14.4486675596764, 44.5072133089391], [14.4486086708682, 44.5058867000577], [14.4484272078752, 44.5035791700968], [14.4482777572262, 44.5022564306654], [14.44801836115, 44.5004974820318], [14.4477787211353, 44.4991817982133], [14.4473999238552, 44.4974364740573], [14.4466526313629, 44.4948389243235], [14.4454223076167, 44.4914194404498], [14.4443241389984, 44.4888877591784], [14.4434785922159, 44.4872300534827], [14.4420401375207, 44.484788612205], [14.4399046676423, 44.4816091680954], [14.4381399347681, 44.4792814350127], [14.4368603334922, 44.4777749879859], [14.4347862725874, 44.4755833725869], [14.4318280471998, 44.4727659977586], [14.4294647774017, 44.4707315409662], [14.4278004146194, 44.4694341571307], [14.4265173135019, 44.4684820473217], [14.4247641414015, 44.4672435635455], [14.4234174842631, 44.4663379464034], [14.4217010721262, 44.4652392938018], [14.4214196069052, 44.4650349342441], [14.4178671942228, 44.4626934013255], [14.4150848589502, 44.4610297548266], [14.4131598505713, 44.4599874830378], [14.4101671545795, 44.4585243067341], [14.406055218555, 44.45671604764], [14.4028799981015, 44.4554668267307], [14.4007121193063, 44.4547092092835], [14.3973836900188, 44.4536855718212], [14.3928642571951, 44.4524773826448], [14.3894135168846, 44.4516887301226], [14.3870828842786, 44.4512437496051], [14.3835417081451, 44.4506974568323], [14.3787817439713, 44.450133958101], [14.3751829485083, 44.4498349998173], [14.3727756430482, 44.4497190892094], [14.3709650214928, 44.4496633357995], [14.3685495965878, 44.4496307914361], [14.366737077448, 44.4496377282756], [14.358341692177, 44.4498148796878], [14.3580692668348, 44.4498213267154], [14.3578820598831, 44.449826244572], [14.3558244233344, 44.4476659873665], [14.3542591036392, 44.4463247132254], [14.3507797408209, 44.4438744602678], [14.348882188408, 44.4427770846365], [14.3448073015934, 44.4408586147824], [14.3426492695777, 44.4400466041339], [14.3404359343026, 44.4393102935437], [14.3388295681531, 44.4388428473666], [14.3387558005877, 44.4388214786364], [14.3386819857356, 44.4388001942081], [14.3386081235966, 44.4387789940818], [14.33831983074, 44.4386966288064], [14.3382458496989, 44.4386755901997], [14.3381718220798, 44.438654636164], [14.3380977478825, 44.4386337666995], [14.3375197576923, 44.4384716852841], [14.3374455911178, 44.4384509847117], [14.337371378713, 44.4384303689209], [14.3372971204777, 44.4384098379117], [14.3370074179619, 44.4383301201691], [14.336745092656, 44.4382591445334], [14.3364822195892, 44.438189226831], [14.3362187987489, 44.4381203670581], [14.33548144487, 44.4379309716026], [14.3352921017257, 44.4378829516627], [14.3351024920427, 44.4378354782848], [14.3349126158161, 44.4377885514674], [14.3334298033682, 44.4374268476884], [14.3332394130968, 44.437381015725], [14.3330487684806, 44.4373357332669], [14.3328578695145, 44.4372910003127], [14.3321124115687, 44.437118691767], [14.3319027679632, 44.4370709628049], [14.3316928346688, 44.4370238965247], [14.331482611679, 44.4369774929247], [14.3314111038473, 44.4369619555236], [14.3313743472324, 44.4369539855302], [14.3312126290499, 44.4369190358753], [14.3311758490362, 44.4369111049917], [14.3310856257383, 44.4368917123483], [14.3310487378337, 44.436883802548], [14.3308009378641, 44.436830847903], [14.3306266654484, 44.4367941040733], [14.3304522084435, 44.4367578149936], [14.3302775668456, 44.4367219806631], [14.3295957785416, 44.4365840052601], [14.329420776064, 44.436549081151], [14.3292455981602, 44.4365146136545], [14.3290702448263, 44.4364806027697], [14.327701361715, 44.4362189166504], [14.3275256644224, 44.436185818045], [14.3273498008946, 44.4361531778297], [14.3271737711273, 44.4361209960037], [14.3264866758123, 44.4359972851855], [14.3261150021733, 44.4359325298772], [14.3257426552809, 44.4358698178913], [14.3253696350969, 44.435809149221], [14.3246044217533, 44.4356891008186], [14.3244080260799, 44.4356588819158], [14.3242114629903, 44.435629229415], [14.324014732479, 44.4356001433156], [14.3224792966823, 44.4353777324008], [14.322282243083, 44.4353497781056], [14.3220850346766, 44.4353223920524], [14.3218876714574, 44.4352955742403], [14.3211174482769, 44.4351932116215], [14.320721891357, 44.4351429961074], [14.320325791371, 44.4350950628614], [14.3199291482725, 44.4350494118779], [14.3191546972384, 44.434964848761], [14.3189559813996, 44.4349437357821], [14.3187571488426, 44.4349231956284], [14.3185581995614, 44.4349032282993], [14.317005838956, 44.4347519753114], [14.3167984902535, 44.4347324042254], [14.3165910291573, 44.4347134553266], [14.3163834556607, 44.4346951286145], [14.3155747295057, 44.4346261850993], [14.3153517664619, 44.4346079043809], [14.3151286912261, 44.4345903414905], [14.3149055037899, 44.4345734964273], [14.3147205826125, 44.434560141035], [14.314690791883, 44.4345580023841], [14.314660999337, 44.4345558765222], [14.3146312049747, 44.4345537634494], [14.3143621207311, 44.4345347958262], [14.3141760963183, 44.434522186088], [14.3139900071288, 44.4345100748818], [14.3138038531579, 44.4344984622076], [14.3130848254581, 44.4344555464706], [14.3129003994904, 44.4344450308802], [14.3127159200941, 44.4344350045889], [14.3125313872647, 44.4344254675963], [14.3110917248686, 44.4343548923122], [14.3109070829473, 44.4343463316482], [14.3107223976149, 44.434338260842], [14.3105376688664, 44.4343306798934], [14.3098170815427, 44.434303023745], [14.3094315216408, 44.4342903639515], [14.3090458403071, 44.4342798378697], [14.3086600374981, 44.4342714454988], [14.3078766200545, 44.4342587395755], [14.3076757160939, 44.4342560594701], [14.307474798023, 44.4342539579542], [14.3072738658356, 44.4342524350277], [14.3057067735076, 44.4342450603978], [14.3055058109134, 44.4342446921221], [14.305304847074, 44.4342449025836], [14.3051038819836, 44.4342456917826], [14.3043202063817, 44.4342510239765], [14.303918359589, 44.4342560719372], [14.3035165851002, 44.4342634336091], [14.3031148828661, 44.4342731089934], [14.3023317799275, 44.4342964846176], [14.3021310045681, 44.4343030563106], [14.3019302665907, 44.4343102059813], [14.3017295659893, 44.4343179336296], [14.3001647254945, 44.4343826935729]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;7bb76aa6-ccd9-436e-a3bd-d9cd0fb649a0&#x27;, &#x27;Name&#x27;: &#x27;SP06_NAO_MS4__3_20170818T093559_20170818T093623_TOU_1234_0905_COG.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 31894966, &#x27;OriginDate&#x27;: &#x27;2025-02-24T15:14:05.859793Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-02-24T16:14:59.753247Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-02-24T16:14:59.753247Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2018/NAO_MS4__3_E1F0-COG/2017/08/18/SP06_NAO_MS4__3_20170818T093559_20170818T093623_TOU_1234_0905_COG&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;9d559d0d827c6efe9ba09e1ac2a8508c&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:14:57.846223Z&#x27;}, {&#x27;Value&#x27;: &#x27;8ecf5fa22a3c1ddfa0fffcf2306b5a823dd0def06eaf84b6b3ccb921c74ee8ed&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:14:57.946392Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2017-08-18T09:35:59.000000Z&#x27;, &#x27;End&#x27;: &#x27;2017-08-18T09:36:23.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((15.0133414450301 48.3038492918546, 15.0104333989488 48.3040757605693, 15.0103234944425 48.3040925387331, 15.0102822176037 48.3040988855918, 15.0102615866467 48.3041020806326, 15.0102203396616 48.3041085139364, 15.0100966440567 48.3041279433629, 15.0100554272948 48.3041344630118, 15.0100348265826 48.3041377444153, 15.0099936404917 48.3041443503808, 15.0098701287545 48.3041642976042, 15.0098289737114 48.3041709897836, 15.0098084040561 48.3041743574204, 15.0097672804736 48.304181135789, 15.0096439575576 48.3042016000092, 15.009602865855 48.3042084644553, 15.0095823280676 48.3042119181927, 15.0095412686256 48.3042188686953, 15.0094181393182 48.304239849118, 15.0093771125514 48.3042468855644, 15.0093566074416 48.3042504252663, 15.0093156137715 48.3042575476269, 15.0091926829732 48.3042790434172, 15.0091517227672 48.3042862515853, 15.0091312511435 48.3042898771121, 15.0090903248545 48.3042971710509, 15.0089675973828 48.3043191813666, 15.0089267053572 48.3043265609716, 15.0089062680267 48.3043302721804, 15.0088654107318 48.3043377374101, 15.0087428914497 48.3043602613792, 15.0087020692419 48.3043678121254, 15.0086816670104 48.3043716088698, 15.008640880287 48.3043792451023, 15.0085185739908 48.3044022818432, 15.0084778231864 48.3044100034374, 15.0084574568583 48.3044138855679, 15.0084167423529 48.304421692495, 15.0082946539171 48.3044452410897, 15.0082539761061 48.3044531332308, 15.0082336464845 48.3044571005942, 15.0081930058088 48.3044650779069, 15.0080711399837 48.3044891374394, 15.0080305367795 48.3044971998144, 15.0080102446658 48.3045012522545, 15.0079696794166 48.3045093996392, 15.0078480410828 48.304533969146, 15.0078075141207 48.3045422014303, 15.007787260315 48.3045463387871, 15.0077467720561 48.30455465593, 15.0076253659311 48.3045797344584, 15.0075849167656 48.3045881363361, 15.0075647020665 48.3045923584467, 15.007524292431 48.3046008450124, 15.0074031233365 48.3046264315668, 15.0073627535828 48.3046350027026, 15.0073425787873 48.3046393094005, 15.0073022493541 48.3046479650574, 15.0071813220924 48.3046740586238, 15.0071410333548 48.3046827986772, 15.0071208992584 48.3046871897926, 15.0070806516129 48.3046960142005, 15.0069599709162 48.3047226137579, 15.0069197647547 48.3047315223904, 15.0068996721512 48.3047359977503, 15.0068595079019 48.3047449905566, 15.0067390785539 48.3047720950509, 15.0066989565689 48.304781171908, 15.0066789062507 48.3047857313359, 15.0066388269687 48.3047948921888, 15.0065186536931 48.3048225005571, 15.0064786174655 48.3048317452813, 15.0064586102231 48.3048363885974, 15.0064186174776 48.3048457171384, 15.0062987050227 48.30487382829, 15.0062587561278 48.3048832405176, 15.0062387927501 48.3048879675389, 15.0061988881272 48.3048974633983, 15.0060792412166 48.3049260762263, 15.0060393812432 48.304935655583, 15.0060194625174 48.3049404661232, 15.005979647591 48.3049501289264, 15.0058602709775 48.3049792422942, 15.0058205015025 48.304988988401, 15.005800628214 48.3049938822703, 15.005760904534 48.3050037116414, 15.0056418028622 48.3050333244167, 15.005602125409 48.3050432369004, 15.0055822983415 48.3050482139061, 15.0055426675252 48.3050582094449, 15.0054238455514 48.3050883204454, 15.0053842617326 48.3050983989033, 15.0053644816678 48.3051034588491, 15.005324945231 48.3051136201733, 15.0052064076115 48.3051442282192, 15.0051669189569 48.3051544722619, 15.0051471866748 48.3051596149482, 15.005107746199 48.3051699416517, 15.0049894975914 48.3052010455407, 15.0049501056524 48.3052114547659, 15.0049304219312 48.3052166799902, 15.0048910789834 48.3052271716625, 15.0047731240952 48.3052587701568, 15.004733830473 48.3052693441415, 15.0047141960888 48.3052746516976, 15.0046749521752 48.3052853079372, 15.0045572956192 48.3053173998013, 15.0045181017981 48.3053281381461, 15.0044985175253 48.3053335278249, 15.0044593742568 48.3053443481945, 15.0043420206903 48.3053769321585, 15.0043029282547 48.3053878344297, 15.0042833948654 48.3053933060186, 15.0042443537399 48.3054042901042, 15.0041273077871 48.3054373648845, 15.0040883182856 48.3054484306502, 15.0040688365502 48.3054539839335, 15.0040298991135 48.3054651313003, 15.0039131654064 48.3054986955883, 15.0038742803784 48.3055099244116, 15.0038548510652 48.3055155591704, 15.0038160188427 48.3055268693819, 15.0036996019542 48.3055609218631, 15.0036608229244 48.3055723133037, 15.0036414467995 48.3055780293159, 15.0036027213225 48.3055895019264, 15.0034866258387 48.30562404126, 15.0034479543219 48.3056355948732, 15.0034286321496 48.3056413919134, 15.0033900149768 48.3056530264613, 15.0032742455236 48.3056880512713, 15.0032356830353 48.3056997666046, 15.0032164155774 48.3057056444444, 15.0031779082398 48.3057174404682, 15.0030624693518 48.3057529493832, 15.0030240174434 48.3057648259654, 15.0030048054598 48.3057707843729, 15.0029664094357 48.30578274142, 15.0028513056683 48.3058187330391, 15.0028129658523 48.3058307704032, 15.0027938101008 48.3058368091435, 15.0027555269106 48.3058489267406, 15.002640762792 48.3058853996484, 15.0026025365716 48.3058975973226, 15.0025834378075 48.3059037161576, 15.0025452689682 48.3059159938249, 15.0024308490367 48.3059529465797, 15.0023927379156 48.3059653040843, 15.0023736968923 48.3059715027729, 15.0023356439192 48.3059839400229, 15.0022215726927 48.3060213711661, 15.002183578183 48.3060338880111, 15.0021645956513 48.3060401663088, 15.0021266600338 48.306052762655, 15.0020129420067 48.3060906707123, 15.0019750656194 48.3061033463998, 15.001956142328 48.3061097040592, 15.0019183255509 48.3061224590088, 15.0018049652058 48.3061608424864, 15.0017672084132 48.306173676524, 15.0017483451085 48.3061801132943, 15.0017106486794 48.3061930263391, 15.0015976504795 48.3062318837265, 15.0015600147749 48.3062448756068, 15.0015412122008 48.3062513912343, 15.0015036376146 48.3062644618623, 15.0013910060418 48.3063037916187, 15.0013534929006 48.3063169408326, 15.0013347517988 48.3063235350604, 15.0012973005323 48.3063367627581, 15.0011850399939 48.3063765633452, 15.0011476508982 48.3063898693735, 15.0011289720079 48.3063965419417, 15.0010916455385 48.3064099261873, 15.0009797604829 48.3064501960288, 15.0009424969343 48.3064636583373, 15.0009238809922 48.3064704089827, 15.0008866807744 48.306483949255, 15.0007751756429 48.3065246867527, 15.0007380390999 48.3065383048146, 15.0007194868402 48.3065451332711, 15.0006824143482 48.3065588290337, 15.0005712934641 48.306600032609, 15.00053428536 48.306613805899, 15.0005157975145 48.3066207118974, 15.0004788542332 48.3066345626021, 15.0003681220582 48.3066762306013, 15.0003312438833 48.3066901585651, 15.0003128211812 48.3066971418331, 15.000276008554 48.3067111469388, 15.0001656694024 48.306753277739, 15.0001289225983 48.3067673598324, 15.0001105657664 48.3067744200946, 15.0000738852312 48.3067885790546, 14.9999639434676 48.3068311709904, 14.9999273294998 48.306845406652, 14.9999090392622 48.3068525436301, 14.9998724922809 48.3068668558803, 14.9997629522674 48.3069099072624, 14.9997264725699 48.3069242959349, 14.9997082496479 48.3069315093475, 14.9996718376588 48.3069459743249, 14.9995627036911 48.3069894834657, 14.9995263596986 48.3070040245836, 14.9995082048112 48.3070113141463, 14.9994719292567 48.3070259312781, 14.9993632056653 48.307069896452, 14.9993269988284 48.3070845894349, 14.9993089126916 48.3070919548603, 14.9992727749849 48.3071067235775, 14.9991644660056 48.3071511430725, 14.9991283977261 48.307165987352, 14.9991103810535 48.3071734283497, 14.9990743826335 48.3071883480644, 14.9989664925938 48.3072332201069, 14.9989305643326 48.3072482150821, 14.9989126178348 48.3072557313586, 14.9988767601092 48.3072708014879, 14.9987692932457 48.3073161243164, 14.9987335063775 48.3073312694137, 14.9987156307626 48.3073388606728, 14.9986799151708 48.307354080612, 14.9985728757085 48.3073998524457, 14.9985372316617 48.3074151470612, 14.9985194276349 48.3074228130035, 14.9984838555744 48.3074381821572, 14.9983772477687 48.3074844011775, 14.9983417479654 48.3074998447012, 14.9983240162289 48.3075075850245, 14.9982885890881 48.3075231027932, 14.9981824171131 48.3075697671915, 14.9981470629247 48.307585359027, 14.9981294041783 48.307593173426, 14.9980941233779 48.3076088391879, 14.9979883914282 48.3076559471216, 14.9979531842707 48.307671686645, 14.9979355992109 48.3076795748117, 14.99790046613 48.3076953879547, 14.997795178409 48.3077429375519, 14.9977601196816 48.3077588241379, 14.9977426090022 48.3077667857612, 14.9977076250121 48.3077827456684, 14.9976027856207 48.3078307350783, 14.9975678766926 48.3078467681067, 14.9975504410845 48.3078548028727, 14.997515607577 48.3078709089098, 14.9974112206963 48.3079193362198, 14.9973764629555 48.3079355150534, 14.9973591031065 48.3079436226452, 14.9973244214532 48.3079598741786, 14.9972204911782 48.3080087374899, 14.9971858859623 48.3080250615066, 14.9971686025575 48.3080332416046, 14.9971340741509 48.308049637982, 14.9970306045791 48.3080989353696, 14.9969961532821 48.3081154039122, 14.9969789470032 48.308123656194, 14.9969445731888 48.3081401967767, 14.9968415684421 48.3081899262778, 14.996807272428 48.3082065386945, 14.9967901439541 48.3082148628345, 14.9967559260745 48.308231546977, 14.9966533901614 48.3082817066576, 14.9966192507642 48.3082984623029, 14.9966022007711 48.308306857973, 14.9965681401963 48.3083236850077, 14.9964660771939 48.3083742728748, 14.9964320957544 48.3083911710911, 14.9964151249148 48.3083996379602, 14.9963812229951 48.3084166072205, 14.996279636922 48.3084676212836, 14.9962458147931 48.3084846613987, 14.9962289237767 48.3084931991329, 14.9961951818365 48.3085103099563, 14.9960940767041 48.3085617482024, 14.9960604152174 48.3085789295459, 14.9960436046907 48.3085875378086, 14.9960100240752 48.3086047895132, 14.9959094038931 48.3086566499037, 14.9958759044055 48.3086739717833, 14.9958591750317 48.308682650235, 14.9958257570226 48.308700042163, 14.9957256257074 48.3087523226809, 14.9956922894897 48.3087697844402, 14.9956756419291 48.3087785327387, 14.9956423879002 48.3087960641757, 14.9955427494654 48.308848762727, 14.9955095778834 48.308866363651, 14.995493012793 48.3088751814513, 14.9954599240164 48.3088928517271, 14.9953607823537 48.3089459662548, 14.9953277766818 48.3089637056678, 14.9953112947152 48.3089725926223, 14.995278372522 48.3089904010266, 14.9951797315623 48.3090439294266, 14.9951468931087 48.3090618066261, 14.9951304949164 48.3090707623843, 14.9950977406007 48.3090887082175, 14.994999604223 48.3091426483864, 14.9949669342871 48.3091606626656, 14.9949506205162 48.3091696868744, 14.994918035371 48.3091877694287, 14.9948204074645 48.3092421192304, 14.9947879073352 48.3092602698794, 14.9947716786295 48.3092693621828, 14.9947392639334 48.3092875807491, 14.9946421483329 48.3093423380507, 14.9946098193196 48.3093606243385, 14.9945936763196 48.309369784378, 14.9945614333314 48.3093881382497, 14.9944648338825 48.3094433008846, 14.9944326772235 48.3094617221113, 14.9944166205663 48.3094709495259, 14.9943845505942 48.3094894379589, 14.994288471108 48.3095450037528, 14.9942564880893 48.3095635591823, 14.9942405184087 48.309572853608, 14.9942086227147 48.3095914758753, 14.994113066996 48.3096474426292, 14.9940812588776 48.3096661315313, 14.9940653768039 48.3096754926014, 14.9940336566225 48.3096942479828, 14.9939386283881 48.3097506135223, 14.9939069964094 48.3097694351694, 14.9938912025693 48.309778862515, 14.9938596591852 48.3097977502518, 14.9937651622595 48.3098545123102, 14.993733707695 48.3098734659448, 14.993718002712 48.309882959194, 14.9936866373445 48.3099019785565, 14.9935926754123 48.3099591349225, 14.9935613995115 48.309978219792, 14.9935457840056 48.3099877785704, 14.9935145978821 48.3100069288152, 14.9934211746691 48.3100644772246, 14.9933900786354 48.3100836925954, 14.9933745532228 48.3100933165262, 14.9933435476074 48.3101125968779, 14.9932506667871 48.3101705350699, 14.9932197518602 48.3101898801768, 14.9932043171538 48.3101995688804, 14.9931734932529 48.3102189785894, 14.99308115851 48.3102773042679, 14.9930504259105 48.3102967783479, 14.9930350825197 48.3103065314421, 14.993004441559 48.3103260697374, 14.9929126565178 48.3103847806151, 14.9928821074525 48.3104043829042, 14.9928668559828 48.3104142000046, 14.9928363991674 48.3104338661184, 14.992745167473 48.3104929598662, 14.9927148031551 48.3105126895867, 14.9926996442087 48.310522570306, 14.9926693727442 48.3105423634606, 14.9925786979929 48.3106018377512, 14.992548519621 48.3106216941252, 14.9925334537963 48.3106316380737, 14.9925033688713 48.3106515574928, 14.9924132546173 48.3107114099975, 14.992383263363 48.3107313922551, 14.9923682912548 48.3107413990408, 14.9923383940743 48.3107614439272, 14.9922488439145 48.3108216722596, 14.9922190410006 48.3108417795868, 14.9922041631999 48.3108518488149, 14.9921744549098 48.3108720184012, 14.9920854723408 48.3109326202122, 14.9920558589182 48.3109528518333, 14.9920410760124 48.3109629831068, 14.9920115578139 48.3109832765785, 14.9919231463888 48.3110442494508, 14.9918937236339 48.311064604563, 14.9918790362068 48.3110747974823, 14.9918497092526 48.3110952140478, 14.9917618724233 48.3111565556034, 14.9917326414948 48.311177033406, 14.9917180501261 48.3111872875692, 14.9916889155765 48.3112078264216, 14.991601656839 48.311269534222, 14.9915726189007 48.3112901339006, 14.9915581241666 48.3113004489032, 14.9915291831688 48.3113211092347, 14.9914425059567 48.3113831808545, 14.9914136621426 48.3114039016056, 14.9913992646155 48.3114142770408, 14.9913705183245 48.3114350580279, 14.9912844260734 48.3114974910095, 14.9912557775304 48.3115183320101, 14.9912414777786 48.3115287674687, 14.9912129273179 48.3115496683002, 14.9911274234005 48.3116124602007, 14.9910989712536 48.3116334206333, 14.9910847698419 48.3116439157038, 14.9910564163365 48.3116649355572, 14.9909715041394 48.3117280838929, 14.9909432495001 48.31174916294, 14.9909291469893 48.3117597172085, 14.9909009915869 48.3117808552338, 14.9908166744912 48.3118443574932, 14.9907886185134 48.3118655542947, 14.9907746154604 48.3118761673448, 14.9907466592267 48.3118974227429, 14.9906629405244 48.3119612764497, 14.9906350842918 48.311982590188, 14.9906211812494 48.3119932616012, 14.9905934253116 48.3120146335165, 14.9905103083277 48.3120788361382, 14.9904826529261 48.3121002659836, 14.9904688504436 48.3121109953389, 14.990441295918 48.3121324829129, 14.9903587839313 48.3121970319199, 14.9903313304771 48.3122185770084, 14.9903176290995 48.3122293638828, 14.9902902770405 48.3122509662942, 14.9902083733036 48.3123158591454, 14.9901928112608 48.3123282283433, 14.9902007249348 48.29808446335, 14.9901983379986 48.2978500887776, 14.9901774528441 48.2971471618753, 14.9901452382549 48.2966789654988, 14.9900695134702 48.2959777801575, 14.9900007965495 48.2955113801593, 14.9899064668078 48.2950066166332, 14.9893271305309 48.2932933075774, 14.9882596596734 48.2916884160938, 14.9867448265353 48.2902531756206, 14.9848404581948 48.2890423418812, 14.9826192270932 48.2881021057996, 14.9507881856124 48.2788094773675, 14.9484738106383 48.2781987157706, 14.9460299367819 48.2778829199696, 14.9435400191895 48.2778728740545, 14.9410890830677 48.2781689213705, 14.938760824787 48.2787609527711, 14.8245263826423 48.3161134937839, 14.8242063740125 48.3162214244971, 14.8232529385875 48.3165536590611, 14.8226263290562 48.3167863279791, 14.8217005994306 48.3171518538895, 14.8210933385513 48.3174063808626, 14.8201979286787 48.3178041664435, 14.8196117312635 48.318079833069, 14.8187491698115 48.3185087555469, 14.8181856914173 48.3188047837229, 14.8173584146399 48.3192636323855, 14.8168192469021 48.3195791864993, 14.8160295917676 48.320066666102, 14.8155162579091 48.3204008553811, 14.8147664555046 48.3209155897915, 14.8142804060352 48.3212674708107, 14.8135725752654 48.3218080068821, 14.8131151838828 48.32217658622, 14.8124513254802 48.3227413978824, 14.8120238851868 48.3231256349169, 14.8114058760524 48.3237131274738, 14.8110095954949 48.3241119373135, 14.8104391833825 48.3247204519335, 14.8100751834266 48.3251327084742, 14.8095539819884 48.3257605268642, 14.809223292541 48.3261850659603, 14.8087527767474 48.3268304152072, 14.8084563338306 48.3272660379525, 14.8080378357775 48.3279270955203, 14.807776478865 48.3283725716296, 14.8074111839811 48.329047470497, 14.8071856536074 48.3295015417718, 14.8068745972723 48.3301883756978, 14.8066855329158 48.3306497595783, 14.8064295974985 48.3313465884787, 14.8062775357513 48.3318139816585, 14.8060774480787 48.3325188370804, 14.8059628211024 48.3329909191885, 14.8058191503645 48.3337018098652, 14.8057422846427 48.3341772471872, 14.8056554407415 48.3348921646601, 14.8056165561268 48.3353696139101, 14.8055867884734 48.3360865382001, 14.8055816285028 48.3363255958177, 14.8055466368849 48.3576068681192, 14.8055509429541 48.3578440875179, 14.8055779385081 48.3585554933671, 14.8056146959165 48.3590292626028, 14.8056334693425 48.3591892612555, 14.8060905852328 48.3609089461167, 14.8070379920612 48.3625367551998, 14.8084399859151 48.3640112657364, 14.8102436968007 48.3652768344217, 14.8123810799768 48.3662856989919, 14.8147714826964 48.366999782707, 14.8173246895739 48.3673921332719, 14.8199443312886 48.3674479415491, 14.9774768360779 48.3604661523407, 14.9799694019025 48.3601960954296, 14.9805819682282 48.360047796965, 14.9811934611334 48.3601375156857, 14.983744216321 48.3601837106372, 15.0340177223514 48.3579051736003, 15.0348067308947 48.3578536755158, 15.0366405331117 48.3576106257406, 15.0380573659299 48.3572967659568, 15.0382288918789 48.3572507049988, 15.0389533667207 48.3570355337763, 15.0390482315789 48.3570047999189, 15.0417297686861 48.3558470892425, 15.0438190672618 48.3543991997881, 15.0448187183631 48.3533987441357, 15.0458747427197 48.3518484180154, 15.0463428899046 48.3507008417888, 15.0465110782839 48.3500080532677, 15.0465607496709 48.3496898015691, 15.0465804730711 48.3483182652647, 15.0434498113016 48.317067995962, 15.0430535239435 48.3154239245974, 15.0422095347526 48.3138573013343, 15.0409468240306 48.3124218461209, 15.0393087198969 48.3111667768248, 15.0373514093679 48.3101351230439, 15.0261221731143 48.3052708911821, 15.0238025404443 48.3044678117494, 15.0212934737895 48.3039789528159, 15.018689377485 48.3038227073633, 15.0133414450301 48.3038492918546))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[15.0133414450301, 48.3038492918546], [15.0104333989488, 48.3040757605693], [15.0103234944425, 48.3040925387331], [15.0102822176037, 48.3040988855918], [15.0102615866467, 48.3041020806326], [15.0102203396616, 48.3041085139364], [15.0100966440567, 48.3041279433629], [15.0100554272948, 48.3041344630118], [15.0100348265826, 48.3041377444153], [15.0099936404917, 48.3041443503808], [15.0098701287545, 48.3041642976042], [15.0098289737114, 48.3041709897836], [15.0098084040561, 48.3041743574204], [15.0097672804736, 48.304181135789], [15.0096439575576, 48.3042016000092], [15.009602865855, 48.3042084644553], [15.0095823280676, 48.3042119181927], [15.0095412686256, 48.3042188686953], [15.0094181393182, 48.304239849118], [15.0093771125514, 48.3042468855644], [15.0093566074416, 48.3042504252663], [15.0093156137715, 48.3042575476269], [15.0091926829732, 48.3042790434172], [15.0091517227672, 48.3042862515853], [15.0091312511435, 48.3042898771121], [15.0090903248545, 48.3042971710509], [15.0089675973828, 48.3043191813666], [15.0089267053572, 48.3043265609716], [15.0089062680267, 48.3043302721804], [15.0088654107318, 48.3043377374101], [15.0087428914497, 48.3043602613792], [15.0087020692419, 48.3043678121254], [15.0086816670104, 48.3043716088698], [15.008640880287, 48.3043792451023], [15.0085185739908, 48.3044022818432], [15.0084778231864, 48.3044100034374], [15.0084574568583, 48.3044138855679], [15.0084167423529, 48.304421692495], [15.0082946539171, 48.3044452410897], [15.0082539761061, 48.3044531332308], [15.0082336464845, 48.3044571005942], [15.0081930058088, 48.3044650779069], [15.0080711399837, 48.3044891374394], [15.0080305367795, 48.3044971998144], [15.0080102446658, 48.3045012522545], [15.0079696794166, 48.3045093996392], [15.0078480410828, 48.304533969146], [15.0078075141207, 48.3045422014303], [15.007787260315, 48.3045463387871], [15.0077467720561, 48.30455465593], [15.0076253659311, 48.3045797344584], [15.0075849167656, 48.3045881363361], [15.0075647020665, 48.3045923584467], [15.007524292431, 48.3046008450124], [15.0074031233365, 48.3046264315668], [15.0073627535828, 48.3046350027026], [15.0073425787873, 48.3046393094005], [15.0073022493541, 48.3046479650574], [15.0071813220924, 48.3046740586238], [15.0071410333548, 48.3046827986772], [15.0071208992584, 48.3046871897926], [15.0070806516129, 48.3046960142005], [15.0069599709162, 48.3047226137579], [15.0069197647547, 48.3047315223904], [15.0068996721512, 48.3047359977503], [15.0068595079019, 48.3047449905566], [15.0067390785539, 48.3047720950509], [15.0066989565689, 48.304781171908], [15.0066789062507, 48.3047857313359], [15.0066388269687, 48.3047948921888], [15.0065186536931, 48.3048225005571], [15.0064786174655, 48.3048317452813], [15.0064586102231, 48.3048363885974], [15.0064186174776, 48.3048457171384], [15.0062987050227, 48.30487382829], [15.0062587561278, 48.3048832405176], [15.0062387927501, 48.3048879675389], [15.0061988881272, 48.3048974633983], [15.0060792412166, 48.3049260762263], [15.0060393812432, 48.304935655583], [15.0060194625174, 48.3049404661232], [15.005979647591, 48.3049501289264], [15.0058602709775, 48.3049792422942], [15.0058205015025, 48.304988988401], [15.005800628214, 48.3049938822703], [15.005760904534, 48.3050037116414], [15.0056418028622, 48.3050333244167], [15.005602125409, 48.3050432369004], [15.0055822983415, 48.3050482139061], [15.0055426675252, 48.3050582094449], [15.0054238455514, 48.3050883204454], [15.0053842617326, 48.3050983989033], [15.0053644816678, 48.3051034588491], [15.005324945231, 48.3051136201733], [15.0052064076115, 48.3051442282192], [15.0051669189569, 48.3051544722619], [15.0051471866748, 48.3051596149482], [15.005107746199, 48.3051699416517], [15.0049894975914, 48.3052010455407], [15.0049501056524, 48.3052114547659], [15.0049304219312, 48.3052166799902], [15.0048910789834, 48.3052271716625], [15.0047731240952, 48.3052587701568], [15.004733830473, 48.3052693441415], [15.0047141960888, 48.3052746516976], [15.0046749521752, 48.3052853079372], [15.0045572956192, 48.3053173998013], [15.0045181017981, 48.3053281381461], [15.0044985175253, 48.3053335278249], [15.0044593742568, 48.3053443481945], [15.0043420206903, 48.3053769321585], [15.0043029282547, 48.3053878344297], [15.0042833948654, 48.3053933060186], [15.0042443537399, 48.3054042901042], [15.0041273077871, 48.3054373648845], [15.0040883182856, 48.3054484306502], [15.0040688365502, 48.3054539839335], [15.0040298991135, 48.3054651313003], [15.0039131654064, 48.3054986955883], [15.0038742803784, 48.3055099244116], [15.0038548510652, 48.3055155591704], [15.0038160188427, 48.3055268693819], [15.0036996019542, 48.3055609218631], [15.0036608229244, 48.3055723133037], [15.0036414467995, 48.3055780293159], [15.0036027213225, 48.3055895019264], [15.0034866258387, 48.30562404126], [15.0034479543219, 48.3056355948732], [15.0034286321496, 48.3056413919134], [15.0033900149768, 48.3056530264613], [15.0032742455236, 48.3056880512713], [15.0032356830353, 48.3056997666046], [15.0032164155774, 48.3057056444444], [15.0031779082398, 48.3057174404682], [15.0030624693518, 48.3057529493832], [15.0030240174434, 48.3057648259654], [15.0030048054598, 48.3057707843729], [15.0029664094357, 48.30578274142], [15.0028513056683, 48.3058187330391], [15.0028129658523, 48.3058307704032], [15.0027938101008, 48.3058368091435], [15.0027555269106, 48.3058489267406], [15.002640762792, 48.3058853996484], [15.0026025365716, 48.3058975973226], [15.0025834378075, 48.3059037161576], [15.0025452689682, 48.3059159938249], [15.0024308490367, 48.3059529465797], [15.0023927379156, 48.3059653040843], [15.0023736968923, 48.3059715027729], [15.0023356439192, 48.3059839400229], [15.0022215726927, 48.3060213711661], [15.002183578183, 48.3060338880111], [15.0021645956513, 48.3060401663088], [15.0021266600338, 48.306052762655], [15.0020129420067, 48.3060906707123], [15.0019750656194, 48.3061033463998], [15.001956142328, 48.3061097040592], [15.0019183255509, 48.3061224590088], [15.0018049652058, 48.3061608424864], [15.0017672084132, 48.306173676524], [15.0017483451085, 48.3061801132943], [15.0017106486794, 48.3061930263391], [15.0015976504795, 48.3062318837265], [15.0015600147749, 48.3062448756068], [15.0015412122008, 48.3062513912343], [15.0015036376146, 48.3062644618623], [15.0013910060418, 48.3063037916187], [15.0013534929006, 48.3063169408326], [15.0013347517988, 48.3063235350604], [15.0012973005323, 48.3063367627581], [15.0011850399939, 48.3063765633452], [15.0011476508982, 48.3063898693735], [15.0011289720079, 48.3063965419417], [15.0010916455385, 48.3064099261873], [15.0009797604829, 48.3064501960288], [15.0009424969343, 48.3064636583373], [15.0009238809922, 48.3064704089827], [15.0008866807744, 48.306483949255], [15.0007751756429, 48.3065246867527], [15.0007380390999, 48.3065383048146], [15.0007194868402, 48.3065451332711], [15.0006824143482, 48.3065588290337], [15.0005712934641, 48.306600032609], [15.00053428536, 48.306613805899], [15.0005157975145, 48.3066207118974], [15.0004788542332, 48.3066345626021], [15.0003681220582, 48.3066762306013], [15.0003312438833, 48.3066901585651], [15.0003128211812, 48.3066971418331], [15.000276008554, 48.3067111469388], [15.0001656694024, 48.306753277739], [15.0001289225983, 48.3067673598324], [15.0001105657664, 48.3067744200946], [15.0000738852312, 48.3067885790546], [14.9999639434676, 48.3068311709904], [14.9999273294998, 48.306845406652], [14.9999090392622, 48.3068525436301], [14.9998724922809, 48.3068668558803], [14.9997629522674, 48.3069099072624], [14.9997264725699, 48.3069242959349], [14.9997082496479, 48.3069315093475], [14.9996718376588, 48.3069459743249], [14.9995627036911, 48.3069894834657], [14.9995263596986, 48.3070040245836], [14.9995082048112, 48.3070113141463], [14.9994719292567, 48.3070259312781], [14.9993632056653, 48.307069896452], [14.9993269988284, 48.3070845894349], [14.9993089126916, 48.3070919548603], [14.9992727749849, 48.3071067235775], [14.9991644660056, 48.3071511430725], [14.9991283977261, 48.307165987352], [14.9991103810535, 48.3071734283497], [14.9990743826335, 48.3071883480644], [14.9989664925938, 48.3072332201069], [14.9989305643326, 48.3072482150821], [14.9989126178348, 48.3072557313586], [14.9988767601092, 48.3072708014879], [14.9987692932457, 48.3073161243164], [14.9987335063775, 48.3073312694137], [14.9987156307626, 48.3073388606728], [14.9986799151708, 48.307354080612], [14.9985728757085, 48.3073998524457], [14.9985372316617, 48.3074151470612], [14.9985194276349, 48.3074228130035], [14.9984838555744, 48.3074381821572], [14.9983772477687, 48.3074844011775], [14.9983417479654, 48.3074998447012], [14.9983240162289, 48.3075075850245], [14.9982885890881, 48.3075231027932], [14.9981824171131, 48.3075697671915], [14.9981470629247, 48.307585359027], [14.9981294041783, 48.307593173426], [14.9980941233779, 48.3076088391879], [14.9979883914282, 48.3076559471216], [14.9979531842707, 48.307671686645], [14.9979355992109, 48.3076795748117], [14.99790046613, 48.3076953879547], [14.997795178409, 48.3077429375519], [14.9977601196816, 48.3077588241379], [14.9977426090022, 48.3077667857612], [14.9977076250121, 48.3077827456684], [14.9976027856207, 48.3078307350783], [14.9975678766926, 48.3078467681067], [14.9975504410845, 48.3078548028727], [14.997515607577, 48.3078709089098], [14.9974112206963, 48.3079193362198], [14.9973764629555, 48.3079355150534], [14.9973591031065, 48.3079436226452], [14.9973244214532, 48.3079598741786], [14.9972204911782, 48.3080087374899], [14.9971858859623, 48.3080250615066], [14.9971686025575, 48.3080332416046], [14.9971340741509, 48.308049637982], [14.9970306045791, 48.3080989353696], [14.9969961532821, 48.3081154039122], [14.9969789470032, 48.308123656194], [14.9969445731888, 48.3081401967767], [14.9968415684421, 48.3081899262778], [14.996807272428, 48.3082065386945], [14.9967901439541, 48.3082148628345], [14.9967559260745, 48.308231546977], [14.9966533901614, 48.3082817066576], [14.9966192507642, 48.3082984623029], [14.9966022007711, 48.308306857973], [14.9965681401963, 48.3083236850077], [14.9964660771939, 48.3083742728748], [14.9964320957544, 48.3083911710911], [14.9964151249148, 48.3083996379602], [14.9963812229951, 48.3084166072205], [14.996279636922, 48.3084676212836], [14.9962458147931, 48.3084846613987], [14.9962289237767, 48.3084931991329], [14.9961951818365, 48.3085103099563], [14.9960940767041, 48.3085617482024], [14.9960604152174, 48.3085789295459], [14.9960436046907, 48.3085875378086], [14.9960100240752, 48.3086047895132], [14.9959094038931, 48.3086566499037], [14.9958759044055, 48.3086739717833], [14.9958591750317, 48.308682650235], [14.9958257570226, 48.308700042163], [14.9957256257074, 48.3087523226809], [14.9956922894897, 48.3087697844402], [14.9956756419291, 48.3087785327387], [14.9956423879002, 48.3087960641757], [14.9955427494654, 48.308848762727], [14.9955095778834, 48.308866363651], [14.995493012793, 48.3088751814513], [14.9954599240164, 48.3088928517271], [14.9953607823537, 48.3089459662548], [14.9953277766818, 48.3089637056678], [14.9953112947152, 48.3089725926223], [14.995278372522, 48.3089904010266], [14.9951797315623, 48.3090439294266], [14.9951468931087, 48.3090618066261], [14.9951304949164, 48.3090707623843], [14.9950977406007, 48.3090887082175], [14.994999604223, 48.3091426483864], [14.9949669342871, 48.3091606626656], [14.9949506205162, 48.3091696868744], [14.994918035371, 48.3091877694287], [14.9948204074645, 48.3092421192304], [14.9947879073352, 48.3092602698794], [14.9947716786295, 48.3092693621828], [14.9947392639334, 48.3092875807491], [14.9946421483329, 48.3093423380507], [14.9946098193196, 48.3093606243385], [14.9945936763196, 48.309369784378], [14.9945614333314, 48.3093881382497], [14.9944648338825, 48.3094433008846], [14.9944326772235, 48.3094617221113], [14.9944166205663, 48.3094709495259], [14.9943845505942, 48.3094894379589], [14.994288471108, 48.3095450037528], [14.9942564880893, 48.3095635591823], [14.9942405184087, 48.309572853608], [14.9942086227147, 48.3095914758753], [14.994113066996, 48.3096474426292], [14.9940812588776, 48.3096661315313], [14.9940653768039, 48.3096754926014], [14.9940336566225, 48.3096942479828], [14.9939386283881, 48.3097506135223], [14.9939069964094, 48.3097694351694], [14.9938912025693, 48.309778862515], [14.9938596591852, 48.3097977502518], [14.9937651622595, 48.3098545123102], [14.993733707695, 48.3098734659448], [14.993718002712, 48.309882959194], [14.9936866373445, 48.3099019785565], [14.9935926754123, 48.3099591349225], [14.9935613995115, 48.309978219792], [14.9935457840056, 48.3099877785704], [14.9935145978821, 48.3100069288152], [14.9934211746691, 48.3100644772246], [14.9933900786354, 48.3100836925954], [14.9933745532228, 48.3100933165262], [14.9933435476074, 48.3101125968779], [14.9932506667871, 48.3101705350699], [14.9932197518602, 48.3101898801768], [14.9932043171538, 48.3101995688804], [14.9931734932529, 48.3102189785894], [14.99308115851, 48.3102773042679], [14.9930504259105, 48.3102967783479], [14.9930350825197, 48.3103065314421], [14.993004441559, 48.3103260697374], [14.9929126565178, 48.3103847806151], [14.9928821074525, 48.3104043829042], [14.9928668559828, 48.3104142000046], [14.9928363991674, 48.3104338661184], [14.992745167473, 48.3104929598662], [14.9927148031551, 48.3105126895867], [14.9926996442087, 48.310522570306], [14.9926693727442, 48.3105423634606], [14.9925786979929, 48.3106018377512], [14.992548519621, 48.3106216941252], [14.9925334537963, 48.3106316380737], [14.9925033688713, 48.3106515574928], [14.9924132546173, 48.3107114099975], [14.992383263363, 48.3107313922551], [14.9923682912548, 48.3107413990408], [14.9923383940743, 48.3107614439272], [14.9922488439145, 48.3108216722596], [14.9922190410006, 48.3108417795868], [14.9922041631999, 48.3108518488149], [14.9921744549098, 48.3108720184012], [14.9920854723408, 48.3109326202122], [14.9920558589182, 48.3109528518333], [14.9920410760124, 48.3109629831068], [14.9920115578139, 48.3109832765785], [14.9919231463888, 48.3110442494508], [14.9918937236339, 48.311064604563], [14.9918790362068, 48.3110747974823], [14.9918497092526, 48.3110952140478], [14.9917618724233, 48.3111565556034], [14.9917326414948, 48.311177033406], [14.9917180501261, 48.3111872875692], [14.9916889155765, 48.3112078264216], [14.991601656839, 48.311269534222], [14.9915726189007, 48.3112901339006], [14.9915581241666, 48.3113004489032], [14.9915291831688, 48.3113211092347], [14.9914425059567, 48.3113831808545], [14.9914136621426, 48.3114039016056], [14.9913992646155, 48.3114142770408], [14.9913705183245, 48.3114350580279], [14.9912844260734, 48.3114974910095], [14.9912557775304, 48.3115183320101], [14.9912414777786, 48.3115287674687], [14.9912129273179, 48.3115496683002], [14.9911274234005, 48.3116124602007], [14.9910989712536, 48.3116334206333], [14.9910847698419, 48.3116439157038], [14.9910564163365, 48.3116649355572], [14.9909715041394, 48.3117280838929], [14.9909432495001, 48.31174916294], [14.9909291469893, 48.3117597172085], [14.9909009915869, 48.3117808552338], [14.9908166744912, 48.3118443574932], [14.9907886185134, 48.3118655542947], [14.9907746154604, 48.3118761673448], [14.9907466592267, 48.3118974227429], [14.9906629405244, 48.3119612764497], [14.9906350842918, 48.311982590188], [14.9906211812494, 48.3119932616012], [14.9905934253116, 48.3120146335165], [14.9905103083277, 48.3120788361382], [14.9904826529261, 48.3121002659836], [14.9904688504436, 48.3121109953389], [14.990441295918, 48.3121324829129], [14.9903587839313, 48.3121970319199], [14.9903313304771, 48.3122185770084], [14.9903176290995, 48.3122293638828], [14.9902902770405, 48.3122509662942], [14.9902083733036, 48.3123158591454], [14.9901928112608, 48.3123282283433], [14.9902007249348, 48.29808446335], [14.9901983379986, 48.2978500887776], [14.9901774528441, 48.2971471618753], [14.9901452382549, 48.2966789654988], [14.9900695134702, 48.2959777801575], [14.9900007965495, 48.2955113801593], [14.9899064668078, 48.2950066166332], [14.9893271305309, 48.2932933075774], [14.9882596596734, 48.2916884160938], [14.9867448265353, 48.2902531756206], [14.9848404581948, 48.2890423418812], [14.9826192270932, 48.2881021057996], [14.9507881856124, 48.2788094773675], [14.9484738106383, 48.2781987157706], [14.9460299367819, 48.2778829199696], [14.9435400191895, 48.2778728740545], [14.9410890830677, 48.2781689213705], [14.938760824787, 48.2787609527711], [14.8245263826423, 48.3161134937839], [14.8242063740125, 48.3162214244971], [14.8232529385875, 48.3165536590611], [14.8226263290562, 48.3167863279791], [14.8217005994306, 48.3171518538895], [14.8210933385513, 48.3174063808626], [14.8201979286787, 48.3178041664435], [14.8196117312635, 48.318079833069], [14.8187491698115, 48.3185087555469], [14.8181856914173, 48.3188047837229], [14.8173584146399, 48.3192636323855], [14.8168192469021, 48.3195791864993], [14.8160295917676, 48.320066666102], [14.8155162579091, 48.3204008553811], [14.8147664555046, 48.3209155897915], [14.8142804060352, 48.3212674708107], [14.8135725752654, 48.3218080068821], [14.8131151838828, 48.32217658622], [14.8124513254802, 48.3227413978824], [14.8120238851868, 48.3231256349169], [14.8114058760524, 48.3237131274738], [14.8110095954949, 48.3241119373135], [14.8104391833825, 48.3247204519335], [14.8100751834266, 48.3251327084742], [14.8095539819884, 48.3257605268642], [14.809223292541, 48.3261850659603], [14.8087527767474, 48.3268304152072], [14.8084563338306, 48.3272660379525], [14.8080378357775, 48.3279270955203], [14.807776478865, 48.3283725716296], [14.8074111839811, 48.329047470497], [14.8071856536074, 48.3295015417718], [14.8068745972723, 48.3301883756978], [14.8066855329158, 48.3306497595783], [14.8064295974985, 48.3313465884787], [14.8062775357513, 48.3318139816585], [14.8060774480787, 48.3325188370804], [14.8059628211024, 48.3329909191885], [14.8058191503645, 48.3337018098652], [14.8057422846427, 48.3341772471872], [14.8056554407415, 48.3348921646601], [14.8056165561268, 48.3353696139101], [14.8055867884734, 48.3360865382001], [14.8055816285028, 48.3363255958177], [14.8055466368849, 48.3576068681192], [14.8055509429541, 48.3578440875179], [14.8055779385081, 48.3585554933671], [14.8056146959165, 48.3590292626028], [14.8056334693425, 48.3591892612555], [14.8060905852328, 48.3609089461167], [14.8070379920612, 48.3625367551998], [14.8084399859151, 48.3640112657364], [14.8102436968007, 48.3652768344217], [14.8123810799768, 48.3662856989919], [14.8147714826964, 48.366999782707], [14.8173246895739, 48.3673921332719], [14.8199443312886, 48.3674479415491], [14.9774768360779, 48.3604661523407], [14.9799694019025, 48.3601960954296], [14.9805819682282, 48.360047796965], [14.9811934611334, 48.3601375156857], [14.983744216321, 48.3601837106372], [15.0340177223514, 48.3579051736003], [15.0348067308947, 48.3578536755158], [15.0366405331117, 48.3576106257406], [15.0380573659299, 48.3572967659568], [15.0382288918789, 48.3572507049988], [15.0389533667207, 48.3570355337763], [15.0390482315789, 48.3570047999189], [15.0417297686861, 48.3558470892425], [15.0438190672618, 48.3543991997881], [15.0448187183631, 48.3533987441357], [15.0458747427197, 48.3518484180154], [15.0463428899046, 48.3507008417888], [15.0465110782839, 48.3500080532677], [15.0465607496709, 48.3496898015691], [15.0465804730711, 48.3483182652647], [15.0434498113016, 48.317067995962], [15.0430535239435, 48.3154239245974], [15.0422095347526, 48.3138573013343], [15.0409468240306, 48.3124218461209], [15.0393087198969, 48.3111667768248], [15.0373514093679, 48.3101351230439], [15.0261221731143, 48.3052708911821], [15.0238025404443, 48.3044678117494], [15.0212934737895, 48.3039789528159], [15.018689377485, 48.3038227073633], [15.0133414450301, 48.3038492918546]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;a41b384a-67f3-4abc-ad32-8060ca90594e&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230615T082357_20230615T082359_TOU_048711_2605.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 136991609, &#x27;OriginDate&#x27;: &#x27;2025-03-19T11:10:59.809922Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-19T11:16:58.323535Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-19T11:16:58.323535Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/06/15/DM02_HRS_MS2_1D_20230615T082357_20230615T082359_TOU_048711_2605&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;0657fda947fe5b93fea5b921035e0d9a&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-19T11:16:56.919664Z&#x27;}, {&#x27;Value&#x27;: &#x27;84110b45667cff118d71e28e4fde52d5de577ab345f127abbf36d75c916001a9&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-19T11:16:57.223108Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-06-15T08:23:57.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-06-15T08:23:59.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((14.768104 62.144394, 14.770693 62.250416, 14.878922 62.233269, 14.924616 62.168259, 14.768104 62.144394)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[14.768104, 62.144394], [14.770693, 62.250416], [14.878922, 62.233269], [14.924616, 62.168259], [14.768104, 62.144394]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;49147546-22ae-4a99-aa7e-7cf5122aac8c&#x27;, &#x27;Name&#x27;: &#x27;SP06_NAO_MS4__3_20170830T094423_20170830T094435_TOU_1234_4125_COG.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 61600200, &#x27;OriginDate&#x27;: &#x27;2025-02-24T15:17:11.080429Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-02-24T16:18:09.810972Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-02-24T16:18:09.810972Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2018/NAO_MS4__3_E1F0-COG/2017/08/30/SP06_NAO_MS4__3_20170830T094423_20170830T094435_TOU_1234_4125_COG&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;f83398ae17c7b41324037f48539af4ec&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:18:08.587181Z&#x27;}, {&#x27;Value&#x27;: &#x27;7520bf24633b46e5c5ac85e6cd552bcf008968c33ba5ea8ff7cd9f29ae64d3c7&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:18:08.717296Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2017-08-30T09:44:23.000000Z&#x27;, &#x27;End&#x27;: &#x27;2017-08-30T09:44:35.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((13.0117422110807 47.2532984304385, 13.0109557068142 47.254009789083, 13.0107752591987 47.2541769610345, 13.0102424497488 47.2546826534151, 13.0098987176219 47.2550252611081, 13.0094006047855 47.255547119068, 13.009077005177 47.2559040389125, 13.0086049767628 47.2564528158363, 13.0083030003715 47.25682360483, 13.0078693511756 47.2573868866736, 13.007728040452 47.2575758043488, 13.0059603717661 47.2600091684905, 13.005804224074 47.2602317150647, 13.0053492673956 47.2609035897787, 13.0050640594211 47.2613569846152, 13.0046637140165 47.2620447842979, 13.0044153288962 47.2625081117431, 13.0040707994114 47.263209773073, 13.0038623632537 47.2636757524376, 13.0035811189863 47.2643713737725, 13.0034118549333 47.2648383534428, 13.0031854891867 47.2655431713197, 13.0030530405109 47.266015613528, 13.0028822030054 47.266727616593, 13.0028299071741 47.2669654652872, 13.002089216781 47.2706709424591, 13.0020547466027 47.2708579941077, 13.0019599661623 47.2714198177674, 13.0019082994494 47.2717951763575, 13.0018481142355 47.2723591815626, 13.0018188497421 47.2727517041873, 13.0017928026884 47.2733650376873, 13.0017890759562 47.2737740780171, 13.0018039463422 47.2743875486483, 13.0018123131475 47.2745919974575, 13.001986902687 47.277621873931, 13.0020063920201 47.2778715480311, 13.0020801185223 47.2786198589135, 13.0021495910592 47.2791175920326, 13.00228420289 47.279861904204, 13.0023920498624 47.2803482608115, 13.0025798988259 47.2810625728673, 13.0027238812455 47.281536298203, 13.0029678244136 47.2822426484127, 13.0030537872362 47.2824773494136, 13.003801406404 47.2844075589245, 13.003889647517 47.284624341555, 13.0041662705732 47.2852723221347, 13.0043664900853 47.2857010184736, 13.0046903385075 47.286338724736, 13.0049217823116 47.2867600375295, 13.0052920489101 47.2873858743734, 13.0055541399451 47.2877987497551, 13.005969901262 47.2884111516738, 13.0062631523234 47.2888160709585, 13.0067270372653 47.2894179869417, 13.007051049908 47.2898138152512, 13.007558894874 47.2903990070929, 13.0079117942115 47.2907831868065, 13.0084623116596 47.2913501680784, 13.0088432028416 47.2917217233248, 13.0094349966102 47.2922690537725, 13.0096356410214 47.2924498006438, 13.0113117747806 47.2939207157903, 13.0115002082231 47.294082208647, 13.0120736047939 47.2945621986946, 13.0124665586943 47.294876124947, 13.0130717138867 47.2953376657475, 13.0134854214104 47.2956389652515, 13.0141210624139 47.2960810850123, 13.014555594582 47.296369720466, 13.0152232678037 47.2967932348295, 13.0156778305361 47.2970685093007, 13.0163734837272 47.2974705990839, 13.0246848742487 47.302063198776, 13.0249953689347 47.3022342634472, 13.0254603022191 47.3024825754378, 13.0256161886567 47.3025645577632, 13.027102913895 47.3033344196359, 13.0290276432866 47.3041629098109, 13.0311331794706 47.3047537157857, 13.0333569193522 47.3050892700432, 13.0356327399765 47.3051595947411, 13.1140273930063 47.3029420512762, 13.1164394113876 47.302720195483, 13.1187513474527 47.3022008790153, 13.1208847688092 47.3014017208412, 13.1227673079562 47.3003498330316, 13.1243351192956 47.2990808997251, 13.1246558409492 47.2987666486936, 13.1250239778588 47.2983857283054, 13.1255547751816 47.297805024547, 13.1258941413787 47.2974119216384, 13.1263811166947 47.2968136950087, 13.1266908430393 47.2964094182733, 13.1271327493873 47.2957952037642, 13.1274120429345 47.2953807905072, 13.1278077491987 47.2947521640412, 13.1280558952193 47.2943286775115, 13.1284043890083 47.2936872518909, 13.1285145342804 47.2934765202075, 13.1285145342849 47.2934765201985, 13.1286208515023 47.2932555641332, 13.1289215137842 47.2926023367855, 13.1291056914925 47.2921635453542, 13.1293573856122 47.2915008214117, 13.1295086927211 47.2910562648452, 13.129710774923 47.2903857476218, 13.1298288246792 47.2899365684707, 13.1299807788247 47.2892599811991, 13.1300652700125 47.2888073338176, 13.130166708874 47.288126415217, 13.1302174265662 47.2876714627981, 13.1302680927892 47.2869879626038, 13.1302849088787 47.2865318741855, 13.1302846756094 47.2858475486508, 13.1302675491141 47.2853914961131, 13.1302164202913 47.284708103496, 13.1301653974377 47.28425325855, 13.1300635077482 47.2835725545958, 13.1299787218292 47.2831200857724, 13.1298263363276 47.2824438192037, 13.129708007338 47.2819948888542, 13.1295055207324 47.281324796881, 13.1294338704111 47.2811020193821, 13.1251870007152 47.2686512260069, 13.1250828819294 47.2683669767408, 13.1247502411554 47.2675179379, 13.124492922767 47.266939813965, 13.124051457185 47.2660559966596, 13.1238968238108 47.2657631323458, 13.1224711124055 47.2632027962734, 13.1223501342516 47.2629934628935, 13.1219757365063 47.2623686634892, 13.1217109312964 47.2619565281993, 13.1212911624159 47.2613453081642, 13.1209964511287 47.2609427381299, 13.1205323631439 47.2603466255029, 13.1202084842339 47.2599546271141, 13.1197012397769 47.25937511208, 13.1193490044785 47.2589946652406, 13.1187998738565 47.2584331964119, 13.11841978865 47.2580649069513, 13.1178289824825 47.2575218718767, 13.1174219232324 47.2571666992491, 13.1167919351991 47.2566445506383, 13.1163592741817 47.2563037434962, 13.1156916867377 47.2558037913436, 13.1152345106285 47.255478204702, 13.114531000323 47.2550017032576, 13.1140504571424 47.2546921539104, 13.1133127904026 47.2542402985373, 13.1130641320566 47.2540917816899, 13.1038402915746 47.2487195703093, 13.1035526662826 47.2485567743549, 13.1026798104894 47.2480768232073, 13.1020848307836 47.2477682331246, 13.1011734636957 47.2473227852723, 13.1005537748795 47.2470376830885, 13.0996068213827 47.2466281673661, 13.0989722329922 47.2463704422981, 13.0980165520393 47.2460066450453, 13.0973698221908 47.2457762237499, 13.0963860549694 47.2454490211727, 13.0957215964321 47.2452433390379, 13.0947127496508 47.2449537309083, 13.0943745056708 47.2448603656191, 13.0840383574983 47.2421195337925, 13.0837418991363 47.2420436855296, 13.0828486391572 47.2418234489268, 13.0822481220448 47.2416864120422, 13.0813403488944 47.2414956562303, 13.0807252801396 47.2413774525784, 13.0800106690124 47.2412527768586, 13.0815123630169 47.2406054922433, 13.0820707450135 47.2403645641987, 13.0828948161753 47.2399890039299, 13.0831672118995 47.2398614745407, 13.092749098006 47.2352534469402, 13.0930389306861 47.2351099904556, 13.0938997193616 47.2346716637926, 13.0944617617309 47.2343689482651, 13.0952864799451 47.2338994626274, 13.0958236574299 47.2335764276876, 13.0966098789939 47.2330771652098, 13.0971206114383 47.2327347618296, 13.0978660238215 47.2322071922366, 13.0983488091404 47.2318464283548, 13.0990512202741 47.2312921046231, 13.0992816845882 47.2311051669605, 13.104126979565 47.227064720318, 13.1043542244757 47.2268697700273, 13.1050239771495 47.226278610055, 13.1054543403061 47.2258762451731, 13.1060751838087 47.2252607724141, 13.1064722957247 47.2248428209374, 13.1070423329378 47.2242049190423, 13.1074049803442 47.2237726600695, 13.1079224699631 47.2231142812138, 13.1082495452732 47.2226690375488, 13.108712907107 47.2219921964465, 13.1090034117869 47.2215353305415, 13.1094112315613 47.2208420982685, 13.1095424876237 47.2206097424308, 13.1109739316233 47.2179673577827, 13.1110893838168 47.2177453438123, 13.1114229121013 47.2170763361676, 13.1116280898714 47.2166265305689, 13.1119098850636 47.2159465833904, 13.1120803061263 47.2154901030994, 13.1123096000231 47.214801078201, 13.1124448000496 47.2143391730996, 13.1126209683359 47.2136429570267, 13.1127205795138 47.2131768917653, 13.1128431434349 47.212475390625, 13.1129068954496 47.2120064411589, 13.112975523084 47.2113015753984, 13.1130032438334 47.2108310254916, 13.113017750962 47.2101247246382, 13.113009367001 47.2096538623496, 13.1129697175722 47.2089480597277, 13.1129519905755 47.2087129142386, 13.1115080842596 47.1934484675788, 13.1130332945489 47.1946610237001, 13.1135118039821 47.1950297879332, 13.1142515303438 47.1955692877148, 13.1147589529342 47.1959195865739, 13.1155409235473 47.1964305889331, 13.1160757374575 47.1967613708507, 13.1168976068457 47.1972423417662, 13.1174582077839 47.1975526137173, 13.1183175103507 47.1980021092548, 13.1189022163812 47.1982909397436, 13.119796373813 47.1987076104034, 13.1204034304107 47.1989741322699, 13.1213297594226 47.199356727051, 13.1216411034506 47.1994813688093, 13.1242428358038 47.2004904161024, 13.124538530784 47.2006016920846, 13.1254317581314 47.2009277009757, 13.1260352321463 47.2011345475856, 13.126951832254 47.2014288746619, 13.1275700903645 47.2016143352472, 13.1285076553745 47.2018762071374, 13.128821823062 47.201960762457, 13.1310807202061 47.2025459652311, 13.131394093714 47.2026240609261, 13.1323384289432 47.2028501843292, 13.1329733997884 47.202990004502, 13.1339333664717 47.2031832071429, 13.1345779409623 47.2033009079194, 13.1355510778572 47.203460694406, 13.136203603336 47.2035559739874, 13.1371874153058 47.2036819346064, 13.1378462186522 47.2037545486827, 13.1388381830865 47.2038463604534, 13.1395015750211 47.2038961228321, 13.1404991483275 47.2039535503377, 13.1411654277643 47.2039803334234, 13.1421660519158 47.2040032294172, 13.142833510336 47.2040069645395, 13.1438346194549 47.2039952703236, 13.144168255838 47.2039884888297, 13.1498769020649 47.2038229454025, 13.1502393913704 47.2038090113037, 13.151325829469 47.2037569988691, 13.1520484744733 47.2037087297606, 13.1531291490957 47.2036159898006, 13.1538468571586 47.2035406525262, 13.1549184900776 47.2034074663942, 13.1552748111225 47.2033597145566, 13.1609440525724 47.2025443694792, 13.1612880636997 47.2024915997693, 13.1623168277734 47.2023239052392, 13.1629980689629 47.2021996405052, 13.1640122977122 47.2019946741466, 13.1646828780854 47.2018457481138, 13.1656796711947 47.2016040961397, 13.1663376732045 47.2014309347376, 13.1673141804089 47.2011532882649, 13.1679577226122 47.2009563867227, 13.1689111518742 47.2006435397887, 13.1692269228233 47.2005363591479, 13.1732706038857 47.1991174522653, 13.173583611503 47.1990039613422, 13.1745157748308 47.1986549453614, 13.1751278523223 47.1984109658995, 13.1760312586056 47.1980283078317, 13.1766232880631 47.1977622607669, 13.1774953290869 47.1973470658737, 13.1780656013785 47.1970597196351, 13.1789037598139 47.1966131871083, 13.1794506288467 47.1963053716098, 13.1802524855293 47.1958287910967, 13.180774373008 47.195501395332, 13.1815376139283 47.1949961431995, 13.1820330139157 47.1946501126665, 13.1827554369013 47.1941176480142, 13.183222920165 47.1937539819766, 13.1839024412352 47.1931958424116, 13.1841252882783 47.1930077220018, 13.1859353268095 47.1914370502956, 13.1861599274242 47.1912364261768, 13.1868212412966 47.1906282351291, 13.1872453018337 47.1902145120623, 13.1878556701035 47.1895820219991, 13.1882451144242 47.1891527565752, 13.1888026205756 47.1884979567601, 13.1889839741163 47.188277915536, 13.1907540504326 47.186057949725, 13.1909313056506 47.1858277871126, 13.1914483609157 47.1851322152698, 13.191773315844 47.1846619177987, 13.1922307198502 47.1839471856794, 13.1925153832403 47.1834649044131, 13.1929116143864 47.1827333961324, 13.196493627911 47.1759107761844, 13.1967935489551 47.1753196245198, 13.1969800781891 47.1749224797176, 13.1990382771028 47.1702936482916, 13.1992258916124 47.1698478362281, 13.1992631463479 47.1697498780353, 13.1996525477768 47.1681330927906, 13.1996064727113 47.1664952983339, 13.1991264876696 47.1648907431818, 13.1887937483422 47.1414630944708, 13.1877405458703 47.1397438702987, 13.1861912516628 47.1382102844623, 13.1857828693381 47.1378843637804, 13.1853251221837 47.137537698628, 13.1846189672894 47.1370300676344, 13.1841354917867 47.1367001192806, 13.1833917087728 47.1362182383378, 13.1828838076355 47.1359058950203, 13.1821044004233 47.1354510613456, 13.1815734419341 47.1351571638701, 13.1807605100684 47.1347306018168, 13.1802079243954 47.1344559413005, 13.1793636573933 47.1340587990713, 13.1787909327413 47.1338041148197, 13.1779176042028 47.133437461386, 13.1773262828158 47.1332034389109, 13.1764262443117 47.1328682611443, 13.1758179183198 47.1326555303212, 13.1748935930724 47.1323527303459, 13.1745835643487 47.1322545298279, 13.1719974056522 47.1314630530612, 13.1716633708948 47.1313645850539, 13.1706554740505 47.1310786975576, 13.169976073274 47.1309008679607, 13.1689465451063 47.1306534700899, 13.1682537652253 47.1305015616578, 13.1672057463102 47.1302934079998, 13.1665017005746 47.1301678840633, 13.1654383876817 47.1299996094966, 13.1647252235796 47.1299008529075, 13.163649859954 47.1297729706721, 13.1629297526817 47.1297012826387, 13.1618456181871 47.1296141827766, 13.1611207640372 47.129569781949, 13.1600311651896 47.1295237301192, 13.1596676486045 47.1295118070765, 13.1555375557251 47.1294153266488, 13.155032069012 47.1294101423008, 13.1535156904015 47.1294144668791, 13.153010257721 47.1294225342816, 13.1460429373145 47.1296249815017, 13.1457318886209 47.1296365282297, 13.1447994561391 47.1296786976828, 13.1441789597611 47.1297168431016, 13.1432504229443 47.1297890779516, 13.1426332160292 47.1298472187675, 13.1417106491911 47.1299493576603, 13.1414037102024 47.1299858868463, 13.1391997892447 47.1302665307126, 13.1388556184162 47.1303136010755, 13.137826018585 47.1304641763174, 13.1371437466058 47.1305770108383, 13.1361272559664 47.1307648191959, 13.1354546875573 47.1309023070581, 13.1344541881635 47.1311268161083, 13.1337932303133 47.1312885675383, 13.1328115590537 47.1315491407978, 13.1321640859557 47.1317346972242, 13.1312040265362 47.132030595947, 13.1305718742927 47.1322394312947, 13.1296361493669 47.132569816559, 13.1290211107955 47.1328013387363, 13.1281123742649 47.1331652738147, 13.1217548623607 47.1357773106208, 13.1208885667095 47.1361363834362, 13.1203201756221 47.1363857864975, 13.119481857514 47.1367746774864, 13.1189328579346 47.1370436256638, 13.1181247177946 47.1374613145858, 13.1175965508391 47.1377491022893, 13.1168207101689 47.1381944933096, 13.1163147624623 47.1385003654944, 13.1155732582786 47.1389722900496, 13.1150908583272 47.1392954441856, 13.1143856378173 47.1397926640407, 13.1141536655559 47.139960458214, 13.1120264398854 47.1415390699295, 13.1117921508412 47.1417176339449, 13.1110998226153 47.142259610597, 13.1106524882144 47.1426291799676, 13.1100032890839 47.1431955188131, 13.1095853315863 47.1435808004657, 13.1089811029388 47.1441698972482, 13.1085937079908 47.1445697997733, 13.104476591311 47.1490601935577, 13.1041130670208 47.1494653952869, 13.1035914149298 47.1500827902613, 13.1032596455159 47.1505004954432, 13.102786336391 47.1511357800795, 13.1024872470019 47.1515648263764, 13.1020636009415 47.1522162328306, 13.1019265747958 47.1524346367906, 13.1001923313343 47.1553024655086, 13.1000642950065 47.1555223128275, 13.0996929231843 47.1561851746699, 13.0994624107871 47.1566313563783, 13.0991424848854 47.1573065778502, 13.0989465771194 47.1577603808004, 13.0986789834186 47.1584460984455, 13.0985182232374 47.1589062702029, 13.0983037037446 47.1596005914734, 13.0981785371903 47.1600658619459, 13.0980176875552 47.1607668704208, 13.0979284625052 47.1612359553536, 13.0978217303383 47.161941716024, 13.0977906773458 47.1621772845586, 13.0973748750695 47.165874517243, 13.0973536083823 47.166100931773, 13.0973023500101 47.1667806047681, 13.0972849089913 47.1672341487275, 13.0972838617966 47.1679146754545, 13.0972999075074 47.1683682122612, 13.0973490774151 47.1690478637767, 13.0973985712633 47.1695002411408, 13.0974978365997 47.1701772906121, 13.0975806549921 47.1706273591113, 13.0975978453148 47.1707049153037, 13.0959539109951 47.1691614239548, 13.0954609791554 47.168705718914, 13.0952943328394 47.1685549968026, 13.0895992972561 47.1635145382936, 13.0892757978983 47.163239521272, 13.0882819835263 47.1624277972948, 13.0879429400271 47.1621616648824, 13.0846206656056 47.1596547913717, 13.0843936024522 47.1594877538855, 13.0837032244124 47.1589926216304, 13.083470035543 47.1588295709147, 13.0795017100327 47.1561241295488, 13.0792778693403 47.1559750964846, 13.0789437848309 47.155757889205, 13.0785986707443 47.1555335079281, 13.0781357614238 47.1552465463198, 13.0774266232122 47.1548274923297, 13.0769442812235 47.1545558725483, 13.0762068009823 47.154160296512, 13.0757061128958 47.1539046300259, 13.075114002122 47.1536170005007, 13.0749419518244 47.1535334224424, 13.0744240453803 47.1532942847827, 13.07406180637 47.1531354561985, 13.0715296560497 47.1522722333529, 13.0480649158675 47.1463241630182, 13.0457674976298 47.145898334036, 13.0433948769535 47.1457620316462, 13.0354971746523 47.1457973316516, 13.0351098827337 47.1458029384606, 13.0339544802779 47.1458312703227, 13.0339485965291 47.1458314145678, 13.0331755259753 47.1458659321465, 13.032018601522 47.1459409640862, 13.0316334899586 47.1459698450765, 13.0202656743889 47.1469374386777, 13.0198867890341 47.1469734884472, 13.0187842430811 47.1470895489397, 13.0168638421984 47.147393528961, 12.999958577094 47.1509958880181, 12.9979464185372 47.1515522335698, 12.9971471664709 47.1518274613432, 12.9965844822993 47.1520330203675, 12.9957515912797 47.152355206272, 12.9954758568507 47.1524648935729, 12.9886534261181 47.1552544577307, 12.9883946503991 47.1553630330746, 12.9876238995207 47.1556948139892, 12.9871176390316 47.1559240166324, 12.986370011065 47.1562796614614, 12.985879698558 47.156524526263, 12.985156778992 47.1569032811963, 12.9849179286959 47.1570314255927, 12.9766084172722 47.161595315108, 12.9763327594169 47.1617509366827, 12.9755151817919 47.1622253611884, 12.9749828608909 47.1625516079927, 12.9742040629655 47.1630555643515, 12.9736983684604 47.1634010124784, 12.9729606407661 47.1639330197706, 12.9724830601041 47.1642966540653, 12.9717885728109 47.1648551488611, 12.9713405110408 47.1652359006693, 12.9706913075706 47.1658192416117, 12.9702740832031 47.1662159919139, 12.9696720742119 47.16682246453, 12.9694754123505 47.1670264761874, 12.9605461180232 47.1765377605905, 12.960323094429 47.1767829932301, 12.9596714352325 47.1775258044331, 12.9592604348878 47.1780302411158, 12.9586797273484 47.1787999631553, 12.9584921736621 47.1790586494356, 12.9552619927352 47.1836988674357, 12.9551107853924 47.1839239826108, 12.9546708349368 47.1846034450612, 12.9543958749602 47.1850617377301, 12.9540112582264 47.1857566336474, 12.9537735903131 47.1862245186513, 12.9534454738229 47.1869327471926, 12.9532458190618 47.1874088099511, 12.9529751987313 47.1881282298206, 12.9528141634129 47.1886110309314, 12.952601861499 47.1893394668465, 12.9525359833414 47.1895829387046, 12.9515000011456 47.1937297320383, 12.9514468691546 47.1939603948553, 12.9513006412401 47.1946536659295, 12.9512207448635 47.1951174012557, 12.9511273651931 47.1958148683051, 12.9510827977659 47.1962807762896, 12.9510425210683 47.196980563113, 12.9510334048479 47.1974473904115, 12.9510463430335 47.1981476144409, 12.9510550913748 47.1983809803479, 12.9512630368205 47.20206037928, 12.9512820191935 47.2023077631044, 12.9513539227233 47.2030492259649, 12.9514217781261 47.2035424294128, 12.9515533648127 47.2042800163677, 12.9516608925107 47.2047698896216, 12.9518517678128 47.205501365641, 12.9519203130275 47.2057445889741, 12.9530922314386 47.2096145184236, 12.9531571560801 47.2098170841246, 12.953362170885 47.2104231600775, 12.9535124624649 47.210824942341, 12.9537582032772 47.2114238930506, 12.9538434909221 47.2116228961712, 12.9556624423083 47.2156919501405, 12.9557034878648 47.215782064937, 12.9558287007495 47.2160519594117, 12.955871130455 47.216141774264, 12.9563513459019 47.2171402892114, 12.9580322171026 47.2206350024395, 12.9581315153576 47.2208335852978, 12.9584395607879 47.2214268738668, 12.9586583988044 47.2218190127555, 12.9590066894198 47.2224018208048, 12.9592521129018 47.2227865479159, 12.9596398929961 47.2233576071831, 12.9597724108224 47.2235469288627, 12.9625319312989 47.2273734517064, 12.9626713679266 47.2275612028186, 12.9628969850759 47.2278563669733, 12.9630992918801 47.2281210319641, 12.9633973105142 47.2284895848224, 12.9636448581979 47.2287794501188, 12.9638631981571 47.2290351114646, 12.9641861932454 47.2293937282796, 12.9646890259968 47.2299237574398, 12.9648596719838 47.2300990932193, 12.9665447837628 47.2317871921688, 12.9667648742148 47.2320009175708, 12.9674386757041 47.2326354069302, 12.9679057183778 47.2330493089015, 12.9686324546712 47.2336560016364, 12.9688790134702 47.2338558289001, 12.9742034659412 47.2380454367079, 12.9744462506077 47.2382311904147, 12.974846777652 47.238529213934, 12.9749758888807 47.2386252817434, 12.9617359924504 47.2389871989155, 12.9591728139441 47.2392301526082, 12.9534477602131 47.2401019446002, 12.9510025519155 47.2406809926529, 12.9487693102869 47.2415740283765, 12.9434806996501 47.2439846107548, 12.9415450169541 47.2451572358197, 12.939981466028 47.2465645130682, 12.9388501473069 47.2481523782551, 12.9381945683011 47.2498598240954, 12.9380399668262 47.2516212426876, 12.9385468930789 47.2606148029064, 12.9390374303172 47.2662095695099, 12.9393899454939 47.2679572551984, 12.9402360728614 47.2696240523876, 12.9415433357611 47.2711458960809, 12.9432615212514 47.2724642874294, 12.9488766290057 47.2757723070764, 12.9509399625941 47.2768364541191, 12.9532688828307 47.2776055379316, 12.9571694928788 47.2784540121976, 12.9596745442187 47.2788983733458, 12.9622593178547 47.2790010114061, 12.966818863295 47.2791152567573, 12.9800175541131 47.2787540848146, 12.982582577654 47.2785106349103, 12.984841874047 47.2782099535511, 12.9872884608184 47.2776301480115, 12.9902196914469 47.2768335909286, 12.9924537223949 47.275939715324, 12.9943893896088 47.2747662019459, 12.9959523009579 47.2733581655225, 12.9977382732987 47.270922455442, 12.9988682765343 47.2693340026144, 12.9995220968003 47.2676262170713, 12.9997962665176 47.2663060957568, 12.9999488105751 47.2645446134711, 13.0000001619048 47.2623953803533, 12.999482610232 47.2534021709733, 12.9991281938143 47.2516546770908, 12.9988980603328 47.250674063192, 12.9993397316274 47.2508426264209, 13.0003046342382 47.2511874192984, 13.0009569674942 47.2514051111334, 13.0019483226705 47.2517131460821, 13.0026172952003 47.251906011771, 13.00363209663 47.2521763544496, 13.004315679664 47.2523438089785, 13.0053508496651 47.252575639355, 13.0060469699566 47.2527171747777, 13.0070993688398 47.2529097896259, 13.0078059149745 47.2530249766101, 13.008376501963 47.253106740373, 13.0111096515082 47.2532990569521, 13.0117422110807 47.2532984304385))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[13.0117422110807, 47.2532984304385], [13.0109557068142, 47.254009789083], [13.0107752591987, 47.2541769610345], [13.0102424497488, 47.2546826534151], [13.0098987176219, 47.2550252611081], [13.0094006047855, 47.255547119068], [13.009077005177, 47.2559040389125], [13.0086049767628, 47.2564528158363], [13.0083030003715, 47.25682360483], [13.0078693511756, 47.2573868866736], [13.007728040452, 47.2575758043488], [13.0059603717661, 47.2600091684905], [13.005804224074, 47.2602317150647], [13.0053492673956, 47.2609035897787], [13.0050640594211, 47.2613569846152], [13.0046637140165, 47.2620447842979], [13.0044153288962, 47.2625081117431], [13.0040707994114, 47.263209773073], [13.0038623632537, 47.2636757524376], [13.0035811189863, 47.2643713737725], [13.0034118549333, 47.2648383534428], [13.0031854891867, 47.2655431713197], [13.0030530405109, 47.266015613528], [13.0028822030054, 47.266727616593], [13.0028299071741, 47.2669654652872], [13.002089216781, 47.2706709424591], [13.0020547466027, 47.2708579941077], [13.0019599661623, 47.2714198177674], [13.0019082994494, 47.2717951763575], [13.0018481142355, 47.2723591815626], [13.0018188497421, 47.2727517041873], [13.0017928026884, 47.2733650376873], [13.0017890759562, 47.2737740780171], [13.0018039463422, 47.2743875486483], [13.0018123131475, 47.2745919974575], [13.001986902687, 47.277621873931], [13.0020063920201, 47.2778715480311], [13.0020801185223, 47.2786198589135], [13.0021495910592, 47.2791175920326], [13.00228420289, 47.279861904204], [13.0023920498624, 47.2803482608115], [13.0025798988259, 47.2810625728673], [13.0027238812455, 47.281536298203], [13.0029678244136, 47.2822426484127], [13.0030537872362, 47.2824773494136], [13.003801406404, 47.2844075589245], [13.003889647517, 47.284624341555], [13.0041662705732, 47.2852723221347], [13.0043664900853, 47.2857010184736], [13.0046903385075, 47.286338724736], [13.0049217823116, 47.2867600375295], [13.0052920489101, 47.2873858743734], [13.0055541399451, 47.2877987497551], [13.005969901262, 47.2884111516738], [13.0062631523234, 47.2888160709585], [13.0067270372653, 47.2894179869417], [13.007051049908, 47.2898138152512], [13.007558894874, 47.2903990070929], [13.0079117942115, 47.2907831868065], [13.0084623116596, 47.2913501680784], [13.0088432028416, 47.2917217233248], [13.0094349966102, 47.2922690537725], [13.0096356410214, 47.2924498006438], [13.0113117747806, 47.2939207157903], [13.0115002082231, 47.294082208647], [13.0120736047939, 47.2945621986946], [13.0124665586943, 47.294876124947], [13.0130717138867, 47.2953376657475], [13.0134854214104, 47.2956389652515], [13.0141210624139, 47.2960810850123], [13.014555594582, 47.296369720466], [13.0152232678037, 47.2967932348295], [13.0156778305361, 47.2970685093007], [13.0163734837272, 47.2974705990839], [13.0246848742487, 47.302063198776], [13.0249953689347, 47.3022342634472], [13.0254603022191, 47.3024825754378], [13.0256161886567, 47.3025645577632], [13.027102913895, 47.3033344196359], [13.0290276432866, 47.3041629098109], [13.0311331794706, 47.3047537157857], [13.0333569193522, 47.3050892700432], [13.0356327399765, 47.3051595947411], [13.1140273930063, 47.3029420512762], [13.1164394113876, 47.302720195483], [13.1187513474527, 47.3022008790153], [13.1208847688092, 47.3014017208412], [13.1227673079562, 47.3003498330316], [13.1243351192956, 47.2990808997251], [13.1246558409492, 47.2987666486936], [13.1250239778588, 47.2983857283054], [13.1255547751816, 47.297805024547], [13.1258941413787, 47.2974119216384], [13.1263811166947, 47.2968136950087], [13.1266908430393, 47.2964094182733], [13.1271327493873, 47.2957952037642], [13.1274120429345, 47.2953807905072], [13.1278077491987, 47.2947521640412], [13.1280558952193, 47.2943286775115], [13.1284043890083, 47.2936872518909], [13.1285145342804, 47.2934765202075], [13.1285145342849, 47.2934765201985], [13.1286208515023, 47.2932555641332], [13.1289215137842, 47.2926023367855], [13.1291056914925, 47.2921635453542], [13.1293573856122, 47.2915008214117], [13.1295086927211, 47.2910562648452], [13.129710774923, 47.2903857476218], [13.1298288246792, 47.2899365684707], [13.1299807788247, 47.2892599811991], [13.1300652700125, 47.2888073338176], [13.130166708874, 47.288126415217], [13.1302174265662, 47.2876714627981], [13.1302680927892, 47.2869879626038], [13.1302849088787, 47.2865318741855], [13.1302846756094, 47.2858475486508], [13.1302675491141, 47.2853914961131], [13.1302164202913, 47.284708103496], [13.1301653974377, 47.28425325855], [13.1300635077482, 47.2835725545958], [13.1299787218292, 47.2831200857724], [13.1298263363276, 47.2824438192037], [13.129708007338, 47.2819948888542], [13.1295055207324, 47.281324796881], [13.1294338704111, 47.2811020193821], [13.1251870007152, 47.2686512260069], [13.1250828819294, 47.2683669767408], [13.1247502411554, 47.2675179379], [13.124492922767, 47.266939813965], [13.124051457185, 47.2660559966596], [13.1238968238108, 47.2657631323458], [13.1224711124055, 47.2632027962734], [13.1223501342516, 47.2629934628935], [13.1219757365063, 47.2623686634892], [13.1217109312964, 47.2619565281993], [13.1212911624159, 47.2613453081642], [13.1209964511287, 47.2609427381299], [13.1205323631439, 47.2603466255029], [13.1202084842339, 47.2599546271141], [13.1197012397769, 47.25937511208], [13.1193490044785, 47.2589946652406], [13.1187998738565, 47.2584331964119], [13.11841978865, 47.2580649069513], [13.1178289824825, 47.2575218718767], [13.1174219232324, 47.2571666992491], [13.1167919351991, 47.2566445506383], [13.1163592741817, 47.2563037434962], [13.1156916867377, 47.2558037913436], [13.1152345106285, 47.255478204702], [13.114531000323, 47.2550017032576], [13.1140504571424, 47.2546921539104], [13.1133127904026, 47.2542402985373], [13.1130641320566, 47.2540917816899], [13.1038402915746, 47.2487195703093], [13.1035526662826, 47.2485567743549], [13.1026798104894, 47.2480768232073], [13.1020848307836, 47.2477682331246], [13.1011734636957, 47.2473227852723], [13.1005537748795, 47.2470376830885], [13.0996068213827, 47.2466281673661], [13.0989722329922, 47.2463704422981], [13.0980165520393, 47.2460066450453], [13.0973698221908, 47.2457762237499], [13.0963860549694, 47.2454490211727], [13.0957215964321, 47.2452433390379], [13.0947127496508, 47.2449537309083], [13.0943745056708, 47.2448603656191], [13.0840383574983, 47.2421195337925], [13.0837418991363, 47.2420436855296], [13.0828486391572, 47.2418234489268], [13.0822481220448, 47.2416864120422], [13.0813403488944, 47.2414956562303], [13.0807252801396, 47.2413774525784], [13.0800106690124, 47.2412527768586], [13.0815123630169, 47.2406054922433], [13.0820707450135, 47.2403645641987], [13.0828948161753, 47.2399890039299], [13.0831672118995, 47.2398614745407], [13.092749098006, 47.2352534469402], [13.0930389306861, 47.2351099904556], [13.0938997193616, 47.2346716637926], [13.0944617617309, 47.2343689482651], [13.0952864799451, 47.2338994626274], [13.0958236574299, 47.2335764276876], [13.0966098789939, 47.2330771652098], [13.0971206114383, 47.2327347618296], [13.0978660238215, 47.2322071922366], [13.0983488091404, 47.2318464283548], [13.0990512202741, 47.2312921046231], [13.0992816845882, 47.2311051669605], [13.104126979565, 47.227064720318], [13.1043542244757, 47.2268697700273], [13.1050239771495, 47.226278610055], [13.1054543403061, 47.2258762451731], [13.1060751838087, 47.2252607724141], [13.1064722957247, 47.2248428209374], [13.1070423329378, 47.2242049190423], [13.1074049803442, 47.2237726600695], [13.1079224699631, 47.2231142812138], [13.1082495452732, 47.2226690375488], [13.108712907107, 47.2219921964465], [13.1090034117869, 47.2215353305415], [13.1094112315613, 47.2208420982685], [13.1095424876237, 47.2206097424308], [13.1109739316233, 47.2179673577827], [13.1110893838168, 47.2177453438123], [13.1114229121013, 47.2170763361676], [13.1116280898714, 47.2166265305689], [13.1119098850636, 47.2159465833904], [13.1120803061263, 47.2154901030994], [13.1123096000231, 47.214801078201], [13.1124448000496, 47.2143391730996], [13.1126209683359, 47.2136429570267], [13.1127205795138, 47.2131768917653], [13.1128431434349, 47.212475390625], [13.1129068954496, 47.2120064411589], [13.112975523084, 47.2113015753984], [13.1130032438334, 47.2108310254916], [13.113017750962, 47.2101247246382], [13.113009367001, 47.2096538623496], [13.1129697175722, 47.2089480597277], [13.1129519905755, 47.2087129142386], [13.1115080842596, 47.1934484675788], [13.1130332945489, 47.1946610237001], [13.1135118039821, 47.1950297879332], [13.1142515303438, 47.1955692877148], [13.1147589529342, 47.1959195865739], [13.1155409235473, 47.1964305889331], [13.1160757374575, 47.1967613708507], [13.1168976068457, 47.1972423417662], [13.1174582077839, 47.1975526137173], [13.1183175103507, 47.1980021092548], [13.1189022163812, 47.1982909397436], [13.119796373813, 47.1987076104034], [13.1204034304107, 47.1989741322699], [13.1213297594226, 47.199356727051], [13.1216411034506, 47.1994813688093], [13.1242428358038, 47.2004904161024], [13.124538530784, 47.2006016920846], [13.1254317581314, 47.2009277009757], [13.1260352321463, 47.2011345475856], [13.126951832254, 47.2014288746619], [13.1275700903645, 47.2016143352472], [13.1285076553745, 47.2018762071374], [13.128821823062, 47.201960762457], [13.1310807202061, 47.2025459652311], [13.131394093714, 47.2026240609261], [13.1323384289432, 47.2028501843292], [13.1329733997884, 47.202990004502], [13.1339333664717, 47.2031832071429], [13.1345779409623, 47.2033009079194], [13.1355510778572, 47.203460694406], [13.136203603336, 47.2035559739874], [13.1371874153058, 47.2036819346064], [13.1378462186522, 47.2037545486827], [13.1388381830865, 47.2038463604534], [13.1395015750211, 47.2038961228321], [13.1404991483275, 47.2039535503377], [13.1411654277643, 47.2039803334234], [13.1421660519158, 47.2040032294172], [13.142833510336, 47.2040069645395], [13.1438346194549, 47.2039952703236], [13.144168255838, 47.2039884888297], [13.1498769020649, 47.2038229454025], [13.1502393913704, 47.2038090113037], [13.151325829469, 47.2037569988691], [13.1520484744733, 47.2037087297606], [13.1531291490957, 47.2036159898006], [13.1538468571586, 47.2035406525262], [13.1549184900776, 47.2034074663942], [13.1552748111225, 47.2033597145566], [13.1609440525724, 47.2025443694792], [13.1612880636997, 47.2024915997693], [13.1623168277734, 47.2023239052392], [13.1629980689629, 47.2021996405052], [13.1640122977122, 47.2019946741466], [13.1646828780854, 47.2018457481138], [13.1656796711947, 47.2016040961397], [13.1663376732045, 47.2014309347376], [13.1673141804089, 47.2011532882649], [13.1679577226122, 47.2009563867227], [13.1689111518742, 47.2006435397887], [13.1692269228233, 47.2005363591479], [13.1732706038857, 47.1991174522653], [13.173583611503, 47.1990039613422], [13.1745157748308, 47.1986549453614], [13.1751278523223, 47.1984109658995], [13.1760312586056, 47.1980283078317], [13.1766232880631, 47.1977622607669], [13.1774953290869, 47.1973470658737], [13.1780656013785, 47.1970597196351], [13.1789037598139, 47.1966131871083], [13.1794506288467, 47.1963053716098], [13.1802524855293, 47.1958287910967], [13.180774373008, 47.195501395332], [13.1815376139283, 47.1949961431995], [13.1820330139157, 47.1946501126665], [13.1827554369013, 47.1941176480142], [13.183222920165, 47.1937539819766], [13.1839024412352, 47.1931958424116], [13.1841252882783, 47.1930077220018], [13.1859353268095, 47.1914370502956], [13.1861599274242, 47.1912364261768], [13.1868212412966, 47.1906282351291], [13.1872453018337, 47.1902145120623], [13.1878556701035, 47.1895820219991], [13.1882451144242, 47.1891527565752], [13.1888026205756, 47.1884979567601], [13.1889839741163, 47.188277915536], [13.1907540504326, 47.186057949725], [13.1909313056506, 47.1858277871126], [13.1914483609157, 47.1851322152698], [13.191773315844, 47.1846619177987], [13.1922307198502, 47.1839471856794], [13.1925153832403, 47.1834649044131], [13.1929116143864, 47.1827333961324], [13.196493627911, 47.1759107761844], [13.1967935489551, 47.1753196245198], [13.1969800781891, 47.1749224797176], [13.1990382771028, 47.1702936482916], [13.1992258916124, 47.1698478362281], [13.1992631463479, 47.1697498780353], [13.1996525477768, 47.1681330927906], [13.1996064727113, 47.1664952983339], [13.1991264876696, 47.1648907431818], [13.1887937483422, 47.1414630944708], [13.1877405458703, 47.1397438702987], [13.1861912516628, 47.1382102844623], [13.1857828693381, 47.1378843637804], [13.1853251221837, 47.137537698628], [13.1846189672894, 47.1370300676344], [13.1841354917867, 47.1367001192806], [13.1833917087728, 47.1362182383378], [13.1828838076355, 47.1359058950203], [13.1821044004233, 47.1354510613456], [13.1815734419341, 47.1351571638701], [13.1807605100684, 47.1347306018168], [13.1802079243954, 47.1344559413005], [13.1793636573933, 47.1340587990713], [13.1787909327413, 47.1338041148197], [13.1779176042028, 47.133437461386], [13.1773262828158, 47.1332034389109], [13.1764262443117, 47.1328682611443], [13.1758179183198, 47.1326555303212], [13.1748935930724, 47.1323527303459], [13.1745835643487, 47.1322545298279], [13.1719974056522, 47.1314630530612], [13.1716633708948, 47.1313645850539], [13.1706554740505, 47.1310786975576], [13.169976073274, 47.1309008679607], [13.1689465451063, 47.1306534700899], [13.1682537652253, 47.1305015616578], [13.1672057463102, 47.1302934079998], [13.1665017005746, 47.1301678840633], [13.1654383876817, 47.1299996094966], [13.1647252235796, 47.1299008529075], [13.163649859954, 47.1297729706721], [13.1629297526817, 47.1297012826387], [13.1618456181871, 47.1296141827766], [13.1611207640372, 47.129569781949], [13.1600311651896, 47.1295237301192], [13.1596676486045, 47.1295118070765], [13.1555375557251, 47.1294153266488], [13.155032069012, 47.1294101423008], [13.1535156904015, 47.1294144668791], [13.153010257721, 47.1294225342816], [13.1460429373145, 47.1296249815017], [13.1457318886209, 47.1296365282297], [13.1447994561391, 47.1296786976828], [13.1441789597611, 47.1297168431016], [13.1432504229443, 47.1297890779516], [13.1426332160292, 47.1298472187675], [13.1417106491911, 47.1299493576603], [13.1414037102024, 47.1299858868463], [13.1391997892447, 47.1302665307126], [13.1388556184162, 47.1303136010755], [13.137826018585, 47.1304641763174], [13.1371437466058, 47.1305770108383], [13.1361272559664, 47.1307648191959], [13.1354546875573, 47.1309023070581], [13.1344541881635, 47.1311268161083], [13.1337932303133, 47.1312885675383], [13.1328115590537, 47.1315491407978], [13.1321640859557, 47.1317346972242], [13.1312040265362, 47.132030595947], [13.1305718742927, 47.1322394312947], [13.1296361493669, 47.132569816559], [13.1290211107955, 47.1328013387363], [13.1281123742649, 47.1331652738147], [13.1217548623607, 47.1357773106208], [13.1208885667095, 47.1361363834362], [13.1203201756221, 47.1363857864975], [13.119481857514, 47.1367746774864], [13.1189328579346, 47.1370436256638], [13.1181247177946, 47.1374613145858], [13.1175965508391, 47.1377491022893], [13.1168207101689, 47.1381944933096], [13.1163147624623, 47.1385003654944], [13.1155732582786, 47.1389722900496], [13.1150908583272, 47.1392954441856], [13.1143856378173, 47.1397926640407], [13.1141536655559, 47.139960458214], [13.1120264398854, 47.1415390699295], [13.1117921508412, 47.1417176339449], [13.1110998226153, 47.142259610597], [13.1106524882144, 47.1426291799676], [13.1100032890839, 47.1431955188131], [13.1095853315863, 47.1435808004657], [13.1089811029388, 47.1441698972482], [13.1085937079908, 47.1445697997733], [13.104476591311, 47.1490601935577], [13.1041130670208, 47.1494653952869], [13.1035914149298, 47.1500827902613], [13.1032596455159, 47.1505004954432], [13.102786336391, 47.1511357800795], [13.1024872470019, 47.1515648263764], [13.1020636009415, 47.1522162328306], [13.1019265747958, 47.1524346367906], [13.1001923313343, 47.1553024655086], [13.1000642950065, 47.1555223128275], [13.0996929231843, 47.1561851746699], [13.0994624107871, 47.1566313563783], [13.0991424848854, 47.1573065778502], [13.0989465771194, 47.1577603808004], [13.0986789834186, 47.1584460984455], [13.0985182232374, 47.1589062702029], [13.0983037037446, 47.1596005914734], [13.0981785371903, 47.1600658619459], [13.0980176875552, 47.1607668704208], [13.0979284625052, 47.1612359553536], [13.0978217303383, 47.161941716024], [13.0977906773458, 47.1621772845586], [13.0973748750695, 47.165874517243], [13.0973536083823, 47.166100931773], [13.0973023500101, 47.1667806047681], [13.0972849089913, 47.1672341487275], [13.0972838617966, 47.1679146754545], [13.0972999075074, 47.1683682122612], [13.0973490774151, 47.1690478637767], [13.0973985712633, 47.1695002411408], [13.0974978365997, 47.1701772906121], [13.0975806549921, 47.1706273591113], [13.0975978453148, 47.1707049153037], [13.0959539109951, 47.1691614239548], [13.0954609791554, 47.168705718914], [13.0952943328394, 47.1685549968026], [13.0895992972561, 47.1635145382936], [13.0892757978983, 47.163239521272], [13.0882819835263, 47.1624277972948], [13.0879429400271, 47.1621616648824], [13.0846206656056, 47.1596547913717], [13.0843936024522, 47.1594877538855], [13.0837032244124, 47.1589926216304], [13.083470035543, 47.1588295709147], [13.0795017100327, 47.1561241295488], [13.0792778693403, 47.1559750964846], [13.0789437848309, 47.155757889205], [13.0785986707443, 47.1555335079281], [13.0781357614238, 47.1552465463198], [13.0774266232122, 47.1548274923297], [13.0769442812235, 47.1545558725483], [13.0762068009823, 47.154160296512], [13.0757061128958, 47.1539046300259], [13.075114002122, 47.1536170005007], [13.0749419518244, 47.1535334224424], [13.0744240453803, 47.1532942847827], [13.07406180637, 47.1531354561985], [13.0715296560497, 47.1522722333529], [13.0480649158675, 47.1463241630182], [13.0457674976298, 47.145898334036], [13.0433948769535, 47.1457620316462], [13.0354971746523, 47.1457973316516], [13.0351098827337, 47.1458029384606], [13.0339544802779, 47.1458312703227], [13.0339485965291, 47.1458314145678], [13.0331755259753, 47.1458659321465], [13.032018601522, 47.1459409640862], [13.0316334899586, 47.1459698450765], [13.0202656743889, 47.1469374386777], [13.0198867890341, 47.1469734884472], [13.0187842430811, 47.1470895489397], [13.0168638421984, 47.147393528961], [12.999958577094, 47.1509958880181], [12.9979464185372, 47.1515522335698], [12.9971471664709, 47.1518274613432], [12.9965844822993, 47.1520330203675], [12.9957515912797, 47.152355206272], [12.9954758568507, 47.1524648935729], [12.9886534261181, 47.1552544577307], [12.9883946503991, 47.1553630330746], [12.9876238995207, 47.1556948139892], [12.9871176390316, 47.1559240166324], [12.986370011065, 47.1562796614614], [12.985879698558, 47.156524526263], [12.985156778992, 47.1569032811963], [12.9849179286959, 47.1570314255927], [12.9766084172722, 47.161595315108], [12.9763327594169, 47.1617509366827], [12.9755151817919, 47.1622253611884], [12.9749828608909, 47.1625516079927], [12.9742040629655, 47.1630555643515], [12.9736983684604, 47.1634010124784], [12.9729606407661, 47.1639330197706], [12.9724830601041, 47.1642966540653], [12.9717885728109, 47.1648551488611], [12.9713405110408, 47.1652359006693], [12.9706913075706, 47.1658192416117], [12.9702740832031, 47.1662159919139], [12.9696720742119, 47.16682246453], [12.9694754123505, 47.1670264761874], [12.9605461180232, 47.1765377605905], [12.960323094429, 47.1767829932301], [12.9596714352325, 47.1775258044331], [12.9592604348878, 47.1780302411158], [12.9586797273484, 47.1787999631553], [12.9584921736621, 47.1790586494356], [12.9552619927352, 47.1836988674357], [12.9551107853924, 47.1839239826108], [12.9546708349368, 47.1846034450612], [12.9543958749602, 47.1850617377301], [12.9540112582264, 47.1857566336474], [12.9537735903131, 47.1862245186513], [12.9534454738229, 47.1869327471926], [12.9532458190618, 47.1874088099511], [12.9529751987313, 47.1881282298206], [12.9528141634129, 47.1886110309314], [12.952601861499, 47.1893394668465], [12.9525359833414, 47.1895829387046], [12.9515000011456, 47.1937297320383], [12.9514468691546, 47.1939603948553], [12.9513006412401, 47.1946536659295], [12.9512207448635, 47.1951174012557], [12.9511273651931, 47.1958148683051], [12.9510827977659, 47.1962807762896], [12.9510425210683, 47.196980563113], [12.9510334048479, 47.1974473904115], [12.9510463430335, 47.1981476144409], [12.9510550913748, 47.1983809803479], [12.9512630368205, 47.20206037928], [12.9512820191935, 47.2023077631044], [12.9513539227233, 47.2030492259649], [12.9514217781261, 47.2035424294128], [12.9515533648127, 47.2042800163677], [12.9516608925107, 47.2047698896216], [12.9518517678128, 47.205501365641], [12.9519203130275, 47.2057445889741], [12.9530922314386, 47.2096145184236], [12.9531571560801, 47.2098170841246], [12.953362170885, 47.2104231600775], [12.9535124624649, 47.210824942341], [12.9537582032772, 47.2114238930506], [12.9538434909221, 47.2116228961712], [12.9556624423083, 47.2156919501405], [12.9557034878648, 47.215782064937], [12.9558287007495, 47.2160519594117], [12.955871130455, 47.216141774264], [12.9563513459019, 47.2171402892114], [12.9580322171026, 47.2206350024395], [12.9581315153576, 47.2208335852978], [12.9584395607879, 47.2214268738668], [12.9586583988044, 47.2218190127555], [12.9590066894198, 47.2224018208048], [12.9592521129018, 47.2227865479159], [12.9596398929961, 47.2233576071831], [12.9597724108224, 47.2235469288627], [12.9625319312989, 47.2273734517064], [12.9626713679266, 47.2275612028186], [12.9628969850759, 47.2278563669733], [12.9630992918801, 47.2281210319641], [12.9633973105142, 47.2284895848224], [12.9636448581979, 47.2287794501188], [12.9638631981571, 47.2290351114646], [12.9641861932454, 47.2293937282796], [12.9646890259968, 47.2299237574398], [12.9648596719838, 47.2300990932193], [12.9665447837628, 47.2317871921688], [12.9667648742148, 47.2320009175708], [12.9674386757041, 47.2326354069302], [12.9679057183778, 47.2330493089015], [12.9686324546712, 47.2336560016364], [12.9688790134702, 47.2338558289001], [12.9742034659412, 47.2380454367079], [12.9744462506077, 47.2382311904147], [12.974846777652, 47.238529213934], [12.9749758888807, 47.2386252817434], [12.9617359924504, 47.2389871989155], [12.9591728139441, 47.2392301526082], [12.9534477602131, 47.2401019446002], [12.9510025519155, 47.2406809926529], [12.9487693102869, 47.2415740283765], [12.9434806996501, 47.2439846107548], [12.9415450169541, 47.2451572358197], [12.939981466028, 47.2465645130682], [12.9388501473069, 47.2481523782551], [12.9381945683011, 47.2498598240954], [12.9380399668262, 47.2516212426876], [12.9385468930789, 47.2606148029064], [12.9390374303172, 47.2662095695099], [12.9393899454939, 47.2679572551984], [12.9402360728614, 47.2696240523876], [12.9415433357611, 47.2711458960809], [12.9432615212514, 47.2724642874294], [12.9488766290057, 47.2757723070764], [12.9509399625941, 47.2768364541191], [12.9532688828307, 47.2776055379316], [12.9571694928788, 47.2784540121976], [12.9596745442187, 47.2788983733458], [12.9622593178547, 47.2790010114061], [12.966818863295, 47.2791152567573], [12.9800175541131, 47.2787540848146], [12.982582577654, 47.2785106349103], [12.984841874047, 47.2782099535511], [12.9872884608184, 47.2776301480115], [12.9902196914469, 47.2768335909286], [12.9924537223949, 47.275939715324], [12.9943893896088, 47.2747662019459], [12.9959523009579, 47.2733581655225], [12.9977382732987, 47.270922455442], [12.9988682765343, 47.2693340026144], [12.9995220968003, 47.2676262170713], [12.9997962665176, 47.2663060957568], [12.9999488105751, 47.2645446134711], [13.0000001619048, 47.2623953803533], [12.999482610232, 47.2534021709733], [12.9991281938143, 47.2516546770908], [12.9988980603328, 47.250674063192], [12.9993397316274, 47.2508426264209], [13.0003046342382, 47.2511874192984], [13.0009569674942, 47.2514051111334], [13.0019483226705, 47.2517131460821], [13.0026172952003, 47.251906011771], [13.00363209663, 47.2521763544496], [13.004315679664, 47.2523438089785], [13.0053508496651, 47.252575639355], [13.0060469699566, 47.2527171747777], [13.0070993688398, 47.2529097896259], [13.0078059149745, 47.2530249766101], [13.008376501963, 47.253106740373], [13.0111096515082, 47.2532990569521], [13.0117422110807, 47.2532984304385]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;fdd8b136-5f8f-4107-858d-34fe857c8f7d&#x27;, &#x27;Name&#x27;: &#x27;SP07_NAO_MS4__3_20180701T103139_20180701T103143_TOU_1234_d88b_COG.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 11439920, &#x27;OriginDate&#x27;: &#x27;2025-02-24T15:51:05.465772Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-02-24T16:51:50.897730Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-02-24T16:51:50.897730Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2018/NAO_MS4__3_E1F0-COG/2018/07/01/SP07_NAO_MS4__3_20180701T103139_20180701T103143_TOU_1234_d88b_COG&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;119ad53890487b52b85b6e0a393ec8be&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:51:49.636021Z&#x27;}, {&#x27;Value&#x27;: &#x27;f6bf5b5a299e70f8cbbe728b472af38dd7ab1cd2ec07ed29dd01be78f51c1a95&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:51:49.702987Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2018-07-01T10:31:39.000000Z&#x27;, &#x27;End&#x27;: &#x27;2018-07-01T10:31:43.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((13.941055651799 67.3147443405335, 13.9372983311558 67.3149518434209, 13.9355266185133 67.315138817638, 13.9338644998774 67.3153705287862, 13.9314752782336 67.3158092100197, 13.9294406148051 67.3162960460692, 13.9272538603694 67.3169625656966, 13.9252315497394 67.3177532404261, 13.9225798120379 67.3191939149217, 13.9220529766318 67.3195701028532, 13.9213009790931 67.320196758973, 13.9206275127958 67.320899079996, 13.9196820169404 67.3225089544667, 13.9196463513235 67.3226169623229, 13.9195453046641 67.3230077901603, 13.9130803225698 67.396874352418, 13.9139466869455 67.4436833242477, 13.9143614053281 67.4453250699289, 13.9155308801639 67.4469118733468, 13.9174164078498 67.4483910289252, 13.9199554704494 67.4497133982047, 13.9364033163256 67.4574993905616, 13.9389876290676 67.4585514850277, 13.9470263692332 67.461338944105, 13.950730924835 67.4623889670511, 13.9566422512137 67.4637401716666, 13.957071206648 67.4638358425093, 13.9642838051865 67.4654049164128, 13.9934783400405 67.4715835891447, 13.9976130526989 67.4723591712763, 14.0020527637904 67.4728029996357, 14.0066240786369 67.4728977410945, 14.0111484456968 67.4726396961598, 14.015449153023 67.4720389437798, 14.0193582517311 67.4711189464129, 14.0227231318921 67.4699156310343, 14.02541249071 67.4684759824848, 14.0273214579871 67.4668562048063, 14.0283756785267 67.4651195231467, 14.0285341936402 67.4633337128026, 14.0054662822636 67.322354182729, 14.0045191364752 67.3202994419644, 14.0039823673023 67.3196840229101, 14.0038228234036 67.3195249084466, 14.0010233122325 67.3175532035614, 13.9987475409456 67.316509308698, 13.9951024111313 67.3153377357095, 13.994651275218 67.3152234886459, 13.9903565748884 67.3143925140129, 13.9896625094855 67.3142965868626, 13.9850406910817 67.31389096555, 13.9810261754605 67.3138439635288, 13.941055651799 67.3147443405335))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[13.941055651799, 67.3147443405335], [13.9372983311558, 67.3149518434209], [13.9355266185133, 67.315138817638], [13.9338644998774, 67.3153705287862], [13.9314752782336, 67.3158092100197], [13.9294406148051, 67.3162960460692], [13.9272538603694, 67.3169625656966], [13.9252315497394, 67.3177532404261], [13.9225798120379, 67.3191939149217], [13.9220529766318, 67.3195701028532], [13.9213009790931, 67.320196758973], [13.9206275127958, 67.320899079996], [13.9196820169404, 67.3225089544667], [13.9196463513235, 67.3226169623229], [13.9195453046641, 67.3230077901603], [13.9130803225698, 67.396874352418], [13.9139466869455, 67.4436833242477], [13.9143614053281, 67.4453250699289], [13.9155308801639, 67.4469118733468], [13.9174164078498, 67.4483910289252], [13.9199554704494, 67.4497133982047], [13.9364033163256, 67.4574993905616], [13.9389876290676, 67.4585514850277], [13.9470263692332, 67.461338944105], [13.950730924835, 67.4623889670511], [13.9566422512137, 67.4637401716666], [13.957071206648, 67.4638358425093], [13.9642838051865, 67.4654049164128], [13.9934783400405, 67.4715835891447], [13.9976130526989, 67.4723591712763], [14.0020527637904, 67.4728029996357], [14.0066240786369, 67.4728977410945], [14.0111484456968, 67.4726396961598], [14.015449153023, 67.4720389437798], [14.0193582517311, 67.4711189464129], [14.0227231318921, 67.4699156310343], [14.02541249071, 67.4684759824848], [14.0273214579871, 67.4668562048063], [14.0283756785267, 67.4651195231467], [14.0285341936402, 67.4633337128026], [14.0054662822636, 67.322354182729], [14.0045191364752, 67.3202994419644], [14.0039823673023, 67.3196840229101], [14.0038228234036, 67.3195249084466], [14.0010233122325, 67.3175532035614], [13.9987475409456, 67.316509308698], [13.9951024111313, 67.3153377357095], [13.994651275218, 67.3152234886459], [13.9903565748884, 67.3143925140129], [13.9896625094855, 67.3142965868626], [13.9850406910817, 67.31389096555], [13.9810261754605, 67.3138439635288], [13.941055651799, 67.3147443405335]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;2e0122a7-dc3a-4024-b8e9-d32fa852a2d1&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230730T085330_20230730T085332_TOU_049380_79d9.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 302025886, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:27:03.004889Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:33:33.997238Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:33:33.997238Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/30/DM02_HRS_MS2_1D_20230730T085330_20230730T085332_TOU_049380_79d9&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;25a0cc64e0dee0f44f174bba8f844153&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:33:32.520095Z&#x27;}, {&#x27;Value&#x27;: &#x27;b34fa088c648beb28cc3354a0916eb55da1e30db84eee4d95ec9b163da4d6f34&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:33:33.000197Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-30T08:53:30.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-30T08:53:32.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((13.946433 42.756783, 13.944664 42.730061, 13.957013 42.6922, 13.957205 42.692234, 13.975836 42.635452, 13.937972 42.628693, 13.937838 42.626644, 13.93767 42.626595, 13.856008 42.612236, 13.842167 42.655502, 13.827466 42.700077, 13.816698 42.733631, 13.930229 42.753918, 13.946433 42.756783)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[13.946433, 42.756783], [13.944664, 42.730061], [13.957013, 42.6922], [13.957205, 42.692234], [13.975836, 42.635452], [13.937972, 42.628693], [13.937838, 42.626644], [13.93767, 42.626595], [13.856008, 42.612236], [13.842167, 42.655502], [13.827466, 42.700077], [13.816698, 42.733631], [13.930229, 42.753918], [13.946433, 42.756783]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;be1e3521-8110-426b-8786-929e0a3dadd6&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230731T090709_20230731T090711_TOU_049395_335a.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 249532767, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:30:24.179480Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:36:29.435531Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:36:29.435531Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/31/DM02_HRS_MS2_1D_20230731T090709_20230731T090711_TOU_049395_335a&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;d6fb89f74c4849557faed615c4b8c994&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:36:28.045689Z&#x27;}, {&#x27;Value&#x27;: &#x27;f48d93f4a271c5a782c980034f38b474218ac9cb3bc84b1de1cbc96a335ba26d&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:36:28.440250Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-31T09:07:09.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-31T09:07:11.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.47977 42.757835, 10.451606 42.752846, 10.355861 42.751003, 10.325304 42.750149, 10.316968 42.776321, 10.310323 42.796204, 10.296112 42.840122, 10.453238 42.839542, 10.463788 42.807449, 10.47977 42.757835)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.47977, 42.757835], [10.451606, 42.752846], [10.355861, 42.751003], [10.325304, 42.750149], [10.316968, 42.776321], [10.310323, 42.796204], [10.296112, 42.840122], [10.453238, 42.839542], [10.463788, 42.807449], [10.47977, 42.757835]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;8ae6e0d5-1aef-4a96-b793-ab1a67d57679&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085606_20230716T085608_TOU_049172_b2c0.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 223681446, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:49:22.454246Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T15:55:06.440907Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T15:55:06.440907Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085606_20230716T085608_TOU_049172_b2c0&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;942b6d4485b39d147de8e8a33a21c574&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:55:03.992541Z&#x27;}, {&#x27;Value&#x27;: &#x27;bd6949b26406501338594ef6cca93c353ee91c1914e95e8aa8e6727f8fde7631&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:55:04.333175Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:06.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:08.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((13.191051 41.830669, 13.191186 41.822914, 13.21837 41.774052, 13.145067 41.777992, 13.153772 41.775723, 13.168935 41.768448, 13.177095 41.757671, 13.178924 41.746784, 13.176143 41.737885, 13.171613 41.730946, 13.163302 41.724678, 13.155065 41.720978, 13.146892 41.719341, 13.140533 41.717781, 13.134767 41.714783, 13.123634 41.710056, 13.111437 41.70969, 13.099282 41.710285, 13.086524 41.713764, 13.082441 41.716694, 13.076365 41.735435, 13.076442 41.773438, 13.101604 41.779751, 13.076452 41.78059, 13.076511 41.809963, 13.126051 41.818939, 13.191051 41.830669)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[13.191051, 41.830669], [13.191186, 41.822914], [13.21837, 41.774052], [13.145067, 41.777992], [13.153772, 41.775723], [13.168935, 41.768448], [13.177095, 41.757671], [13.178924, 41.746784], [13.176143, 41.737885], [13.171613, 41.730946], [13.163302, 41.724678], [13.155065, 41.720978], [13.146892, 41.719341], [13.140533, 41.717781], [13.134767, 41.714783], [13.123634, 41.710056], [13.111437, 41.70969], [13.099282, 41.710285], [13.086524, 41.713764], [13.082441, 41.716694], [13.076365, 41.735435], [13.076442, 41.773438], [13.101604, 41.779751], [13.076452, 41.78059], [13.076511, 41.809963], [13.126051, 41.818939], [13.191051, 41.830669]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;a2cf7f3a-d1d8-4a19-b8ff-17746693faaa&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230730T085328_20230730T085331_TOU_049380_b972.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 246074781, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:26:44.805610Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:32:28.871615Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:32:28.871615Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/30/DM02_HRS_MS2_1D_20230730T085328_20230730T085331_TOU_049380_b972&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;2d05d85f280dbc43eb385339757e10cb&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:32:26.778228Z&#x27;}, {&#x27;Value&#x27;: &#x27;c298e96f69464e210e0d0e236e03e967aef0568aaae48e344b6a728a32963da4&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:32:27.175686Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-30T08:53:28.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-30T08:53:31.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((13.89193 42.501892, 13.879498 42.539925, 13.874835 42.555, 13.867546 42.576923, 13.864855 42.585705, 13.853106 42.621201, 13.913845 42.631966, 13.913989 42.634163, 13.972815 42.644669, 13.978957 42.625927, 13.967333 42.625259, 13.969454 42.543316, 13.971831 42.543072, 13.973015 42.542763, 13.974592 42.542088, 13.97563 42.541424, 13.976645 42.540508, 13.977408 42.539467, 13.977873 42.538422, 13.978112 42.537079, 13.978605 42.517773, 13.978466 42.517132, 13.89193 42.501892)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[13.89193, 42.501892], [13.879498, 42.539925], [13.874835, 42.555], [13.867546, 42.576923], [13.864855, 42.585705], [13.853106, 42.621201], [13.913845, 42.631966], [13.913989, 42.634163], [13.972815, 42.644669], [13.978957, 42.625927], [13.967333, 42.625259], [13.969454, 42.543316], [13.971831, 42.543072], [13.973015, 42.542763], [13.974592, 42.542088], [13.97563, 42.541424], [13.976645, 42.540508], [13.977408, 42.539467], [13.977873, 42.538422], [13.978112, 42.537079], [13.978605, 42.517773], [13.978466, 42.517132], [13.89193, 42.501892]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;824b5a1c-583e-473d-ac43-d33828fe42bf&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085600_20230716T085603_TOU_049172_425c.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 124489035, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:48:50.080397Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T15:55:07.077869Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T15:55:07.077869Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085600_20230716T085603_TOU_049172_425c&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;435c8a96df2521dc2a3aaf6b6143c253&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:55:05.856085Z&#x27;}, {&#x27;Value&#x27;: &#x27;6af442d47533b3fe5495641c1619e0df8d274d171c8842b2cbd0a24a7a4cb865&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:55:06.078637Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:00.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:03.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((13.237034 41.358322, 13.240921 41.432716, 13.329381 41.429798, 13.345999 41.378155, 13.237034 41.358322)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[13.237034, 41.358322], [13.240921, 41.432716], [13.329381, 41.429798], [13.345999, 41.378155], [13.237034, 41.358322]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;cb70aef0-5c15-4f16-b9ec-1896e4b3167b&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085646_20230716T085648_TOU_049172_7fd4.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 96906678, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:58:29.710824Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:04:05.102226Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:04:05.102226Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085646_20230716T085648_TOU_049172_7fd4&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;99851f5490ca33399bc30aaaa7acf4a2&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:02.359421Z&#x27;}, {&#x27;Value&#x27;: &#x27;54f3c99126a346f72de43f1317dd5bc6280213c2f953df0fc0c78fc1d896f688&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:02.542240Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:46.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:48.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.295008 44.122871, 12.294328 44.123787, 12.293702 44.125153, 12.285693 44.150894, 12.27211 44.151196, 12.272404 44.208561, 12.334877 44.208199, 12.334573 44.175518, 12.336732 44.175339, 12.338599 44.174915, 12.340412 44.174206, 12.341826 44.173374, 12.343614 44.171749, 12.344397 44.170593, 12.344975 44.169014, 12.345108 44.16787, 12.344704 44.13179, 12.295008 44.122871)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.295008, 44.122871], [12.294328, 44.123787], [12.293702, 44.125153], [12.285693, 44.150894], [12.27211, 44.151196], [12.272404, 44.208561], [12.334877, 44.208199], [12.334573, 44.175518], [12.336732, 44.175339], [12.338599, 44.174915], [12.340412, 44.174206], [12.341826, 44.173374], [12.343614, 44.171749], [12.344397, 44.170593], [12.344975, 44.169014], [12.345108, 44.16787], [12.344704, 44.13179], [12.295008, 44.122871]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;c39bf949-2ea4-4593-a0ae-4c6880e44762&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085607_20230716T085610_TOU_049172_ff96.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 309123226, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:49:25.615391Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T15:55:07.329726Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T15:55:07.329726Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085607_20230716T085610_TOU_049172_ff96&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;6f4bf0a516a22763b0d4290dbe665dec&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:55:05.658305Z&#x27;}, {&#x27;Value&#x27;: &#x27;1c47468ded6cd3cf589bfe06ec20ef340570e6137f2a9bd26d21b95bdb40018e&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:55:06.139363Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:07.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:10.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((13.029538 41.881401, 13.026944 41.889202, 13.024141 41.896664, 13.023401 41.89967, 13.0224 41.902267, 13.021752 41.904728, 13.018353 41.914261, 13.16523 41.940811, 13.198079 41.841583, 13.194383 41.83942, 13.190906 41.838955, 13.191205 41.821781, 13.076499 41.800991, 13.076648 41.872036, 13.031883 41.873463, 13.029538 41.881401)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[13.029538, 41.881401], [13.026944, 41.889202], [13.024141, 41.896664], [13.023401, 41.89967], [13.0224, 41.902267], [13.021752, 41.904728], [13.018353, 41.914261], [13.16523, 41.940811], [13.198079, 41.841583], [13.194383, 41.83942], [13.190906, 41.838955], [13.191205, 41.821781], [13.076499, 41.800991], [13.076648, 41.872036], [13.031883, 41.873463], [13.029538, 41.881401]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;979e7f66-c2b2-445c-8c3d-5ee23d3daa83&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091016_20230717T091018_TOU_049187_7335.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 274439593, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:05:01.816931Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:11:19.564858Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:11:19.564858Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091016_20230717T091018_TOU_049187_7335&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;8a6ff9d9346a75e75a011123548976d2&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:11:17.989885Z&#x27;}, {&#x27;Value&#x27;: &#x27;a405492b65f4c918eb0f7f37edd18955a015346c348875f14ab43f9616a44ebc&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:11:18.401075Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:16.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:18.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.739652 43.87542, 10.781507 43.753685, 10.668106 43.735161, 10.629337 43.857315, 10.654786 43.861523, 10.739652 43.87542)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.739652, 43.87542], [10.781507, 43.753685], [10.668106, 43.735161], [10.629337, 43.857315], [10.654786, 43.861523], [10.739652, 43.87542]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;9ccba6a9-4cb3-4fdb-93a1-c8a5fde55991&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091027_20230717T091029_TOU_049187_aa33.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 370833739, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:06:56.825585Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:13:28.260909Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:13:28.260909Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091027_20230717T091029_TOU_049187_aa33&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;80f4b0a06879a635fbedcaec68e34058&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:13:26.593265Z&#x27;}, {&#x27;Value&#x27;: &#x27;eb21c7eeca012cccfcc05e144d635a0179303ce1e3b1e4a3daa95be20bec351a&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:13:27.169291Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:27.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:29.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.570768 44.547741, 10.574243 44.536125, 10.577146 44.528355, 10.580136 44.518238, 10.585232 44.50346, 10.589253 44.489567, 10.596623 44.467396, 10.603302 44.444397, 10.609574 44.426014, 10.455919 44.400723, 10.416801 44.522591, 10.468204 44.530994, 10.570768 44.547741)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.570768, 44.547741], [10.574243, 44.536125], [10.577146, 44.528355], [10.580136, 44.518238], [10.585232, 44.50346], [10.589253, 44.489567], [10.596623, 44.467396], [10.603302, 44.444397], [10.609574, 44.426014], [10.455919, 44.400723], [10.416801, 44.522591], [10.468204, 44.530994], [10.570768, 44.547741]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;e917dcb7-106b-40ac-906e-ff22c35da338&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230807T090610_20230807T090612_TOU_049499_8cfa.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 55920712, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:44:59.637190Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:50:32.856737Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:50:32.856737Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/08/07/DM02_HRS_MS2_1D_20230807T090610_20230807T090612_TOU_049499_8cfa&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;cad3174eed2614231bea4c195a20d6d2&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:50:31.809448Z&#x27;}, {&#x27;Value&#x27;: &#x27;df50809d1f7a1a07b716a69b592c4d8b455faeea03e1321e923eaf829c65e8db&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:50:31.919011Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-08-07T09:06:10.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-08-07T09:06:12.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.774785 45.630043, 10.763919 45.662716, 10.783372 45.662315, 10.785603 45.678432, 10.803909 45.676414, 10.80987 45.676468, 10.820066 45.679066, 10.830008 45.671867, 10.829247 45.621738, 10.777593 45.622166, 10.774785 45.630043)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.774785, 45.630043], [10.763919, 45.662716], [10.783372, 45.662315], [10.785603, 45.678432], [10.803909, 45.676414], [10.80987, 45.676468], [10.820066, 45.679066], [10.830008, 45.671867], [10.829247, 45.621738], [10.777593, 45.622166], [10.774785, 45.630043]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;8ab1559f-d9a8-4548-961a-df578264334d&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230723T085449_20230723T085451_TOU_049276_6c40.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 67645903, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:11:18.301279Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:17:17.812059Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:17:17.812059Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/23/DM02_HRS_MS2_1D_20230723T085449_20230723T085451_TOU_049276_6c40&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;e0401e868f8df02a5d4adac608da4f61&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:17:16.770753Z&#x27;}, {&#x27;Value&#x27;: &#x27;81279d49a72eeb13aa2f326fd6c21e281711c9937529429e39777974b9fbf739&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:17:16.885351Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-23T08:54:49.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-23T08:54:51.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((13.971196 42.061321, 13.970976 41.939648, 13.960795 41.938801, 13.925282 42.053173, 13.971196 42.061321)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[13.971196, 42.061321], [13.970976, 41.939648], [13.960795, 41.938801], [13.925282, 42.053173], [13.971196, 42.061321]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;17789f5e-3e29-4be7-b7ef-a21068f9d810&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085637_20230716T085639_TOU_049172_b4f3.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 331602238, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:57:18.298211Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:03:18.168525Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:03:18.168525Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085637_20230716T085639_TOU_049172_b4f3&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;1d95b375557e6acc302646f7aebfea4a&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:03:15.540309Z&#x27;}, {&#x27;Value&#x27;: &#x27;dc34e124ac5bb0c865aaed1d88cd595fd615ab19f9857e0500290bbf71563639&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:03:16.073996Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:37.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:39.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.572035 43.714397, 12.613489 43.59473, 12.47602 43.57019, 12.445301 43.666931, 12.435551 43.665344, 12.436589 43.690086, 12.487643 43.699268, 12.572035 43.714397)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.572035, 43.714397], [12.613489, 43.59473], [12.47602, 43.57019], [12.445301, 43.666931], [12.435551, 43.665344], [12.436589, 43.690086], [12.487643, 43.699268], [12.572035, 43.714397]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;9f5be918-d1f5-4270-8c6e-a928e2f8e8fa&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T090954_20230717T090956_TOU_049187_7ab4.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 51790616, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:00:39.957927Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:06:10.699087Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:06:10.699087Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T090954_20230717T090956_TOU_049187_7ab4&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;417b335b7ed13b19240eab9848f7feda&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:06:09.458096Z&#x27;}, {&#x27;Value&#x27;: &#x27;4fc3d944b016449959cf62e1644cd4d635b1a238ceff9d4dfcf9c44b8349b3db&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:06:09.577080Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:09:54.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:09:56.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((11.135717 42.438408, 11.143371 42.436951, 11.155868 42.433155, 11.157598 42.432426, 11.158831 42.43166, 11.160467 42.430157, 11.167804 42.421196, 11.168544 42.419991, 11.168985 42.418728, 11.169092 42.416405, 11.083546 42.402157, 11.083289 42.403717, 11.083135 42.413635, 11.083282 42.44371, 11.083534 42.445271, 11.08419 42.446743, 11.085085 42.447929, 11.086432 42.449116, 11.088007 42.450043, 11.089934 42.450768, 11.092208 42.451195, 11.094275 42.451244, 11.096173 42.451015, 11.117337 42.446827, 11.119338 42.446243, 11.121344 42.445251, 11.128233 42.440815, 11.130023 42.439331, 11.134037 42.438591, 11.135717 42.438408)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[11.135717, 42.438408], [11.143371, 42.436951], [11.155868, 42.433155], [11.157598, 42.432426], [11.158831, 42.43166], [11.160467, 42.430157], [11.167804, 42.421196], [11.168544, 42.419991], [11.168985, 42.418728], [11.169092, 42.416405], [11.083546, 42.402157], [11.083289, 42.403717], [11.083135, 42.413635], [11.083282, 42.44371], [11.083534, 42.445271], [11.08419, 42.446743], [11.085085, 42.447929], [11.086432, 42.449116], [11.088007, 42.450043], [11.089934, 42.450768], [11.092208, 42.451195], [11.094275, 42.451244], [11.096173, 42.451015], [11.117337, 42.446827], [11.119338, 42.446243], [11.121344, 42.445251], [11.128233, 42.440815], [11.130023, 42.439331], [11.134037, 42.438591], [11.135717, 42.438408]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;b009436e-a2e9-4ad3-a371-39b1e469b79f&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T090958_20230717T091000_TOU_049187_3af0.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 145121613, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:01:41.666850Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:07:15.957600Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:07:15.957600Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T090958_20230717T091000_TOU_049187_3af0&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;e3ef416590ab86439efa8a82acacdbb3&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:07:14.664176Z&#x27;}, {&#x27;Value&#x27;: &#x27;bbac2b45949f7c865f0a346004db4ac67971b8b6b730e11f3b898ed6819642bd&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:07:14.899796Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:09:58.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:00.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((11.076616 42.763016, 11.076645 42.748436, 11.072318 42.748226, 11.072206 42.633865, 11.042592 42.628948, 11.036736 42.631138, 11.022751 42.638893, 11.014874 42.648933, 11.013833 42.660992, 11.017522 42.672001, 11.025436 42.681725, 11.037507 42.690033, 11.02915 42.697456, 11.024186 42.701069, 11.01765 42.707344, 11.013064 42.712154, 11.00745 42.715935, 11.00246 42.721004, 10.992447 42.721634, 10.983891 42.72316, 10.976817 42.746506, 11.001655 42.750618, 11.076616 42.763016)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[11.076616, 42.763016], [11.076645, 42.748436], [11.072318, 42.748226], [11.072206, 42.633865], [11.042592, 42.628948], [11.036736, 42.631138], [11.022751, 42.638893], [11.014874, 42.648933], [11.013833, 42.660992], [11.017522, 42.672001], [11.025436, 42.681725], [11.037507, 42.690033], [11.02915, 42.697456], [11.024186, 42.701069], [11.01765, 42.707344], [11.013064, 42.712154], [11.00745, 42.715935], [11.00246, 42.721004], [10.992447, 42.721634], [10.983891, 42.72316], [10.976817, 42.746506], [11.001655, 42.750618], [11.076616, 42.763016]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;85e68e43-3256-4add-a14c-198e984cdcc1&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085638_20230716T085641_TOU_049172_f683.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 322052635, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:57:20.452765Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:03:12.546875Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:03:12.546875Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085638_20230716T085641_TOU_049172_f683&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;c9b4a9c570e340803deb80ac1635ba75&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:03:10.853056Z&#x27;}, {&#x27;Value&#x27;: &#x27;1588a0b900f253fbd5156bc73cff2ae58587f5e1901ffe5bf3b18165c8a21134&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:03:11.361148Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:38.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:41.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.533701 43.825016, 12.576405 43.703186, 12.525457 43.694088, 12.516706 43.694294, 12.436318 43.67981, 12.435652 43.68, 12.436314 43.698418, 12.408714 43.786919, 12.409158 43.786987, 12.405188 43.799633, 12.441471 43.806156, 12.441569 43.808483, 12.456414 43.811146, 12.533701 43.825016)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.533701, 43.825016], [12.576405, 43.703186], [12.525457, 43.694088], [12.516706, 43.694294], [12.436318, 43.67981], [12.435652, 43.68], [12.436314, 43.698418], [12.408714, 43.786919], [12.409158, 43.786987], [12.405188, 43.799633], [12.441471, 43.806156], [12.441569, 43.808483], [12.456414, 43.811146], [12.533701, 43.825016]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;fd89b82a-642a-4bc4-840c-fc88dc76a358&#x27;, &#x27;Name&#x27;: &#x27;SP07_NAO_MS4__3_20180701T103547_20180701T103553_TOU_1234_67ac_COG.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 17112561, &#x27;OriginDate&#x27;: &#x27;2025-02-24T15:51:06.663779Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-02-24T16:51:55.806235Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-02-24T16:51:55.806235Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2018/NAO_MS4__3_E1F0-COG/2018/07/01/SP07_NAO_MS4__3_20180701T103547_20180701T103553_TOU_1234_67ac_COG&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;61a83112f3cff0c195326f874c8b489e&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:51:55.012149Z&#x27;}, {&#x27;Value&#x27;: &#x27;970d49901738c26623dc10d24a2304d333fc62d3dcea079cf78c55c8b53efa23&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:51:55.073153Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2018-07-01T10:35:47.000000Z&#x27;, &#x27;End&#x27;: &#x27;2018-07-01T10:35:53.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((6.19331840289441 52.1584268236113, 6.1896168668039 52.1583304729913, 6.18183661715037 52.158736540471, 6.17886166756882 52.1590852544489, 6.16827701100665 52.1610418854586, 6.16612431359655 52.161556837832, 6.16064197788327 52.1631853627569, 6.15792768121901 52.1642310916945, 6.15564889243725 52.1656150599267, 6.14045943275964 52.1763737808903, 6.13866126818651 52.177712007814, 6.13692067269714 52.1792972772358, 6.13543498279865 52.1810327863953, 6.13363268736071 52.183243660437, 6.13258246723485 52.1846478184575, 6.13164090521388 52.1862591159026, 6.1315770752459 52.1863706450122, 6.13094458834051 52.1874994187447, 6.13049546827025 52.1884774119315, 6.13014366573045 52.1894511483499, 6.12981689539461 52.1909197160942, 6.12948784799483 52.194709453737, 6.12962600897842 52.1965089142023, 6.12985551092123 52.19777655201, 6.12835602303935 52.1982265012801, 6.12331819268271 52.2001488167432, 6.12097063684803 52.2012617379598, 6.11666656299039 52.2037682210838, 6.11473220399749 52.2051488917634, 6.111338699807 52.2081366914714, 6.1098970445733 52.2097284501366, 6.10755368423956 52.2130749326212, 6.10666407868816 52.2148124361057, 6.10546743910697 52.2183802031433, 6.10516661151433 52.2201921020758, 6.10501570740357 52.2220133695895, 6.10501566476956 52.2224350579974, 6.1051611677011 52.2242256200265, 6.10545164683785 52.2260072624583, 6.1066082462233 52.2295172195364, 6.10746865363731 52.2312280612703, 6.10973665298059 52.2345273950226, 6.11113299081807 52.2360994576118, 6.11442261071461 52.2390570507217, 6.11629953904458 52.2404278493847, 6.12048029070218 52.2429261285188, 6.12276330730622 52.2440411618838, 6.1251372136027 52.2450861754972, 6.12646302115691 52.2456103470364, 6.1295354298092 52.2466701260185, 6.13270062816247 52.2476127445295, 6.13595859733661 52.248438195095, 6.13779835174259 52.2488265493878, 6.13892619115424 52.2490490607047, 6.14006091703288 52.2492574779515, 6.1412025284036 52.2494518009269, 6.14780391218655 52.2504874855209, 6.14987585126033 52.2507638634533, 6.15196140494691 52.2509938627507, 6.15406056696307 52.2511774826687, 6.1641746750786 52.2518335275871, 6.1649415126503 52.2518769869122, 6.16570915172091 52.2519142500942, 6.16647759197259 52.2519453171158, 6.17421798073017 52.2521953266519, 6.1765733712744 52.2522131186468, 6.17892613065752 52.2521727823474, 6.18360588315142 52.2518602810487, 6.18591772096077 52.2515891279638, 6.18821175450807 52.2512608596012, 6.19065598982683 52.2508468194363, 6.19308176262897 52.250365233081, 6.19546876989719 52.2498198077538, 6.20006994560884 52.2484782779165, 6.20226666520524 52.2476872622902, 6.20641904524576 52.245876735359, 6.20835896621843 52.244864091121, 6.2100382025934 52.2439158455918, 6.21237755640077 52.2424875285604, 6.21336074729414 52.2418573194783, 6.21529491019812 52.2405556529809, 6.21872849631437 52.2377321472653, 6.22021139818617 52.2362239170133, 6.22268090817179 52.233043581973, 6.22365565261676 52.2313868019955, 6.22506643045777 52.2279719504751, 6.22549570941968 52.2262303290006, 6.22579388457295 52.2227122506423, 6.22566138904185 52.220952735883, 6.22483589405744 52.2174666428094, 6.22414691217401 52.2157568473501, 6.22222984842429 52.2124366758863, 6.22101103236626 52.2108422790845, 6.21807637890614 52.2078155476045, 6.21637469406328 52.2063977757111, 6.21253541797504 52.2037806954543, 6.21041631882962 52.2025939756584, 6.20934014669666 52.2021006859898, 6.21761421309465 52.1795988001446, 6.21792465880961 52.1781674881513, 6.21842448275969 52.1722723692407, 6.21824183134441 52.1703147168977, 6.21783391873405 52.1688239132786, 6.21704707420968 52.1670648540609, 6.21569843309622 52.1654397787694, 6.21384363805843 52.1640156658064, 6.21079991332428 52.1621120957012, 6.20861583250045 52.1609892529339, 6.20611911045422 52.1601480037071, 6.20340446198165 52.159620256196, 6.19838542238985 52.1589665579375, 6.19781854359939 52.1588998730582, 6.19331840289441 52.1584268236113))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[6.19331840289441, 52.1584268236113], [6.1896168668039, 52.1583304729913], [6.18183661715037, 52.158736540471], [6.17886166756882, 52.1590852544489], [6.16827701100665, 52.1610418854586], [6.16612431359655, 52.161556837832], [6.16064197788327, 52.1631853627569], [6.15792768121901, 52.1642310916945], [6.15564889243725, 52.1656150599267], [6.14045943275964, 52.1763737808903], [6.13866126818651, 52.177712007814], [6.13692067269714, 52.1792972772358], [6.13543498279865, 52.1810327863953], [6.13363268736071, 52.183243660437], [6.13258246723485, 52.1846478184575], [6.13164090521388, 52.1862591159026], [6.1315770752459, 52.1863706450122], [6.13094458834051, 52.1874994187447], [6.13049546827025, 52.1884774119315], [6.13014366573045, 52.1894511483499], [6.12981689539461, 52.1909197160942], [6.12948784799483, 52.194709453737], [6.12962600897842, 52.1965089142023], [6.12985551092123, 52.19777655201], [6.12835602303935, 52.1982265012801], [6.12331819268271, 52.2001488167432], [6.12097063684803, 52.2012617379598], [6.11666656299039, 52.2037682210838], [6.11473220399749, 52.2051488917634], [6.111338699807, 52.2081366914714], [6.1098970445733, 52.2097284501366], [6.10755368423956, 52.2130749326212], [6.10666407868816, 52.2148124361057], [6.10546743910697, 52.2183802031433], [6.10516661151433, 52.2201921020758], [6.10501570740357, 52.2220133695895], [6.10501566476956, 52.2224350579974], [6.1051611677011, 52.2242256200265], [6.10545164683785, 52.2260072624583], [6.1066082462233, 52.2295172195364], [6.10746865363731, 52.2312280612703], [6.10973665298059, 52.2345273950226], [6.11113299081807, 52.2360994576118], [6.11442261071461, 52.2390570507217], [6.11629953904458, 52.2404278493847], [6.12048029070218, 52.2429261285188], [6.12276330730622, 52.2440411618838], [6.1251372136027, 52.2450861754972], [6.12646302115691, 52.2456103470364], [6.1295354298092, 52.2466701260185], [6.13270062816247, 52.2476127445295], [6.13595859733661, 52.248438195095], [6.13779835174259, 52.2488265493878], [6.13892619115424, 52.2490490607047], [6.14006091703288, 52.2492574779515], [6.1412025284036, 52.2494518009269], [6.14780391218655, 52.2504874855209], [6.14987585126033, 52.2507638634533], [6.15196140494691, 52.2509938627507], [6.15406056696307, 52.2511774826687], [6.1641746750786, 52.2518335275871], [6.1649415126503, 52.2518769869122], [6.16570915172091, 52.2519142500942], [6.16647759197259, 52.2519453171158], [6.17421798073017, 52.2521953266519], [6.1765733712744, 52.2522131186468], [6.17892613065752, 52.2521727823474], [6.18360588315142, 52.2518602810487], [6.18591772096077, 52.2515891279638], [6.18821175450807, 52.2512608596012], [6.19065598982683, 52.2508468194363], [6.19308176262897, 52.250365233081], [6.19546876989719, 52.2498198077538], [6.20006994560884, 52.2484782779165], [6.20226666520524, 52.2476872622902], [6.20641904524576, 52.245876735359], [6.20835896621843, 52.244864091121], [6.2100382025934, 52.2439158455918], [6.21237755640077, 52.2424875285604], [6.21336074729414, 52.2418573194783], [6.21529491019812, 52.2405556529809], [6.21872849631437, 52.2377321472653], [6.22021139818617, 52.2362239170133], [6.22268090817179, 52.233043581973], [6.22365565261676, 52.2313868019955], [6.22506643045777, 52.2279719504751], [6.22549570941968, 52.2262303290006], [6.22579388457295, 52.2227122506423], [6.22566138904185, 52.220952735883], [6.22483589405744, 52.2174666428094], [6.22414691217401, 52.2157568473501], [6.22222984842429, 52.2124366758863], [6.22101103236626, 52.2108422790845], [6.21807637890614, 52.2078155476045], [6.21637469406328, 52.2063977757111], [6.21253541797504, 52.2037806954543], [6.21041631882962, 52.2025939756584], [6.20934014669666, 52.2021006859898], [6.21761421309465, 52.1795988001446], [6.21792465880961, 52.1781674881513], [6.21842448275969, 52.1722723692407], [6.21824183134441, 52.1703147168977], [6.21783391873405, 52.1688239132786], [6.21704707420968, 52.1670648540609], [6.21569843309622, 52.1654397787694], [6.21384363805843, 52.1640156658064], [6.21079991332428, 52.1621120957012], [6.20861583250045, 52.1609892529339], [6.20611911045422, 52.1601480037071], [6.20340446198165, 52.159620256196], [6.19838542238985, 52.1589665579375], [6.19781854359939, 52.1588998730582], [6.19331840289441, 52.1584268236113]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;3344f33a-b662-420f-9c79-43492b62af78&#x27;, &#x27;Name&#x27;: &#x27;DEM1_SAR_DGE_30_20110510T014052_20140221T013250_ADS_000000_1255_bf5f8c79.DEM&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 109333553, &#x27;OriginDate&#x27;: &#x27;2024-05-01T20:39:41.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-05-06T14:48:58.774889Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-05-06T14:49:01.044653Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/COP-DEM_GLO-30-DGED/SAR_DGE_30_A4AD/2011/05/10/DEM1_SAR_DGE_30_20110510T014052_20140221T013250_ADS_000000_1255_bf5f8c79&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;4a301760ef3b8c221f9404d9cf1b5efc&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-05-06T14:49:00.564242Z&#x27;}, {&#x27;Value&#x27;: &#x27;86ccbc78ad12a16ff3fc5ed9a6b5743c01584ff4ee648b439ee6b402b953e38d&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-05-06T14:49:00.872412Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2011-05-10T01:40:54.000000Z&#x27;, &#x27;End&#x27;: &#x27;2011-05-10T01:40:55.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((-115 28, -114 28, -114 29, -115 29, -115 28))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[-115.0, 28.0], [-114.0, 28.0], [-114.0, 29.0], [-115.0, 29.0], [-115.0, 28.0]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;f8df5315-42c2-49b2-890a-727ecc2bf4cb&#x27;, &#x27;Name&#x27;: &#x27;RS02_SAR_SW_SCW_20221115T081207_20221115T081323_TRS_77886_0000&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 377651631, &#x27;OriginDate&#x27;: &#x27;2024-06-18T13:26:26.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-06-19T15:14:12.912217Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-06-19T15:14:16.312913Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/SAR_SEA_ICE/SAR_SW_SCW_6F15/2022/11/15/RS02_SAR_SW_SCW_20221115T081207_20221115T081323_TRS_77886_0000&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;b8dbc8bb140658b542ed98ed54190a19&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-06-19T15:14:15.625825Z&#x27;}, {&#x27;Value&#x27;: &#x27;0273cfc7b46a697439f7b89c028f96ae8291402996011dc2ed486af08b935460&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-06-19T15:14:16.195708Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2022-11-15T08:12:07.000000Z&#x27;, &#x27;End&#x27;: &#x27;2022-11-15T08:13:23.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((3.78 79.81, 26.74 82.78, -9.93 86.13, -23.23 81.89, 3.78 79.81))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[3.78, 79.81], [26.74, 82.78], [-9.93, 86.13], [-23.23, 81.89], [3.78, 79.81]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;136b20e7-e2c0-4ae7-aef4-ba2c823d7064&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091007_20230717T091009_TOU_049187_062a.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 54430280, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:03:11.559527Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:09:11.854079Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:09:11.854079Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091007_20230717T091009_TOU_049187_062a&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;62bbf4ba35e029e2efac484291fcc2d8&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:09:10.491110Z&#x27;}, {&#x27;Value&#x27;: &#x27;103bd6d3dba11e90b37faff3fc793e90795909c91235bd399eebf8b0c9db34b8&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:09:10.586158Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:07.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:09.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.865484 43.214119, 10.866582 43.21656, 10.868265 43.218716, 10.870006 43.220257, 10.872292 43.22168, 10.87546 43.223, 10.878626 43.223743, 10.881926 43.224026, 10.885091 43.22385, 10.960852 43.213482, 10.96369 43.212891, 10.967422 43.211456, 10.969761 43.210045, 10.971697 43.208366, 10.973582 43.205841, 10.974422 43.203911, 10.974815 43.201786, 10.86599 43.183777, 10.865101 43.185936, 10.86475 43.188362, 10.865088 43.211758, 10.865484 43.214119)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.865484, 43.214119], [10.866582, 43.21656], [10.868265, 43.218716], [10.870006, 43.220257], [10.872292, 43.22168], [10.87546, 43.223], [10.878626, 43.223743], [10.881926, 43.224026], [10.885091, 43.22385], [10.960852, 43.213482], [10.96369, 43.212891], [10.967422, 43.211456], [10.969761, 43.210045], [10.971697, 43.208366], [10.973582, 43.205841], [10.974422, 43.203911], [10.974815, 43.201786], [10.86599, 43.183777], [10.865101, 43.185936], [10.86475, 43.188362], [10.865088, 43.211758], [10.865484, 43.214119]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;4d583d8c-a42b-43a1-bf54-1ccec8023bbe&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230723T085503_20230723T085506_TOU_049276_74bd.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 322091095, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:16:23.495250Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:22:26.147087Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:22:26.147087Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/23/DM02_HRS_MS2_1D_20230723T085503_20230723T085506_TOU_049276_74bd&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;dcfd0420d9dcd58531eb8f2728819502&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:22:24.611814Z&#x27;}, {&#x27;Value&#x27;: &#x27;f031f6dd3e161f519ba306dd4bb28307dde550572a85c74cc7e5c8d2ec61ff3f&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:22:25.091205Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-23T08:55:03.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-23T08:55:06.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((13.668314 42.81282, 13.65514 42.853077, 13.62899 42.934029, 13.757956 42.956589, 13.758169 42.955914, 13.75841 42.955959, 13.797903 42.835438, 13.668314 42.81282)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[13.668314, 42.81282], [13.65514, 42.853077], [13.62899, 42.934029], [13.757956, 42.956589], [13.758169, 42.955914], [13.75841, 42.955959], [13.797903, 42.835438], [13.668314, 42.81282]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;ce6dcd43-e2be-4f29-b6da-bd6278102f10&#x27;, &#x27;Name&#x27;: &#x27;CS00_SAR_SCH_1B_20221117T005548_20221117T005616_MAT_0_7812.HDF5&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 29711771, &#x27;OriginDate&#x27;: &#x27;2024-06-18T13:26:26.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-06-19T15:14:18.675981Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-06-19T15:14:19.677724Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/SAR_SEA_ICE/SAR_SCH_1B_6F15/2022/11/17/CS00_SAR_SCH_1B_20221117T005548_20221117T005616_MAT_0_7812&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;0ab2d65e7a0d822ef8340f7b6bbd6c6d&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-06-19T15:14:19.478591Z&#x27;}, {&#x27;Value&#x27;: &#x27;941cda414af0bba677a0a479541bdb4fc26a11d7e80d9f95a8beba5ae6147fdd&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-06-19T15:14:19.539579Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2022-11-17T00:55:48.000000Z&#x27;, &#x27;End&#x27;: &#x27;2022-11-17T00:56:16.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((-65.8001 89.290766, -31.120034 87.724151, 10.686006 87.491079, 50.69394 88.731302, -65.8001 89.290766))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[-65.8001, 89.290766], [-31.120034, 87.724151], [10.686006, 87.491079], [50.69394, 88.731302], [-65.8001, 89.290766]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;c2968df0-9442-4cdc-8460-9e4766a08d0e&#x27;, &#x27;Name&#x27;: &#x27;CS00_SAR_SCH_1B_20221114T222342_20221114T222410_MAT_0_ce64.HDF5&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 30072919, &#x27;OriginDate&#x27;: &#x27;2024-06-18T13:26:26.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-06-19T15:14:19.608937Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-06-19T15:14:20.494088Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/SAR_SEA_ICE/SAR_SCH_1B_6F15/2022/11/14/CS00_SAR_SCH_1B_20221114T222342_20221114T222410_MAT_0_ce64&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;d7ca55c1d821a4a8744959d532b1cf29&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-06-19T15:14:20.249044Z&#x27;}, {&#x27;Value&#x27;: &#x27;bd08a56f9837bbeb57ccb7b9e3d1da8a84a095500be0f6058b383a94a37a3179&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-06-19T15:14:20.312219Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2022-11-14T22:23:42.000000Z&#x27;, &#x27;End&#x27;: &#x27;2022-11-14T22:24:10.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((46.021527 89.472608, 26.327981 87.773409, 62.284416 87.037349, 97.033508 87.983028, 46.021527 89.472608))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[46.021527, 89.472608], [26.327981, 87.773409], [62.284416, 87.037349], [97.033508, 87.983028], [46.021527, 89.472608]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;0692ed75-6828-4b88-95d4-39a380b47211&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230822T091519_20230822T091522_TOU_049722_d747.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 364584100, &#x27;OriginDate&#x27;: &#x27;2025-03-12T17:32:58.611723Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T17:39:18.126901Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T17:39:18.126901Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/08/22/DM02_HRS_MS2_1D_20230822T091519_20230822T091522_TOU_049722_d747&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;1935d1a2d79c010615266811b816ecb3&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T17:39:16.694722Z&#x27;}, {&#x27;Value&#x27;: &#x27;b3c7e476395baa050384ec80ad2a47b01b0cfd00fc100f5401d93a0c97163e7e&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T17:39:17.229555Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-08-22T09:15:19.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-08-22T09:15:22.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((7.947698 44.52734, 7.98914 44.406685, 7.837373 44.380489, 7.796403 44.501335, 7.847396 44.51009, 7.947698 44.52734)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[7.947698, 44.52734], [7.98914, 44.406685], [7.837373, 44.380489], [7.796403, 44.501335], [7.847396, 44.51009], [7.947698, 44.52734]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;6d00cad1-f49a-4bb4-9b0a-bd7435b8ca9c&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085609_20230716T085612_TOU_049172_84bd.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 280603188, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:49:44.247932Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T15:56:15.696323Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T15:56:15.696323Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085609_20230716T085612_TOU_049172_84bd&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;5e1a2138247eb1e0f1420b1b6fd55fca&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:56:11.997801Z&#x27;}, {&#x27;Value&#x27;: &#x27;84d3d9627ea0ae5fe49658d8d0ba4a210b7c43d130b7879e6dfe3c8cd025f3e7&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:56:12.448671Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:09.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:12.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((13.128105 42.053604, 13.163132 41.948368, 13.154944 41.947155, 13.152246 41.946968, 13.136426 41.947586, 13.133891 41.947876, 13.130774 41.948666, 13.128901 41.949421, 13.126174 41.951023, 13.124507 41.952415, 13.114959 41.961994, 13.111608 41.965061, 13.1101 41.967216, 13.10549 41.976158, 13.104774 41.978046, 13.104438 41.980309, 13.104707 41.986416, 13.105153 41.9888, 13.104635 41.990555, 13.104381 41.992657, 13.104476 41.994045, 13.104884 41.995682, 13.098977 41.997055, 13.088834 42.001987, 13.08362 42.008518, 13.083322 42.017712, 13.083917 42.024586, 13.082648 42.024639, 13.07407 42.024197, 13.062786 42.024662, 13.05891 42.025417, 13.060438 42.023113, 13.062622 42.016132, 13.065792 42.00975, 13.068196 42.00275, 13.069719 41.996899, 13.068605 41.990429, 13.060844 41.982689, 13.050638 41.981686, 13.043166 41.982918, 13.036938 41.984478, 13.033025 41.986481, 13.02899 41.987877, 13.028964 41.986385, 13.030389 41.97776, 13.030854 41.972847, 13.031187 41.965267, 13.029245 41.9608, 13.025666 41.956924, 13.027364 41.950516, 13.027869 41.946285, 13.029127 41.941708, 13.055787 41.942169, 13.164964 41.942863, 13.168661 41.931736, 13.021557 41.905151, 13.016198 41.920269, 13.014353 41.926723, 13.013263 41.929489, 13.012164 41.933537, 13.011225 41.935932, 13.009608 41.941677, 13.006344 41.951576, 13.004981 41.95713, 13.002061 41.966713, 12.997417 41.978947, 12.996381 41.982342, 12.990881 41.997787, 12.989326 42.002876, 12.985644 42.012749, 12.980872 42.026924, 13.05548 42.040451, 13.128105 42.053604)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[13.128105, 42.053604], [13.163132, 41.948368], [13.154944, 41.947155], [13.152246, 41.946968], [13.136426, 41.947586], [13.133891, 41.947876], [13.130774, 41.948666], [13.128901, 41.949421], [13.126174, 41.951023], [13.124507, 41.952415], [13.114959, 41.961994], [13.111608, 41.965061], [13.1101, 41.967216], [13.10549, 41.976158], [13.104774, 41.978046], [13.104438, 41.980309], [13.104707, 41.986416], [13.105153, 41.9888], [13.104635, 41.990555], [13.104381, 41.992657], [13.104476, 41.994045], [13.104884, 41.995682], [13.098977, 41.997055], [13.088834, 42.001987], [13.08362, 42.008518], [13.083322, 42.017712], [13.083917, 42.024586], [13.082648, 42.024639], [13.07407, 42.024197], [13.062786, 42.024662], [13.05891, 42.025417], [13.060438, 42.023113], [13.062622, 42.016132], [13.065792, 42.00975], [13.068196, 42.00275], [13.069719, 41.996899], [13.068605, 41.990429], [13.060844, 41.982689], [13.050638, 41.981686], [13.043166, 41.982918], [13.036938, 41.984478], [13.033025, 41.986481], [13.02899, 41.987877], [13.028964, 41.986385], [13.030389, 41.97776], [13.030854, 41.972847], [13.031187, 41.965267], [13.029245, 41.9608], [13.025666, 41.956924], [13.027364, 41.950516], [13.027869, 41.946285], [13.029127, 41.941708], [13.055787, 41.942169], [13.164964, 41.942863], [13.168661, 41.931736], [13.021557, 41.905151], [13.016198, 41.920269], [13.014353, 41.926723], [13.013263, 41.929489], [13.012164, 41.933537], [13.011225, 41.935932], [13.009608, 41.941677], [13.006344, 41.951576], [13.004981, 41.95713], [13.002061, 41.966713], [12.997417, 41.978947], [12.996381, 41.982342], [12.990881, 41.997787], [12.989326, 42.002876], [12.985644, 42.012749], [12.980872, 42.026924], [13.05548, 42.040451], [13.128105, 42.053604]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;0dd963be-e173-4d5a-a899-6f0e5c02cee1&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085613_20230716T085615_TOU_049172_2423.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 186951911, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:50:20.344168Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T15:56:15.841074Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T15:56:15.841074Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085613_20230716T085615_TOU_049172_2423&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;9c8509dece75f7da6736023747c6244e&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:56:14.643154Z&#x27;}, {&#x27;Value&#x27;: &#x27;001c300483dc85bc15aeef44b0fb0a0c8d215801f22f76139446c64c6dce1fa4&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:56:14.936801Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:13.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:15.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.948367 42.126511, 12.946239 42.13335, 12.943317 42.141754, 12.941278 42.148468, 12.937173 42.160374, 12.934745 42.168564, 12.932991 42.173225, 12.931711 42.177708, 12.930544 42.180527, 12.928946 42.186447, 12.927581 42.190174, 12.922869 42.20512, 12.920715 42.211056, 12.917225 42.22184, 12.911795 42.236534, 12.908296 42.246693, 13.007195 42.264599, 13.000776 42.136024, 12.948367 42.126511)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.948367, 42.126511], [12.946239, 42.13335], [12.943317, 42.141754], [12.941278, 42.148468], [12.937173, 42.160374], [12.934745, 42.168564], [12.932991, 42.173225], [12.931711, 42.177708], [12.930544, 42.180527], [12.928946, 42.186447], [12.927581, 42.190174], [12.922869, 42.20512], [12.920715, 42.211056], [12.917225, 42.22184], [12.911795, 42.236534], [12.908296, 42.246693], [13.007195, 42.264599], [13.000776, 42.136024], [12.948367, 42.126511]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;3c310f3d-59a5-4338-8b03-d40403f06224&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T090950_20230717T090953_TOU_049187_18e9.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 68710119, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:00:19.729439Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:06:12.511536Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:06:12.511536Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T090950_20230717T090953_TOU_049187_18e9&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;a614be68b9eff0832d1cfb2c9bbb5b08&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:06:11.152868Z&#x27;}, {&#x27;Value&#x27;: &#x27;01ed0cd69c357bb39b5286417502cf8a1c978e03abcd32cc3985ec43e4dc3f9c&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:06:11.265978Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:09:50.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:09:53.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((11.112794 42.302204, 11.130669 42.305275, 11.13517 42.303921, 11.138556 42.302658, 11.141823 42.301231, 11.14815 42.298061, 11.152 42.295841, 11.1553 42.293655, 11.158409 42.291271, 11.161943 42.288071, 11.164797 42.284988, 11.167826 42.281033, 11.169843 42.277847, 11.173132 42.271786, 11.174432 42.269012, 11.175694 42.265541, 11.176785 42.261749, 11.177467 42.258007, 11.17777 42.254295, 11.177746 42.250896, 11.177199 42.246414, 11.176503 42.243496, 11.175585 42.240688, 11.174458 42.237999, 11.171451 42.232662, 11.170218 42.228554, 11.169009 42.225662, 11.167661 42.223042, 11.165985 42.220329, 11.164162 42.217812, 11.160889 42.213898, 11.158555 42.211475, 11.155077 42.208225, 11.152802 42.20636, 11.143714 42.199932, 11.112794 42.302204)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[11.112794, 42.302204], [11.130669, 42.305275], [11.13517, 42.303921], [11.138556, 42.302658], [11.141823, 42.301231], [11.14815, 42.298061], [11.152, 42.295841], [11.1553, 42.293655], [11.158409, 42.291271], [11.161943, 42.288071], [11.164797, 42.284988], [11.167826, 42.281033], [11.169843, 42.277847], [11.173132, 42.271786], [11.174432, 42.269012], [11.175694, 42.265541], [11.176785, 42.261749], [11.177467, 42.258007], [11.17777, 42.254295], [11.177746, 42.250896], [11.177199, 42.246414], [11.176503, 42.243496], [11.175585, 42.240688], [11.174458, 42.237999], [11.171451, 42.232662], [11.170218, 42.228554], [11.169009, 42.225662], [11.167661, 42.223042], [11.165985, 42.220329], [11.164162, 42.217812], [11.160889, 42.213898], [11.158555, 42.211475], [11.155077, 42.208225], [11.152802, 42.20636], [11.143714, 42.199932], [11.112794, 42.302204]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;3f15a0b5-1a8d-4832-9a75-afe123bedc8b&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085611_20230716T085613_TOU_049172_ac11.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 257934711, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:50:03.757657Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T15:56:16.036228Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T15:56:16.036228Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085611_20230716T085613_TOU_049172_ac11&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;20308ccb5ae0454786338d0ae5fed567&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:56:14.356945Z&#x27;}, {&#x27;Value&#x27;: &#x27;9721aacceb9d00dbea2033f56902537a51a15e819c147f4a063a45c2fba8110c&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:56:14.800742Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:11.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:13.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((13.006829 42.149117, 13.007325 42.148762, 13.008057 42.147694, 13.008418 42.146713, 13.008531 42.145584, 13.006282 42.100178, 13.006003 42.098942, 13.054301 42.10107, 13.11206 42.102871, 13.132372 42.042404, 13.119628 42.04007, 13.118894 42.042194, 13.045987 42.028996, 13.038887 42.035255, 13.035709 42.040127, 13.034405 42.045971, 13.035157 42.052608, 13.032404 42.060574, 13.034636 42.067265, 13.036513 42.070595, 13.032948 42.072811, 13.032981 42.071423, 13.030088 42.064037, 13.028993 42.060539, 13.031107 42.054008, 13.031501 42.04982, 13.032518 42.043415, 13.02952 42.036655, 13.034539 42.02692, 12.99506 42.019741, 12.994935 42.017574, 12.98461 42.015709, 12.980718 42.027218, 12.979198 42.032558, 12.978004 42.035759, 12.976533 42.041626, 12.973122 42.05167, 12.971745 42.055058, 12.971068 42.057987, 12.970507 42.059307, 12.964656 42.079185, 12.958803 42.095123, 12.94931 42.123573, 12.946283 42.133278, 12.944645 42.137791, 12.968966 42.142231, 13.006829 42.149117)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[13.006829, 42.149117], [13.007325, 42.148762], [13.008057, 42.147694], [13.008418, 42.146713], [13.008531, 42.145584], [13.006282, 42.100178], [13.006003, 42.098942], [13.054301, 42.10107], [13.11206, 42.102871], [13.132372, 42.042404], [13.119628, 42.04007], [13.118894, 42.042194], [13.045987, 42.028996], [13.038887, 42.035255], [13.035709, 42.040127], [13.034405, 42.045971], [13.035157, 42.052608], [13.032404, 42.060574], [13.034636, 42.067265], [13.036513, 42.070595], [13.032948, 42.072811], [13.032981, 42.071423], [13.030088, 42.064037], [13.028993, 42.060539], [13.031107, 42.054008], [13.031501, 42.04982], [13.032518, 42.043415], [13.02952, 42.036655], [13.034539, 42.02692], [12.99506, 42.019741], [12.994935, 42.017574], [12.98461, 42.015709], [12.980718, 42.027218], [12.979198, 42.032558], [12.978004, 42.035759], [12.976533, 42.041626], [12.973122, 42.05167], [12.971745, 42.055058], [12.971068, 42.057987], [12.970507, 42.059307], [12.964656, 42.079185], [12.958803, 42.095123], [12.94931, 42.123573], [12.946283, 42.133278], [12.944645, 42.137791], [12.968966, 42.142231], [13.006829, 42.149117]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;e7eb1e6f-0486-4a3e-8969-7bb04eaf5ced&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085709_20230716T085712_TOU_049172_1703.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 193127427, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:59:52.091099Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:06:12.690086Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:06:12.690086Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085709_20230716T085712_TOU_049172_1703&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;5ab24182c6f6c18a79acb4b03c70a06d&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:06:10.834931Z&#x27;}, {&#x27;Value&#x27;: &#x27;1deed78a06943b7609e0ef11d84db35e9bbe667a4b25a6704c51760107e9b228&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:06:11.139625Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:57:09.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:57:12.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((11.861387 45.728325, 11.91506 45.582962, 11.845798 45.570698, 11.816762 45.66008, 11.817039 45.660126, 11.798406 45.717136, 11.8248 45.721821, 11.861387 45.728325)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[11.861387, 45.728325], [11.91506, 45.582962], [11.845798, 45.570698], [11.816762, 45.66008], [11.817039, 45.660126], [11.798406, 45.717136], [11.8248, 45.721821], [11.861387, 45.728325]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;cb891b9c-8223-4106-a7d2-1d9afb22a752&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085642_20230716T085644_TOU_049172_4d4c.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 189137468, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:57:59.385601Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:04:16.832994Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:04:16.832994Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085642_20230716T085644_TOU_049172_4d4c&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;3391f377238d83bbfd1e06a7f6d2fd20&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:15.278910Z&#x27;}, {&#x27;Value&#x27;: &#x27;206df592c671b916cff73601b5a0db0735719353b3f05fab2c6d8247737abe10&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:15.568855Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:42.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:44.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.422997 43.910809, 12.421931 43.91338, 12.421552 43.914989, 12.421333 43.917645, 12.421525 43.922215, 12.417384 43.92231, 12.414505 43.924358, 12.409113 43.925613, 12.40027 43.92804, 12.392113 43.933804, 12.387105 43.938812, 12.385571 43.941078, 12.37899 43.948547, 12.376278 43.954681, 12.376248 43.960442, 12.377743 43.966503, 12.384192 43.972794, 12.387941 43.975163, 12.38703 43.978523, 12.388754 43.984238, 12.395186 43.990208, 12.400927 43.993412, 12.399697 43.997505, 12.399718 44.003529, 12.401023 44.008842, 12.404917 44.017998, 12.41038 44.026703, 12.418542 44.031857, 12.428382 44.034969, 12.436152 44.035839, 12.44296 44.035847, 12.449647 44.034966, 12.45465 44.033546, 12.458519 44.033031, 12.461494 44.033146, 12.474431 43.996349, 12.472743 43.957088, 12.488342 43.956707, 12.499593 43.924492, 12.422997 43.910809)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.422997, 43.910809], [12.421931, 43.91338], [12.421552, 43.914989], [12.421333, 43.917645], [12.421525, 43.922215], [12.417384, 43.92231], [12.414505, 43.924358], [12.409113, 43.925613], [12.40027, 43.92804], [12.392113, 43.933804], [12.387105, 43.938812], [12.385571, 43.941078], [12.37899, 43.948547], [12.376278, 43.954681], [12.376248, 43.960442], [12.377743, 43.966503], [12.384192, 43.972794], [12.387941, 43.975163], [12.38703, 43.978523], [12.388754, 43.984238], [12.395186, 43.990208], [12.400927, 43.993412], [12.399697, 43.997505], [12.399718, 44.003529], [12.401023, 44.008842], [12.404917, 44.017998], [12.41038, 44.026703], [12.418542, 44.031857], [12.428382, 44.034969], [12.436152, 44.035839], [12.44296, 44.035847], [12.449647, 44.034966], [12.45465, 44.033546], [12.458519, 44.033031], [12.461494, 44.033146], [12.474431, 43.996349], [12.472743, 43.957088], [12.488342, 43.956707], [12.499593, 43.924492], [12.422997, 43.910809]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;dc188367-8b65-4fa4-92b0-74c38e7451f4&#x27;, &#x27;Name&#x27;: &#x27;PH1B_PHR_BUN__3_20150722T103337_20150722T103340_TOU_1234_9eb7.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 159430455, &#x27;OriginDate&#x27;: &#x27;2024-03-11T09:12:35.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-03-16T18:53:03.525210Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-03-17T01:20:37.274914Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2015/PHR_BUN__3_71F4/2015/07/22/PH1B_PHR_BUN__3_20150722T103337_20150722T103340_TOU_1234_9eb7&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;cb0fa85fedb7017d4cb134b13c1f41a5&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-03-17T01:20:36.721169Z&#x27;}, {&#x27;Value&#x27;: &#x27;066853c08cfbb702d1632ea4aea5a0af416b5c7a63dcfbc1fa9575ca0280e5ae&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-03-17T01:20:37.098710Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2015-07-22T10:33:37.000000Z&#x27;, &#x27;End&#x27;: &#x27;2015-07-22T10:33:40.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((9.04485036390737 44.5373382412944, 9.04516830973802 44.5396044058037, 9.06079630973801 44.5785394058203, 9.06287198804479 44.581242214672, 9.06604987361836 44.582472929669, 9.10066187361836 44.5858159296704, 9.10131178758368 44.5858450363077, 9.12581178758368 44.5856790363076, 9.12871702199799 44.58494886156, 9.13095893628513 44.5829620645162, 9.13203308818819 44.5801656847399, 9.13335826564598 44.569811187243, 9.14331801463159 44.5574045379466, 9.15437856688303 44.5548245678905, 9.15452233189627 44.5469776987088, 9.15510428873846 44.5357926944125, 9.04485036390737 44.5373382412944))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[9.04485036390737, 44.5373382412944], [9.04516830973802, 44.5396044058037], [9.06079630973801, 44.5785394058203], [9.06287198804479, 44.581242214672], [9.06604987361836, 44.582472929669], [9.10066187361836, 44.5858159296704], [9.10131178758368, 44.5858450363077], [9.12581178758368, 44.5856790363076], [9.12871702199799, 44.58494886156], [9.13095893628513, 44.5829620645162], [9.13203308818819, 44.5801656847399], [9.13335826564598, 44.569811187243], [9.14331801463159, 44.5574045379466], [9.15437856688303, 44.5548245678905], [9.15452233189627, 44.5469776987088], [9.15510428873846, 44.5357926944125], [9.04485036390737, 44.5373382412944]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;d6cbe0a6-015f-47eb-b297-7e514e7d29fc&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085640_20230716T085643_TOU_049172_bfcb.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 256428970, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:57:52.467401Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:04:17.141087Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:04:17.141087Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085640_20230716T085643_TOU_049172_bfcb&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;d3d2cb7b81eeeec6cae1d02097053ec7&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:15.610029Z&#x27;}, {&#x27;Value&#x27;: &#x27;ebb34d1b87673ffc7ca56459c01369de95edad43d17b8edf3088c1ac673c9dbf&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:15.999652Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:40.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:43.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.495054 43.935669, 12.537248 43.815926, 12.466154 43.803177, 12.466056 43.800861, 12.408073 43.790447, 12.380637 43.877674, 12.444603 43.880184, 12.446617 43.926937, 12.495054 43.935669)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.495054, 43.935669], [12.537248, 43.815926], [12.466154, 43.803177], [12.466056, 43.800861], [12.408073, 43.790447], [12.380637, 43.877674], [12.444603, 43.880184], [12.446617, 43.926937], [12.495054, 43.935669]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;5b2a7376-9fd2-44f0-9af1-9015c1604f34&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091012_20230717T091015_TOU_049187_9dc0.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 247837877, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:04:10.543131Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:10:27.804580Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:10:27.804580Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091012_20230717T091015_TOU_049187_9dc0&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;654944b705a7354d55c13df638f6d783&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:10:26.184213Z&#x27;}, {&#x27;Value&#x27;: &#x27;73ea505eaf75419aba33d0cb5797cabfe64b263813d3f059e0763eb0eddfb903&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:10:26.572922Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:12.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:15.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.851723 43.660053, 10.867452 43.610146, 10.867652 43.566021, 10.736886 43.56295, 10.722521 43.562443, 10.699788 43.635082, 10.750431 43.643425, 10.851723 43.660053)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.851723, 43.660053], [10.867452, 43.610146], [10.867652, 43.566021], [10.736886, 43.56295], [10.722521, 43.562443], [10.699788, 43.635082], [10.750431, 43.643425], [10.851723, 43.660053]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;6bad69ee-29e1-42c4-865b-9d4fce0e69b2&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085615_20230716T085617_TOU_049172_2e85.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 294683782, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:51:02.531277Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T15:57:08.295334Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T15:57:08.295334Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085615_20230716T085617_TOU_049172_2e85&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;00819c87ca7166519d07ef913f14b57b&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:57:06.633855Z&#x27;}, {&#x27;Value&#x27;: &#x27;f37170da709620bd13cf33ef7ae57c90b0e7bd97ab968491599441167bc343f1&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:57:07.077330Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:15.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:17.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.911457 42.237556, 12.907759 42.248093, 12.907124 42.250481, 12.903599 42.261139, 12.901861 42.265743, 12.901004 42.269039, 12.897956 42.278599, 12.889204 42.304447, 12.888342 42.307652, 12.884692 42.318367, 12.883074 42.324001, 12.879885 42.333256, 12.874808 42.349144, 12.873528 42.352253, 12.871953 42.357319, 13.013099 42.382969, 13.006705 42.254745, 12.924328 42.239841, 12.911457 42.237556)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.911457, 42.237556], [12.907759, 42.248093], [12.907124, 42.250481], [12.903599, 42.261139], [12.901861, 42.265743], [12.901004, 42.269039], [12.897956, 42.278599], [12.889204, 42.304447], [12.888342, 42.307652], [12.884692, 42.318367], [12.883074, 42.324001], [12.879885, 42.333256], [12.874808, 42.349144], [12.873528, 42.352253], [12.871953, 42.357319], [13.013099, 42.382969], [13.006705, 42.254745], [12.924328, 42.239841], [12.911457, 42.237556]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;318edae3-3341-4a69-befb-a604e8596823&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091007_20230717T091009_TOU_049187_f27e.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 134208162, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:03:28.467156Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:09:13.539545Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:09:13.539545Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091007_20230717T091009_TOU_049187_f27e&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;ee1084d38a9b45d273c702821d32554a&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:09:11.575827Z&#x27;}, {&#x27;Value&#x27;: &#x27;8eb264780a206e31739421178f733d5c37910bd5e9097ebd4aab079caa13fd92&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:09:11.818979Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:07.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:09.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.955517 43.326691, 10.958614 43.317562, 10.962272 43.305145, 10.964504 43.298515, 10.969547 43.281265, 10.972868 43.271053, 10.975676 43.261059, 10.97965 43.248962, 10.982296 43.239719, 10.882647 43.236897, 10.883793 43.313152, 10.943622 43.323021, 10.943113 43.324673, 10.955517 43.326691)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.955517, 43.326691], [10.958614, 43.317562], [10.962272, 43.305145], [10.964504, 43.298515], [10.969547, 43.281265], [10.972868, 43.271053], [10.975676, 43.261059], [10.97965, 43.248962], [10.982296, 43.239719], [10.882647, 43.236897], [10.883793, 43.313152], [10.943622, 43.323021], [10.943113, 43.324673], [10.955517, 43.326691]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;61a1da79-4a5d-45e1-939d-68ff31a6d141&#x27;, &#x27;Name&#x27;: &#x27;RS02_SAR_SW_SCW_20221118T050443_20221118T050559_TRS_77927_0000&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 357705476, &#x27;OriginDate&#x27;: &#x27;2024-06-18T13:26:26.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-06-19T15:14:15.658425Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-06-19T15:14:19.757293Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/SAR_SEA_ICE/SAR_SW_SCW_6F15/2022/11/18/RS02_SAR_SW_SCW_20221118T050443_20221118T050559_TRS_77927_0000&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;262607d767cde0b46ff03189d365d7a0&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-06-19T15:14:18.710099Z&#x27;}, {&#x27;Value&#x27;: &#x27;ecc42c00e27daa037ef799eaf204d93b5fcfc0f8b44b2e442ef0ad5f9b91787f&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-06-19T15:14:19.483936Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2022-11-18T05:04:43.000000Z&#x27;, &#x27;End&#x27;: &#x27;2022-11-18T05:05:59.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((37.42 75.19, 47.98 79.07, 22.81 81, 18.87 76.63, 37.42 75.19))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[37.42, 75.19], [47.98, 79.07], [22.81, 81.0], [18.87, 76.63], [37.42, 75.19]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;befecd92-1bfd-4573-a884-b404c6139b48&#x27;, &#x27;Name&#x27;: &#x27;TX01_SAR_WS_MGD_20221116T050549_20221116T050618_NSG_085521_8276.TSX&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 373209536, &#x27;OriginDate&#x27;: &#x27;2024-06-18T13:26:26.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-06-19T15:14:20.254681Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-06-19T15:14:24.037390Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/SAR_SEA_ICE/SAR_WS_MGD_6F15/2022/11/16/TX01_SAR_WS_MGD_20221116T050549_20221116T050618_NSG_085521_8276&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;a0aeffc2c5ee39b332218fc808db1054&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-06-19T15:14:23.322934Z&#x27;}, {&#x27;Value&#x27;: &#x27;606fc72184fa41c215bad90e22d2a0a96a728fb16f1d4b2896c8928f6d670431&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-06-19T15:14:23.907081Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2022-11-16T05:05:49.000000Z&#x27;, &#x27;End&#x27;: &#x27;2022-11-16T05:06:18.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((25.0751234405541 63.9518312185213, 26.2339427157798 65.7268106581686, 21.1127412285349 66.2244900100048, 20.2786892007125 64.4274932935825, 25.0751234405541 63.9518312185213))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[25.0751234405541, 63.9518312185213], [26.2339427157798, 65.7268106581686], [21.1127412285349, 66.2244900100048], [20.2786892007125, 64.4274932935825], [25.0751234405541, 63.9518312185213]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;9369742d-77a0-45a8-aa1d-c9bf59265daa&#x27;, &#x27;Name&#x27;: &#x27;RS02_SAR_SW_SCW_20180924T052230_20180924T052346_TRS_56261_0000&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 365118953, &#x27;OriginDate&#x27;: &#x27;2024-06-18T13:24:48.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-06-19T15:14:21.422480Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-06-19T15:14:24.529679Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/SAR_SEA_ICE/SAR_SW_SCW_6F15/2018/09/24/RS02_SAR_SW_SCW_20180924T052230_20180924T052346_TRS_56261_0000&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;ee192b34cf1005a273ef135322948803&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-06-19T15:14:23.901858Z&#x27;}, {&#x27;Value&#x27;: &#x27;564011d85314e71e34b9001ed1ec50dcdb48b8b48fb1ba2b064e00596f132260&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-06-19T15:14:24.421702Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2018-09-24T05:22:30.000000Z&#x27;, &#x27;End&#x27;: &#x27;2018-09-24T05:23:46.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((36.24 76.59, 49.28 80.31, 20.85 82.52, 15.75 78.16, 36.24 76.59))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[36.24, 76.59], [49.28, 80.31], [20.85, 82.52], [15.75, 78.16], [36.24, 76.59]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;631057f7-e49d-48aa-b57f-218c46ed6d79&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085655_20230716T085657_TOU_049172_6747.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 67248150, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:58:45.379720Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:04:57.581991Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:04:57.581991Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085655_20230716T085657_TOU_049172_6747&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;7df5064ccb9b3366e7344e2c74fa73ac&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:56.238396Z&#x27;}, {&#x27;Value&#x27;: &#x27;87bb635b00ffd59ee0737cce187319bc04a6adfb8e1e9d77830b7f697632952b&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:56.389494Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:55.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:57.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.186606 44.820206, 12.190661 44.808926, 12.191603 44.801834, 12.185932 44.793156, 12.180495 44.787872, 12.169065 44.781219, 12.155729 44.780773, 12.151361 44.773468, 12.134953 44.770447, 12.128301 44.771156, 12.128329 44.749756, 12.104053 44.760677, 12.098282 44.778702, 12.099043 44.77882, 12.091264 44.803032, 12.186606 44.820206)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.186606, 44.820206], [12.190661, 44.808926], [12.191603, 44.801834], [12.185932, 44.793156], [12.180495, 44.787872], [12.169065, 44.781219], [12.155729, 44.780773], [12.151361, 44.773468], [12.134953, 44.770447], [12.128301, 44.771156], [12.128329, 44.749756], [12.104053, 44.760677], [12.098282, 44.778702], [12.099043, 44.77882], [12.091264, 44.803032], [12.186606, 44.820206]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;a109ba56-2e19-405e-9ce1-481ff49c4aa4&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230723T085507_20230723T085509_TOU_049276_3f08.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 338837517, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:16:56.667070Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:23:27.604108Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:23:27.604108Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/23/DM02_HRS_MS2_1D_20230723T085507_20230723T085509_TOU_049276_3f08&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;8c8f2f9304941fa41255fc7efc320a22&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:23:26.137383Z&#x27;}, {&#x27;Value&#x27;: &#x27;5794da24425880146e9a0e210bf785110a43176df26b5ea556a5ddf0b0273c4d&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:23:26.667510Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-23T08:55:07.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-23T08:55:09.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((13.705089 43.18103, 13.744844 43.059399, 13.625669 43.038647, 13.625579 43.077301, 13.582271 43.07679, 13.556673 43.154903, 13.700666 43.180256, 13.705089 43.18103)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[13.705089, 43.18103], [13.744844, 43.059399], [13.625669, 43.038647], [13.625579, 43.077301], [13.582271, 43.07679], [13.556673, 43.154903], [13.700666, 43.180256], [13.705089, 43.18103]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;5e3a2ff3-dce1-4657-ba55-3c177791a831&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085618_20230716T085621_TOU_049172_1a29.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 358813493, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:53:27.655444Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T15:59:12.010031Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T15:59:12.010031Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085618_20230716T085621_TOU_049172_1a29&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;689faf9918fcf80c4e0e2cfa9768521e&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:59:10.247200Z&#x27;}, {&#x27;Value&#x27;: &#x27;d3283ce15d730a024b09a5aacf8754ff7367b94789c2ce65e73db42fa6015fe9&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:59:10.818419Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:18.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:21.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.826892 42.49102, 12.825634 42.495739, 12.824214 42.499607, 12.821077 42.509815, 12.818744 42.516479, 12.817457 42.521141, 12.815867 42.525539, 12.815522 42.526978, 12.813739 42.530895, 12.81288 42.53484, 12.809978 42.543922, 12.807551 42.550205, 12.806696 42.554241, 12.804957 42.559654, 12.803462 42.56353, 12.802222 42.566113, 12.800774 42.571518, 12.797571 42.578922, 12.946085 42.60569, 12.985394 42.487755, 12.836815 42.461159, 12.826892 42.49102)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.826892, 42.49102], [12.825634, 42.495739], [12.824214, 42.499607], [12.821077, 42.509815], [12.818744, 42.516479], [12.817457, 42.521141], [12.815867, 42.525539], [12.815522, 42.526978], [12.813739, 42.530895], [12.81288, 42.53484], [12.809978, 42.543922], [12.807551, 42.550205], [12.806696, 42.554241], [12.804957, 42.559654], [12.803462, 42.56353], [12.802222, 42.566113], [12.800774, 42.571518], [12.797571, 42.578922], [12.946085, 42.60569], [12.985394, 42.487755], [12.836815, 42.461159], [12.826892, 42.49102]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;a412d0a5-398b-4385-9873-e0393393ed74&#x27;, &#x27;Name&#x27;: &#x27;SP07_NAO_MS4__3_20180701T103203_20180701T103207_TOU_1234_6306_COG.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 11341882, &#x27;OriginDate&#x27;: &#x27;2025-02-24T15:51:08.992948Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-02-24T16:51:59.684913Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-02-24T16:51:59.684913Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2018/NAO_MS4__3_E1F0-COG/2018/07/01/SP07_NAO_MS4__3_20180701T103203_20180701T103207_TOU_1234_6306_COG&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;8db208fcec117cc7545053ae9e21d010&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:51:58.708115Z&#x27;}, {&#x27;Value&#x27;: &#x27;023deffc124e5d1917a630ce72a586b9e230218c37a465d43a7a7ccdb3c105db&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:51:58.742485Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2018-07-01T10:32:03.000000Z&#x27;, &#x27;End&#x27;: &#x27;2018-07-01T10:32:07.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((15.8951976452444 67.3060235074177, 15.8909376765555 67.3064741004283, 15.8492121059021 67.3126309279267, 15.8450797774328 67.3134356470835, 15.8414475002322 67.3145499824385, 15.8384619709817 67.3159289511052, 15.8362438384342 67.3175168793025, 15.8348828238767 67.319249645741, 15.834434079019 67.3210572671746, 15.834756072601 67.3726839050319, 15.8350029513092 67.3934661838666, 15.8354801888238 67.3952548159443, 15.8368505964264 67.3969742680507, 15.8390602479998 67.3985566552943, 15.8420220379333 67.3999394927982, 15.8456191024732 67.4010681666643, 15.8497094269118 67.401898095055, 15.8541314576048 67.402396493229, 15.8587104962441 67.4025436720117, 15.8592563251685 67.4025399258559, 15.8604608259681 67.4025193319953, 15.8610620472128 67.4025028826972, 15.8622616109741 67.4024577018184, 15.8628595444193 67.4024289856473, 15.8640508985321 67.4023593410313, 15.8646439129384 67.4023184363378, 15.8658238072976 67.4022245179984, 15.8664102849111 67.4021715363806, 15.8675755008164 67.4020536005442, 15.8681538418023 67.4019886865419, 15.8693012008124 67.4018470549422, 15.8698698276396 67.4017703856402, 15.8704358297521 67.4016908017259, 15.9167768831399 67.3948969442218, 15.9206694742644 67.3941542073793, 15.9232773306532 67.3933886670783, 15.9219078178076 67.3137419560742, 15.9217424361814 67.3131594368323, 15.920420760106 67.3114974500576, 15.9183168665667 67.3099625637921, 15.9155084598527 67.3086113689414, 15.912099169667 67.3074936759721, 15.9082147234875 67.3066506821808, 15.9039983136321 67.3061134566577, 15.8996053292099 67.3059017981552, 15.8951976452444 67.3060235074177))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[15.8951976452444, 67.3060235074177], [15.8909376765555, 67.3064741004283], [15.8492121059021, 67.3126309279267], [15.8450797774328, 67.3134356470835], [15.8414475002322, 67.3145499824385], [15.8384619709817, 67.3159289511052], [15.8362438384342, 67.3175168793025], [15.8348828238767, 67.319249645741], [15.834434079019, 67.3210572671746], [15.834756072601, 67.3726839050319], [15.8350029513092, 67.3934661838666], [15.8354801888238, 67.3952548159443], [15.8368505964264, 67.3969742680507], [15.8390602479998, 67.3985566552943], [15.8420220379333, 67.3999394927982], [15.8456191024732, 67.4010681666643], [15.8497094269118, 67.401898095055], [15.8541314576048, 67.402396493229], [15.8587104962441, 67.4025436720117], [15.8592563251685, 67.4025399258559], [15.8604608259681, 67.4025193319953], [15.8610620472128, 67.4025028826972], [15.8622616109741, 67.4024577018184], [15.8628595444193, 67.4024289856473], [15.8640508985321, 67.4023593410313], [15.8646439129384, 67.4023184363378], [15.8658238072976, 67.4022245179984], [15.8664102849111, 67.4021715363806], [15.8675755008164, 67.4020536005442], [15.8681538418023, 67.4019886865419], [15.8693012008124, 67.4018470549422], [15.8698698276396, 67.4017703856402], [15.8704358297521, 67.4016908017259], [15.9167768831399, 67.3948969442218], [15.9206694742644, 67.3941542073793], [15.9232773306532, 67.3933886670783], [15.9219078178076, 67.3137419560742], [15.9217424361814, 67.3131594368323], [15.920420760106, 67.3114974500576], [15.9183168665667, 67.3099625637921], [15.9155084598527, 67.3086113689414], [15.912099169667, 67.3074936759721], [15.9082147234875, 67.3066506821808], [15.9039983136321, 67.3061134566577], [15.8996053292099, 67.3059017981552], [15.8951976452444, 67.3060235074177]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;61ac4c79-56d2-4172-b484-9c87260f76de&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091001_20230717T091004_TOU_049187_e2ee.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 246298935, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:02:21.464850Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:08:08.607225Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:08:08.607225Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091001_20230717T091004_TOU_049187_e2ee&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;05039a034fcdc94d3b6504c2dd744f87&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:08:07.214370Z&#x27;}, {&#x27;Value&#x27;: &#x27;ff7bef013465bc62df012967b768994142a2bf43792c62bb14966700d6423c66&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:08:07.609865Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:01.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:04.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((11.058395 42.993366, 11.073902 42.943554, 11.056598 42.940548, 11.042823 42.93779, 11.025049 42.937153, 11.008652 42.940559, 10.997647 42.944386, 10.977642 42.95187, 10.96791 42.953766, 10.960625 42.953629, 10.952751 42.95071, 10.947968 42.945442, 10.946019 42.939308, 10.946479 42.93285, 10.9495 42.929699, 10.967537 42.924171, 11.00209 42.919525, 11.023001 42.913303, 11.029382 42.894291, 11.035513 42.861561, 10.945613 42.846653, 10.938297 42.870071, 10.908162 42.968582, 10.958164 42.976826, 11.058395 42.993366)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[11.058395, 42.993366], [11.073902, 42.943554], [11.056598, 42.940548], [11.042823, 42.93779], [11.025049, 42.937153], [11.008652, 42.940559], [10.997647, 42.944386], [10.977642, 42.95187], [10.96791, 42.953766], [10.960625, 42.953629], [10.952751, 42.95071], [10.947968, 42.945442], [10.946019, 42.939308], [10.946479, 42.93285], [10.9495, 42.929699], [10.967537, 42.924171], [11.00209, 42.919525], [11.023001, 42.913303], [11.029382, 42.894291], [11.035513, 42.861561], [10.945613, 42.846653], [10.938297, 42.870071], [10.908162, 42.968582], [10.958164, 42.976826], [11.058395, 42.993366]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;3f812e97-6bc8-43f1-ad7a-40928185852f&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085617_20230716T085619_TOU_049172_b416.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 373011271, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:53:20.231675Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T15:59:14.875660Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T15:59:14.875660Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085617_20230716T085619_TOU_049172_b416&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;2793c6d6716f2d4ad786cfb4c2b75223&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:59:13.359333Z&#x27;}, {&#x27;Value&#x27;: &#x27;8a603a693885bd97b9c4905bcad3b55804891b90aef74c81fe3051da155ec643&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T15:59:13.941427Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:17.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:19.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.875062 42.348358, 12.873529 42.352287, 12.872129 42.356956, 12.867476 42.369091, 12.83373 42.470314, 12.981953 42.496895, 13.014028 42.40155, 13.012545 42.373234, 12.875062 42.348358)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.875062, 42.348358], [12.873529, 42.352287], [12.872129, 42.356956], [12.867476, 42.369091], [12.83373, 42.470314], [12.981953, 42.496895], [13.014028, 42.40155], [13.012545, 42.373234], [12.875062, 42.348358]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;4f78eea1-9cf6-490a-acb7-fbe434d3d267&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T090959_20230717T091002_TOU_049187_1dff.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 239185187, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:02:12.068746Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:08:09.411052Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:08:09.411052Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T090959_20230717T091002_TOU_049187_1dff&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;933a1c10fe333bde9e04b9fb91690387&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:08:07.914838Z&#x27;}, {&#x27;Value&#x27;: &#x27;c67e8e737656e3ee800d379077bbd8e59c36d4ddf56a1735c598b0727ab0ed05&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:08:08.298857Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:09:59.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:02.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.943003 42.855938, 11.03375 42.870983, 11.038905 42.843441, 11.035781 42.835274, 11.076458 42.834854, 11.076635 42.753937, 10.979363 42.737671, 10.943003 42.855938)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.943003, 42.855938], [11.03375, 42.870983], [11.038905, 42.843441], [11.035781, 42.835274], [11.076458, 42.834854], [11.076635, 42.753937], [10.979363, 42.737671], [10.943003, 42.855938]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;951244d1-0196-40f7-9320-3ee684f6fb93&#x27;, &#x27;Name&#x27;: &#x27;SP06_NAO_MS4__3_20180701T112259_20180701T112328_TOU_1234_be26_COG.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 3863723, &#x27;OriginDate&#x27;: &#x27;2025-02-24T15:51:36.203200Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-02-24T16:52:02.506145Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-02-24T16:52:02.506145Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2018/NAO_MS4__3_E1F0-COG/2018/07/01/SP06_NAO_MS4__3_20180701T112259_20180701T112328_TOU_1234_be26_COG&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;f7dcfab802f072be0813188994ea7058&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:52:01.564246Z&#x27;}, {&#x27;Value&#x27;: &#x27;2174d95113666a36345fec6a7994baa3c4eb968621b60f6afde8bfdef14bfcea&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:52:01.607017Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2018-07-01T11:22:59.000000Z&#x27;, &#x27;End&#x27;: &#x27;2018-07-01T11:23:28.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((-3.92512221574238 56.9285408594627, -3.92822944077903 56.9283708176896, -3.93134301987999 56.9285237158135, -3.93435079846033 56.9289940449617, -3.93714442572207 56.9297648617513, -3.93962325058097 56.9308083975828, -3.94169794284562 56.9320870572563, -3.9432937101048 56.9335547712466, -3.94435299481367 56.9351586533054, -3.95002516642373 56.9472273424314, -3.9501259851688 56.9474539613522, -3.95022138551843 56.9476812380633, -3.95039045004625 56.9481382688737, -3.95046405689112 56.948367868693, -3.9505893196929 56.948828927143, -3.95064093309553 56.9490602301267, -3.950722053536 56.9495240712766, -3.95075153291636 56.9497564528487, -3.95078828950757 56.9502218241762, -3.95079555403561 56.9504546568143, -3.95078784506155 56.9509203016001, -3.95077287388843 56.9511529565295, -3.95072071770565 56.9516176172438, -3.95068355003355 56.9518494661352, -3.95058708504866 56.9523118878377, -3.95052782003808 56.9525423045043, -3.95038730435952 56.9530012382352, -3.95030610087456 56.9532296003243, -3.95012191164295 56.9536838064734, -3.95004448967012 56.9538535771033, -3.94884937884666 56.9556359396723, -3.9469886627147 56.9572388961797, -3.94454600822421 56.958590301444, -3.94163130926517 56.9596293244198, -3.93837574320752 56.9603091903126, -3.92243175473931 56.9626144468511, -3.91961077682849 56.9628815399047, -3.9167446069947 56.9628782560561, -3.91392007626121 56.9626046937823, -3.86901833252952 56.9560161795157, -3.86860100042679 56.9559516518101, -3.86818527052662 56.9558841523619, -3.86736050498749 56.9557373166801, -3.86695175490853 56.9556580312855, -3.86614208632236 56.955487835216, -3.86574144813384 56.955396983468, -3.86494911888026 56.9552038983931, -3.86455770211747 56.9551017319182, -3.8637849064199 56.954886292613, -3.86340379500353 56.9547730943726, -3.86265267281744 56.9545358975146, -3.86228292204524 56.954411981019, -3.86155555313783 56.9541536835355, -3.86119818675657 56.9540193919735, -3.86049658492939 56.9537407092159, -3.86015259229518 56.9535964145015, -3.859478699799 56.9532981182582, -3.85914903313447 56.9531442199985, -3.85850471528935 56.9528271363541, -3.85819028704458 56.9526640607395, -3.85757732706637 56.9523290677787, -3.85727900739181 56.9521572663998, -3.85669910146243 56.9518052917748, -3.85641771579982 56.9516252403694, -3.85587246836076 56.9512572587174, -3.85560879515981 56.9510694558501, -3.855099714493 56.9506864861007, -3.85485448305892 56.9504914517795, -3.8543829770977 56.9500945543139, -3.85415686557696 56.9498928285474, -3.85372423803521 56.949483102268, -3.85351787154359 56.9492752435678, -3.85312531831132 56.9488538228455, -3.85293926721037 56.948640406677, -3.85258787305797 56.9482084582039, -3.8524226513845 56.9479900753909, -3.85211338698131 56.9475487949497, -3.85196945103344 56.9473260500361, -3.85170317027846 56.9468766591845, -3.85158091736294 56.9466501687593, -3.8513583550396 56.9461939114382, -3.85125812238342 56.9459643024259, -3.85107989215498 56.9455024415228, -3.85106876994543 56.9454693200585, -3.85080135089342 56.9437388417591, -3.8511515698226 56.9420146486834, -3.85210620565292 56.9403614235898, -3.85362937381144 56.9388411786124, -3.85566388283624 56.9375109305258, -3.85813338696726 56.9364205643641, -3.86094525293748 56.9356109651383, -3.8639940330384 56.9351124872618, -3.92512221574238 56.9285408594627))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[-3.92512221574238, 56.9285408594627], [-3.92822944077903, 56.9283708176896], [-3.93134301987999, 56.9285237158135], [-3.93435079846033, 56.9289940449617], [-3.93714442572207, 56.9297648617513], [-3.93962325058097, 56.9308083975828], [-3.94169794284562, 56.9320870572563], [-3.9432937101048, 56.9335547712466], [-3.94435299481367, 56.9351586533054], [-3.95002516642373, 56.9472273424314], [-3.9501259851688, 56.9474539613522], [-3.95022138551843, 56.9476812380633], [-3.95039045004625, 56.9481382688737], [-3.95046405689112, 56.948367868693], [-3.9505893196929, 56.948828927143], [-3.95064093309553, 56.9490602301267], [-3.950722053536, 56.9495240712766], [-3.95075153291636, 56.9497564528487], [-3.95078828950757, 56.9502218241762], [-3.95079555403561, 56.9504546568143], [-3.95078784506155, 56.9509203016001], [-3.95077287388843, 56.9511529565295], [-3.95072071770565, 56.9516176172438], [-3.95068355003355, 56.9518494661352], [-3.95058708504866, 56.9523118878377], [-3.95052782003808, 56.9525423045043], [-3.95038730435952, 56.9530012382352], [-3.95030610087456, 56.9532296003243], [-3.95012191164295, 56.9536838064734], [-3.95004448967012, 56.9538535771033], [-3.94884937884666, 56.9556359396723], [-3.9469886627147, 56.9572388961797], [-3.94454600822421, 56.958590301444], [-3.94163130926517, 56.9596293244198], [-3.93837574320752, 56.9603091903126], [-3.92243175473931, 56.9626144468511], [-3.91961077682849, 56.9628815399047], [-3.9167446069947, 56.9628782560561], [-3.91392007626121, 56.9626046937823], [-3.86901833252952, 56.9560161795157], [-3.86860100042679, 56.9559516518101], [-3.86818527052662, 56.9558841523619], [-3.86736050498749, 56.9557373166801], [-3.86695175490853, 56.9556580312855], [-3.86614208632236, 56.955487835216], [-3.86574144813384, 56.955396983468], [-3.86494911888026, 56.9552038983931], [-3.86455770211747, 56.9551017319182], [-3.8637849064199, 56.954886292613], [-3.86340379500353, 56.9547730943726], [-3.86265267281744, 56.9545358975146], [-3.86228292204524, 56.954411981019], [-3.86155555313783, 56.9541536835355], [-3.86119818675657, 56.9540193919735], [-3.86049658492939, 56.9537407092159], [-3.86015259229518, 56.9535964145015], [-3.859478699799, 56.9532981182582], [-3.85914903313447, 56.9531442199985], [-3.85850471528935, 56.9528271363541], [-3.85819028704458, 56.9526640607395], [-3.85757732706637, 56.9523290677787], [-3.85727900739181, 56.9521572663998], [-3.85669910146243, 56.9518052917748], [-3.85641771579982, 56.9516252403694], [-3.85587246836076, 56.9512572587174], [-3.85560879515981, 56.9510694558501], [-3.855099714493, 56.9506864861007], [-3.85485448305892, 56.9504914517795], [-3.8543829770977, 56.9500945543139], [-3.85415686557696, 56.9498928285474], [-3.85372423803521, 56.949483102268], [-3.85351787154359, 56.9492752435678], [-3.85312531831132, 56.9488538228455], [-3.85293926721037, 56.948640406677], [-3.85258787305797, 56.9482084582039], [-3.8524226513845, 56.9479900753909], [-3.85211338698131, 56.9475487949497], [-3.85196945103344, 56.9473260500361], [-3.85170317027846, 56.9468766591845], [-3.85158091736294, 56.9466501687593], [-3.8513583550396, 56.9461939114382], [-3.85125812238342, 56.9459643024259], [-3.85107989215498, 56.9455024415228], [-3.85106876994543, 56.9454693200585], [-3.85080135089342, 56.9437388417591], [-3.8511515698226, 56.9420146486834], [-3.85210620565292, 56.9403614235898], [-3.85362937381144, 56.9388411786124], [-3.85566388283624, 56.9375109305258], [-3.85813338696726, 56.9364205643641], [-3.86094525293748, 56.9356109651383], [-3.8639940330384, 56.9351124872618], [-3.92512221574238, 56.9285408594627]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;3b222c29-9c73-46c2-8acf-ede6745ef6b0&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085657_20230716T085659_TOU_049172_1864.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 52069846, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:59:09.480650Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:04:56.672694Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:04:56.672694Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085657_20230716T085659_TOU_049172_1864&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;97448410fe61cf70224fd0652c6f9f26&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:55.254087Z&#x27;}, {&#x27;Value&#x27;: &#x27;61024d96bd271abb53f9402770f4ba3b54033d6244e4d7aef80ec8bc0536914f&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:55.378950Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:57.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:59.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.063696 44.786495, 12.063043 44.786568, 12.062183 44.786892, 12.061681 44.787277, 12.061294 44.787914, 12.061407 44.788948, 12.062102 44.789658, 12.108637 44.81575, 12.111579 44.817795, 12.117731 44.81921, 12.120149 44.819557, 12.125871 44.825439, 12.131678 44.828896, 12.137984 44.831341, 12.147744 44.832787, 12.148646 44.832767, 12.15069 44.832363, 12.150713 44.840057, 12.151292 44.840973, 12.152246 44.841469, 12.153412 44.841599, 12.154427 44.841381, 12.183663 44.829754, 12.191045 44.80938, 12.107625 44.794365, 12.063696 44.786495)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.063696, 44.786495], [12.063043, 44.786568], [12.062183, 44.786892], [12.061681, 44.787277], [12.061294, 44.787914], [12.061407, 44.788948], [12.062102, 44.789658], [12.108637, 44.81575], [12.111579, 44.817795], [12.117731, 44.81921], [12.120149, 44.819557], [12.125871, 44.825439], [12.131678, 44.828896], [12.137984, 44.831341], [12.147744, 44.832787], [12.148646, 44.832767], [12.15069, 44.832363], [12.150713, 44.840057], [12.151292, 44.840973], [12.152246, 44.841469], [12.153412, 44.841599], [12.154427, 44.841381], [12.183663, 44.829754], [12.191045, 44.80938], [12.107625, 44.794365], [12.063696, 44.786495]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;e794358b-17ca-4c0b-838f-746ea7984ffe&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085622_20230716T085624_TOU_049172_4e69.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 359955724, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:54:07.955847Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:00:16.772575Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:00:16.772575Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085622_20230716T085624_TOU_049172_4e69&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;2e3f7226a147a8d1eccd376238053145&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:00:14.564184Z&#x27;}, {&#x27;Value&#x27;: &#x27;c16fb2177436dd43b2efb77abdade5a4f95c1267efa9926975f40da67e872878&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:00:15.135963Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:22.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:24.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.7566 42.704624, 12.753847 42.711456, 12.753088 42.714531, 12.751438 42.718895, 12.749344 42.725258, 12.74785 42.729328, 12.745897 42.733463, 12.744969 42.736073, 12.72259 42.802532, 12.730043 42.803879, 12.740599 42.803593, 12.872651 42.827179, 12.912236 42.709446, 12.76407 42.68288, 12.7566 42.704624)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.7566, 42.704624], [12.753847, 42.711456], [12.753088, 42.714531], [12.751438, 42.718895], [12.749344, 42.725258], [12.74785, 42.729328], [12.745897, 42.733463], [12.744969, 42.736073], [12.72259, 42.802532], [12.730043, 42.803879], [12.740599, 42.803593], [12.872651, 42.827179], [12.912236, 42.709446], [12.76407, 42.68288], [12.7566, 42.704624]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;8fc2ad1b-4670-4447-98b7-ba48cb6f9ed7&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085706_20230716T085708_TOU_049172_12fa.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 76883767, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:59:14.714724Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:04:56.858271Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:04:56.858271Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085706_20230716T085708_TOU_049172_12fa&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;9b6e5d19aa0c7ad2e9feb3701726819b&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:55.740004Z&#x27;}, {&#x27;Value&#x27;: &#x27;7a67ed3fbec08f3d5ba7c41422e22f9c6421a79574894520fd540c05ef19a5f5&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:55.873604Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:57:06.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:57:08.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((11.87854 45.470097, 11.949956 45.482887, 11.969308 45.430264, 11.895876 45.416401, 11.891255 45.431049, 11.87854 45.470097)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[11.87854, 45.470097], [11.949956, 45.482887], [11.969308, 45.430264], [11.895876, 45.416401], [11.891255, 45.431049], [11.87854, 45.470097]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;ddefd5f3-910f-4296-9957-f6fae5291329&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085707_20230716T085710_TOU_049172_96ae.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 179790810, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:59:32.988143Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:05:00.258191Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:05:00.258191Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085707_20230716T085710_TOU_049172_96ae&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;4403e575fb8a2500b2678f272e8b4f53&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:58.211109Z&#x27;}, {&#x27;Value&#x27;: &#x27;9ced38508990fba54897a8dee4e534f58a32aeae752f8cc9454eecb3318c591e&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:58.490134Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:57:07.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:57:10.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((11.91035 45.594162, 11.954152 45.473873, 11.907569 45.465538, 11.907469 45.463959, 11.875834 45.458344, 11.852882 45.52903, 11.852721 45.52993, 11.852822 45.530838, 11.853178 45.531712, 11.853774 45.532516, 11.85459 45.533218, 11.855595 45.533794, 11.857694 45.534405, 11.842801 45.579926, 11.879796 45.586483, 11.879931 45.588741, 11.91035 45.594162)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[11.91035, 45.594162], [11.954152, 45.473873], [11.907569, 45.465538], [11.907469, 45.463959], [11.875834, 45.458344], [11.852882, 45.52903], [11.852721, 45.52993], [11.852822, 45.530838], [11.853178, 45.531712], [11.853774, 45.532516], [11.85459, 45.533218], [11.855595, 45.533794], [11.857694, 45.534405], [11.842801, 45.579926], [11.879796, 45.586483], [11.879931, 45.588741], [11.91035, 45.594162]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;457dac5c-0806-4263-8ac0-887587e6b7b4&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230821T090139_20230821T090142_TOU_049707_3458.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 306332559, &#x27;OriginDate&#x27;: &#x27;2025-03-12T17:23:55.691093Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T17:30:12.349718Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T17:30:12.349718Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/08/21/DM02_HRS_MS2_1D_20230821T090139_20230821T090142_TOU_049707_3458&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;1222903987f827f88f85b3356a1093c9&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T17:30:10.965283Z&#x27;}, {&#x27;Value&#x27;: &#x27;e069135c286532c56fc42ff8859c7859dd9eaa57b84f119c88bc1adf7e0839a3&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T17:30:11.422025Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-08-21T09:01:39.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-08-21T09:01:42.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.866323 43.906025, 10.866254 43.873684, 10.866693 43.777168, 10.764301 43.758877, 10.722578 43.880428, 10.77338 43.889481, 10.866323 43.906025)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.866323, 43.906025], [10.866254, 43.873684], [10.866693, 43.777168], [10.764301, 43.758877], [10.722578, 43.880428], [10.77338, 43.889481], [10.866323, 43.906025]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;b15cd64e-86bc-4e0b-b550-c30b619633e8&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085620_20230716T085623_TOU_049172_6951.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 372616668, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:53:47.771940Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:00:22.637068Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:00:22.637068Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085620_20230716T085623_TOU_049172_6951&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;ecf5e42fc872996931700345b2165045&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:00:20.159554Z&#x27;}, {&#x27;Value&#x27;: &#x27;7dac23a0106ea6198b40265aabb70c3fa52961340f466889befe3f6bc91867c2&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:00:20.730904Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:20.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:23.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.908535 42.718468, 12.949568 42.596676, 12.847504 42.578186, 12.801163 42.569954, 12.800614 42.571739, 12.796958 42.580353, 12.795039 42.588196, 12.793792 42.592205, 12.791245 42.599609, 12.787052 42.609829, 12.784236 42.61829, 12.779202 42.63451, 12.777261 42.639858, 12.775651 42.645523, 12.774635 42.650375, 12.773649 42.653259, 12.77098 42.662872, 12.768425 42.670746, 12.764701 42.680752, 12.763743 42.684246, 12.76105 42.691837, 12.835117 42.705368, 12.908535 42.718468)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.908535, 42.718468], [12.949568, 42.596676], [12.847504, 42.578186], [12.801163, 42.569954], [12.800614, 42.571739], [12.796958, 42.580353], [12.795039, 42.588196], [12.793792, 42.592205], [12.791245, 42.599609], [12.787052, 42.609829], [12.784236, 42.61829], [12.779202, 42.63451], [12.777261, 42.639858], [12.775651, 42.645523], [12.774635, 42.650375], [12.773649, 42.653259], [12.77098, 42.662872], [12.768425, 42.670746], [12.764701, 42.680752], [12.763743, 42.684246], [12.76105, 42.691837], [12.835117, 42.705368], [12.908535, 42.718468]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;51964363-f596-4a39-89ed-7835a7cd06ff&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085626_20230716T085628_TOU_049172_a5c2.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 353703913, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:54:48.003445Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:01:08.796218Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:01:08.796218Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085626_20230716T085628_TOU_049172_a5c2&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;1561db3b6d9793d001a1ee21333944fa&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:01:06.539894Z&#x27;}, {&#x27;Value&#x27;: &#x27;3de42dd42261cda7030fdcf2d0d455796a508092e626d16aaa0789c8d25c82d3&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:01:07.260386Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:26.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:28.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.749158 43.042061, 12.749824 43.0411, 12.750362 43.039795, 12.750596 43.038216, 12.750193 43.029156, 12.805505 43.027649, 12.838479 42.931084, 12.734388 42.912346, 12.734284 42.910084, 12.68898 42.901913, 12.647849 43.023727, 12.673018 43.028328, 12.749158 43.042061)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.749158, 43.042061], [12.749824, 43.0411], [12.750362, 43.039795], [12.750596, 43.038216], [12.750193, 43.029156], [12.805505, 43.027649], [12.838479, 42.931084], [12.734388, 42.912346], [12.734284, 42.910084], [12.68898, 42.901913], [12.647849, 43.023727], [12.673018, 43.028328], [12.749158, 43.042061]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;73f1802b-408c-4c11-b088-822e0231973c&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091003_20230717T091005_TOU_049187_975c.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 267885662, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:02:41.484770Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:08:11.534338Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:08:11.534338Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091003_20230717T091005_TOU_049187_975c&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;458282ecd129b87dfdd777e33b12656a&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:08:09.747927Z&#x27;}, {&#x27;Value&#x27;: &#x27;78797e3cba168d11b8783c65be79ddd28afff41d51cd7e78650e46188f40a27f&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:08:10.161731Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:03.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:05.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((11.043164 43.042259, 11.044795 43.036175, 11.049973 43.020432, 11.05117 43.016193, 11.056999 42.998745, 11.062012 42.98262, 11.049235 42.980511, 11.048541 42.982738, 10.91076 42.959831, 10.879984 43.058701, 10.880039 43.062458, 11.037251 43.060936, 11.043164 43.042259)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[11.043164, 43.042259], [11.044795, 43.036175], [11.049973, 43.020432], [11.05117, 43.016193], [11.056999, 42.998745], [11.062012, 42.98262], [11.049235, 42.980511], [11.048541, 42.982738], [10.91076, 42.959831], [10.879984, 43.058701], [10.880039, 43.062458], [11.037251, 43.060936], [11.043164, 43.042259]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;fba9aaf1-7283-49bc-8f71-0de6083b84af&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091014_20230717T091016_TOU_049187_b15b.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 341622543, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:04:44.617949Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:10:26.621687Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:10:26.621687Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091014_20230717T091016_TOU_049187_b15b&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;a5a32621b27130e5abdf9a9e9d122363&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:10:24.182746Z&#x27;}, {&#x27;Value&#x27;: &#x27;b30794edca684482977332f21d464a9ea64f55c2e2c2c38152d6bb5b9f17cd95&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:10:24.686312Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:14.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:16.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.665345 43.744419, 10.778398 43.76289, 10.786092 43.740112, 10.826832 43.739792, 10.854771 43.65115, 10.702472 43.625969, 10.665345 43.744419)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.665345, 43.744419], [10.778398, 43.76289], [10.786092, 43.740112], [10.826832, 43.739792], [10.854771, 43.65115], [10.702472, 43.625969], [10.665345, 43.744419]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;708b1214-da71-4bb2-b41b-dcec6673b4ee&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20240709T085850_20240709T085852_TOU_054510_6f7f.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 68482940, &#x27;OriginDate&#x27;: &#x27;2025-03-12T18:22:51.337896Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T18:28:23.190106Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T18:28:23.190106Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2024/07/09/DM02_HRS_MS2_1D_20240709T085850_20240709T085852_TOU_054510_6f7f&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;3214958b367b9eafa77aba11acec6676&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T18:28:22.046533Z&#x27;}, {&#x27;Value&#x27;: &#x27;6f6720d23ee9c14f9758e92f283532cf3c249a5baf9bcb1970207e4f58dff72c&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T18:28:22.188750Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2024-07-09T08:58:50.000000Z&#x27;, &#x27;End&#x27;: &#x27;2024-07-09T08:58:52.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((7.496691 43.842606, 7.50571 43.844463, 7.506232 43.844669, 7.506483 43.8451, 7.507505 43.84874, 7.507788 43.851826, 7.507366 43.852909, 7.506441 43.853851, 7.503001 43.856094, 7.481506 43.864311, 7.520411 43.87104, 7.522943 43.870239, 7.533634 43.861469, 7.536715 43.854904, 7.545344 43.84108, 7.546945 43.826195, 7.540146 43.81115, 7.530144 43.803871, 7.521727 43.800552, 7.509861 43.797863, 7.49524 43.799435, 7.490557 43.801575, 7.481595 43.801353, 7.47977 43.84322, 7.496691 43.842606)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[7.496691, 43.842606], [7.50571, 43.844463], [7.506232, 43.844669], [7.506483, 43.8451], [7.507505, 43.84874], [7.507788, 43.851826], [7.507366, 43.852909], [7.506441, 43.853851], [7.503001, 43.856094], [7.481506, 43.864311], [7.520411, 43.87104], [7.522943, 43.870239], [7.533634, 43.861469], [7.536715, 43.854904], [7.545344, 43.84108], [7.546945, 43.826195], [7.540146, 43.81115], [7.530144, 43.803871], [7.521727, 43.800552], [7.509861, 43.797863], [7.49524, 43.799435], [7.490557, 43.801575], [7.481595, 43.801353], [7.47977, 43.84322], [7.496691, 43.842606]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;7ceca72f-7922-42f6-abd4-f8806cbaf4b5&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085629_20230716T085632_TOU_049172_7202.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 361118675, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:55:27.998959Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:01:24.570286Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:01:24.570286Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085629_20230716T085632_TOU_049172_7202&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;8325a2db05d383653929f62ad609ffe4&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:01:22.443183Z&#x27;}, {&#x27;Value&#x27;: &#x27;d77af1cfaf209d48267313682a910f5218b52df542a24852855902cf0a6669f2&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:01:23.158783Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:29.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:32.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.614678 43.123451, 12.608967 43.13903, 12.608011 43.142376, 12.603655 43.154282, 12.598136 43.170464, 12.594653 43.18166, 12.593019 43.185799, 12.577654 43.235325, 12.578173 43.235409, 12.57506 43.245522, 12.642674 43.257744, 12.650821 43.257561, 12.723553 43.270615, 12.747732 43.200008, 12.745211 43.146854, 12.614678 43.123451)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.614678, 43.123451], [12.608967, 43.13903], [12.608011, 43.142376], [12.603655, 43.154282], [12.598136, 43.170464], [12.594653, 43.18166], [12.593019, 43.185799], [12.577654, 43.235325], [12.578173, 43.235409], [12.57506, 43.245522], [12.642674, 43.257744], [12.650821, 43.257561], [12.723553, 43.270615], [12.747732, 43.200008], [12.745211, 43.146854], [12.614678, 43.123451]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;2e666989-49d7-4663-97ff-a77a7dd47cc4&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230723T085458_20230723T085500_TOU_049276_7390.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 320373614, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:13:29.399933Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:19:26.007038Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:19:26.007038Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/23/DM02_HRS_MS2_1D_20230723T085458_20230723T085500_TOU_049276_7390&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;deecdd2a57d9a1ac7e88a7702f84aed7&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:19:24.639894Z&#x27;}, {&#x27;Value&#x27;: &#x27;4d80abfd8c74a9f6c8caa86edd97fa880eed191bd2f1c275d59961903b873630&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:19:25.123375Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-23T08:54:58.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-23T08:55:00.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((13.775313 42.481709, 13.760893 42.526287, 13.764482 42.526566, 13.772516 42.526443, 13.760712 42.526886, 13.736702 42.600891, 13.866789 42.623741, 13.893795 42.540379, 13.894288 42.540295, 13.894532 42.540028, 13.905302 42.506672, 13.905218 42.506416, 13.904841 42.506214, 13.861458 42.498585, 13.861727 42.496815, 13.775313 42.481709)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[13.775313, 42.481709], [13.760893, 42.526287], [13.764482, 42.526566], [13.772516, 42.526443], [13.760712, 42.526886], [13.736702, 42.600891], [13.866789, 42.623741], [13.893795, 42.540379], [13.894288, 42.540295], [13.894532, 42.540028], [13.905302, 42.506672], [13.905218, 42.506416], [13.904841, 42.506214], [13.861458, 42.498585], [13.861727, 42.496815], [13.775313, 42.481709]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;0e7ee994-f778-44ae-a4f3-90621f57b668&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085627_20230716T085630_TOU_049172_5051.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 271811896, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:55:07.819257Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:01:20.628870Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:01:20.628870Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085627_20230716T085630_TOU_049172_5051&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;e6e4e9528c94e325b63f1ac58f397a6c&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:01:19.152325Z&#x27;}, {&#x27;Value&#x27;: &#x27;b94b62b44a1352711027c70cefdf70a3b858a547428b79fd1d09e3e6fe69b3cf&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:01:19.588521Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:27.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:30.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.657528 43.013557, 12.651219 43.013714, 12.63798 43.05386, 12.632931 43.070301, 12.63008 43.076717, 12.628839 43.081879, 12.623888 43.095623, 12.614773 43.123367, 12.611332 43.13261, 12.745707 43.156586, 12.739732 43.028397, 12.657528 43.013557)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.657528, 43.013557], [12.651219, 43.013714], [12.63798, 43.05386], [12.632931, 43.070301], [12.63008, 43.076717], [12.628839, 43.081879], [12.623888, 43.095623], [12.614773, 43.123367], [12.611332, 43.13261], [12.745707, 43.156586], [12.739732, 43.028397], [12.657528, 43.013557]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;e7297118-1a61-4397-894d-7c5a118abad0&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T090954_20230717T090956_TOU_049187_80be.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 52499061, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:00:55.421953Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:07:12.307512Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:07:12.307512Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T090954_20230717T090956_TOU_049187_80be&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;0be1b88dbba4f28b8951c57509faa7cc&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:07:11.177076Z&#x27;}, {&#x27;Value&#x27;: &#x27;51473e9352f01f599f7c059e809cbcdfcdfe2cf2ba8b1dae9fd00830ee5ba17a&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:07:11.288083Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:09:54.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:09:56.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((11.187657 42.478104, 11.191243 42.478874, 11.190988 42.48127, 11.193316 42.488323, 11.20061 42.495655, 11.210157 42.496723, 11.231499 42.426746, 11.227482 42.426083, 11.173494 42.425133, 11.174503 42.476818, 11.187657 42.478104)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[11.187657, 42.478104], [11.191243, 42.478874], [11.190988, 42.48127], [11.193316, 42.488323], [11.20061, 42.495655], [11.210157, 42.496723], [11.231499, 42.426746], [11.227482, 42.426083], [11.173494, 42.425133], [11.174503, 42.476818], [11.187657, 42.478104]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;587fe02d-6a8f-4e8a-911f-65455b742602&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230723T085500_20230723T085502_TOU_049276_81db.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 326665536, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:13:33.443916Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:19:27.303395Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:19:27.303395Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/23/DM02_HRS_MS2_1D_20230723T085500_20230723T085502_TOU_049276_81db&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;ca4d0edff9ff80a559f313df18a75f0f&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:19:25.812691Z&#x27;}, {&#x27;Value&#x27;: &#x27;eca575ea48f0d5319a271df03894c4fbfa916933bf1a215d52f845c63078feb2&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:19:26.309217Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-23T08:55:00.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-23T08:55:02.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((13.7396 42.59198, 13.730712 42.619137, 13.700366 42.713463, 13.830316 42.736198, 13.830564 42.735428, 13.830824 42.735474, 13.869648 42.6147, 13.7396 42.59198)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[13.7396, 42.59198], [13.730712, 42.619137], [13.700366, 42.713463], [13.830316, 42.736198], [13.830564, 42.735428], [13.830824, 42.735474], [13.869648, 42.6147], [13.7396, 42.59198]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;6ec1a31d-4e28-43c0-b124-0fde507cbcda&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085624_20230716T085626_TOU_049172_aac1.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 372834023, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:54:39.542529Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:01:19.976790Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:01:19.976790Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085624_20230716T085626_TOU_049172_aac1&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;6ac241c199ea9aee1d50a4bfcfc80788&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:01:18.060547Z&#x27;}, {&#x27;Value&#x27;: &#x27;1ff02f159bdb342e1f5a92057539618ebc6b8830990b5c54bc5597bbbe6229aa&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:01:18.619315Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:24.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:26.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.834789 42.940079, 12.876139 42.818176, 12.726345 42.791298, 12.685829 42.91111, 12.710093 42.915485, 12.710193 42.917656, 12.761181 42.926819, 12.834789 42.940079)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.834789, 42.940079], [12.876139, 42.818176], [12.726345, 42.791298], [12.685829, 42.91111], [12.710093, 42.915485], [12.710193, 42.917656], [12.761181, 42.926819], [12.834789, 42.940079]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;c93cd572-c198-474b-a5ec-c34c1f3bb25d&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T090952_20230717T090955_TOU_049187_9192.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 91096441, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:00:30.295123Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:06:08.960023Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:06:08.960023Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T090952_20230717T090955_TOU_049187_9192&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;3231c8119742c80378966edf9c3b0c61&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:06:07.530967Z&#x27;}, {&#x27;Value&#x27;: &#x27;79fb2f63e9f8dcfdc55db979012fe512970bb8847590b0880cc62d8899e88822&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:06:07.705437Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:09:52.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:09:55.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((11.159213 42.42448, 11.158489 42.410774, 11.159436 42.402386, 11.15866 42.399799, 11.197217 42.400143, 11.196497 42.363861, 11.09366 42.365028, 11.093727 42.394424, 11.093438 42.413528, 11.159213 42.42448)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[11.159213, 42.42448], [11.158489, 42.410774], [11.159436, 42.402386], [11.15866, 42.399799], [11.197217, 42.400143], [11.196497, 42.363861], [11.09366, 42.365028], [11.093727, 42.394424], [11.093438, 42.413528], [11.159213, 42.42448]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;e16794ed-2bc0-4b19-8109-76e6657a1831&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T090954_20230717T090956_TOU_049187_9551.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 43725638, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:01:07.439118Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:07:12.001099Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:07:12.001099Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T090954_20230717T090956_TOU_049187_9551&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;999b2bc070b79e42072c7719ccd662f1&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:07:11.035664Z&#x27;}, {&#x27;Value&#x27;: &#x27;f209fe6dfa5739ebec1771cc5fb43bca2c1967f9e651cccd854b2e2ac49a2007&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:07:11.140832Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:09:54.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:09:56.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((11.151079 42.541603, 11.152858 42.53059, 11.152945 42.528763, 11.152426 42.526066, 11.148349 42.514954, 11.147072 42.512558, 11.145509 42.510738, 11.144005 42.509464, 11.132977 42.50161, 11.131928 42.500072, 11.130925 42.498981, 11.129859 42.498047, 11.127777 42.496662, 11.126131 42.49585, 11.123258 42.494877, 11.120325 42.494347, 11.117285 42.494228, 11.114047 42.494572, 11.110537 42.495533, 11.096586 42.500935, 11.089315 42.504272, 11.083745 42.507446, 11.08042 42.508984, 11.07613 42.511227, 11.061893 42.51968, 11.05977 42.521366, 11.05874 42.522484, 11.057434 42.524464, 11.056863 42.525795, 11.0568 42.526012, 11.056952 42.526047, 11.08157 42.530106, 11.151079 42.541603)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[11.151079, 42.541603], [11.152858, 42.53059], [11.152945, 42.528763], [11.152426, 42.526066], [11.148349, 42.514954], [11.147072, 42.512558], [11.145509, 42.510738], [11.144005, 42.509464], [11.132977, 42.50161], [11.131928, 42.500072], [11.130925, 42.498981], [11.129859, 42.498047], [11.127777, 42.496662], [11.126131, 42.49585], [11.123258, 42.494877], [11.120325, 42.494347], [11.117285, 42.494228], [11.114047, 42.494572], [11.110537, 42.495533], [11.096586, 42.500935], [11.089315, 42.504272], [11.083745, 42.507446], [11.08042, 42.508984], [11.07613, 42.511227], [11.061893, 42.51968], [11.05977, 42.521366], [11.05874, 42.522484], [11.057434, 42.524464], [11.056863, 42.525795], [11.0568, 42.526012], [11.056952, 42.526047], [11.08157, 42.530106], [11.151079, 42.541603]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;02590e5f-d263-44c2-ba77-e27d64c59837&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091019_20230717T091022_TOU_049187_5499.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 258806557, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:05:45.021845Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:11:19.614186Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:11:19.614186Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091019_20230717T091022_TOU_049187_5499&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;8510d243f711d149722223b2261727d3&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:11:18.205043Z&#x27;}, {&#x27;Value&#x27;: &#x27;0b2249c435aedad18edabcbf2837bbe3f423203d7cf1fc30eeed458610cf077e&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:11:18.622104Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:19.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:22.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.664117 44.096294, 10.699605 43.993546, 10.699929 43.993607, 10.7062 43.974949, 10.622066 43.96096, 10.597187 43.957008, 10.583507 44.000477, 10.582717 44.003639, 10.581915 44.00552, 10.579871 44.012569, 10.57913 44.014359, 10.558761 44.078911, 10.56286 44.079609, 10.563973 44.079475, 10.566285 44.078941, 10.569386 44.077553, 10.571462 44.075947, 10.583941 44.063431, 10.584234 44.083157, 10.664117 44.096294)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.664117, 44.096294], [10.699605, 43.993546], [10.699929, 43.993607], [10.7062, 43.974949], [10.622066, 43.96096], [10.597187, 43.957008], [10.583507, 44.000477], [10.582717, 44.003639], [10.581915, 44.00552], [10.579871, 44.012569], [10.57913, 44.014359], [10.558761, 44.078911], [10.56286, 44.079609], [10.563973, 44.079475], [10.566285, 44.078941], [10.569386, 44.077553], [10.571462, 44.075947], [10.583941, 44.063431], [10.584234, 44.083157], [10.664117, 44.096294]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;b7cd6e57-7d88-45e7-a406-334356673760&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091034_20230717T091036_TOU_049187_87d6.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 249771975, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:07:49.729831Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:14:23.303918Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:14:23.303918Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091034_20230717T091036_TOU_049187_87d6&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;2a45a02bf10ba0fb4ffab81702372aec&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:14:21.887604Z&#x27;}, {&#x27;Value&#x27;: &#x27;31527e42199dd55b4743b9388a85e5dbb5b42aa1e729da1fa2c699455c8857c5&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:14:22.261868Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:34.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:36.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.405458 44.988453, 10.406775 44.988617, 10.421255 44.988407, 10.421665 44.879997, 10.316324 44.881058, 10.316305 44.877834, 10.316088 44.876228, 10.315293 44.87418, 10.313982 44.872349, 10.312122 44.870689, 10.309803 44.869324, 10.307132 44.868328, 10.304445 44.867779, 10.27247 44.966625, 10.321277 44.974682, 10.405458 44.988453)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.405458, 44.988453], [10.406775, 44.988617], [10.421255, 44.988407], [10.421665, 44.879997], [10.316324, 44.881058], [10.316305, 44.877834], [10.316088, 44.876228], [10.315293, 44.87418], [10.313982, 44.872349], [10.312122, 44.870689], [10.309803, 44.869324], [10.307132, 44.868328], [10.304445, 44.867779], [10.27247, 44.966625], [10.321277, 44.974682], [10.405458, 44.988453]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;e86c1f12-f475-40c7-8ea0-9ab1f6b631d8&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085644_20230716T085646_TOU_049172_bd06.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 54676233, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:58:14.233491Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:04:05.734238Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:04:05.734238Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085644_20230716T085646_TOU_049172_bd06&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;e04a9ca6a3e541237bd3b6917bd2c628&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:02.763837Z&#x27;}, {&#x27;Value&#x27;: &#x27;a679b95a9554650a1ed2f89318094adb7adbead67a8f1c4fab1102314e2a1a3f&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:04:02.890256Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:44.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:46.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.341571 44.143196, 12.341741 44.142017, 12.341016 44.067348, 12.340868 44.066326, 12.340301 44.065083, 12.339495 44.064121, 12.338433 44.063305, 12.337161 44.06266, 12.335981 44.062283, 12.334344 44.062016, 12.323477 44.061188, 12.321926 44.061207, 12.320663 44.061398, 12.319003 44.061924, 12.317759 44.062595, 12.316883 44.06329, 12.316075 44.064247, 12.315551 44.065304, 12.29394 44.134663, 12.319657 44.139267, 12.341571 44.143196)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.341571, 44.143196], [12.341741, 44.142017], [12.341016, 44.067348], [12.340868, 44.066326], [12.340301, 44.065083], [12.339495, 44.064121], [12.338433, 44.063305], [12.337161, 44.06266], [12.335981, 44.062283], [12.334344, 44.062016], [12.323477, 44.061188], [12.321926, 44.061207], [12.320663, 44.061398], [12.319003, 44.061924], [12.317759, 44.062595], [12.316883, 44.06329], [12.316075, 44.064247], [12.315551, 44.065304], [12.29394, 44.134663], [12.319657, 44.139267], [12.341571, 44.143196]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;4d0ed0f1-ea70-47b6-bd16-682312f06da3&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091018_20230717T091020_TOU_049187_80cf.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 261445979, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:05:43.419682Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:11:19.732144Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:11:19.732144Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091018_20230717T091020_TOU_049187_80cf&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;35adc980a191bf1f23ccafae1db61554&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:11:18.091185Z&#x27;}, {&#x27;Value&#x27;: &#x27;8f1a1a72cf8120172527af8cf42ab83d9552177683cc0d5c8113f69245797e03&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:11:18.506960Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:18.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:20.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.632862 43.846031, 10.59438 43.966942, 10.599589 43.966911, 10.70311 43.984154, 10.742571 43.866467, 10.644956 43.850204, 10.645614 43.848064, 10.632862 43.846031)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.632862, 43.846031], [10.59438, 43.966942], [10.599589, 43.966911], [10.70311, 43.984154], [10.742571, 43.866467], [10.644956, 43.850204], [10.645614, 43.848064], [10.632862, 43.846031]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;274fda07-4313-4363-b06a-c552fd6b6d3e&#x27;, &#x27;Name&#x27;: &#x27;SP06_NAO_MS4__3_20180701T112259_20180701T112328_TOU_1234_c0d3_COG.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 13163852, &#x27;OriginDate&#x27;: &#x27;2025-02-24T15:51:36.248949Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-02-24T16:52:24.906430Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-02-24T16:52:24.906430Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2018/NAO_MS4__3_E1F0-COG/2018/07/01/SP06_NAO_MS4__3_20180701T112259_20180701T112328_TOU_1234_c0d3_COG&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;8c4490221fa293676b1053aeee0b70a0&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:52:24.010086Z&#x27;}, {&#x27;Value&#x27;: &#x27;94aaa62eaae9ce2921dc74b9d9c6a2f56a276103afd4608408b2dfcf90b82cc8&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:52:24.060316Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2018-07-01T11:22:59.000000Z&#x27;, &#x27;End&#x27;: &#x27;2018-07-01T11:23:28.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((-3.76376923586395 56.9458210371797, -3.76702890019692 56.9456549732376, -3.77028810198257 56.9458435620981, -3.77341792042187 56.9463793424718, -3.77629454280465 56.9472411191681, -3.77880415356066 56.9483948000747, -3.78084743153296 56.9497947425299, -3.7823434786977 56.9513855562817, -3.78323302524956 56.953104292248, -3.78330431095847 56.9533234986844, -3.78343224924143 56.9537870761862, -3.78348507669044 56.9540196617682, -3.78356837465387 56.9544861048356, -3.78359881701821 56.954719806245, -3.78363724556636 56.9551878482602, -3.78364521819242 56.9554220271189, -3.78363866886948 56.9558903816325, -3.78362414886708 56.9561243982459, -3.78357263665087 56.9565917936478, -3.78353566220409 56.9568250087248, -3.78343932733162 56.9572901547211, -3.78337999859311 56.957521931292, -3.78323909902186 56.9579835719767, -3.78315757658266 56.9582132766559, -3.78297249657253 56.9586701428188, -3.78286900200154 56.9588971481263, -3.78276004665108 56.9591234003319, -3.74134616233358 57.0405868401959, -3.741226476886 57.0408104163506, -3.73478739659465 57.0527188622535, -3.73466116172448 57.0529431224879, -3.73438707715556 57.0533878347822, -3.73423932482157 57.0536081284563, -3.73392260240989 57.0540442898064, -3.73375373789726 57.0542600117615, -3.73339523545673 57.0546864387483, -3.73320572161754 57.054896995903, -3.73280642819671 57.0553125088621, -3.7325967848514 57.0555173226565, -3.732157793975 57.0559207818849, -3.7319285965646 57.0561192891597, -3.73145110959412 57.0565095881991, -3.73120298695919 57.0567012433552, -3.7306883234293 57.0570773023726, -3.7304219569454 57.0572615786561, -3.72987152229878 57.0576223698446, -3.72958764332668 57.0577987606273, -3.72900295430568 57.0581432887667, -3.728702342741 57.0583113090759, -3.72808499578843 57.0586386322353, -3.72776847718413 57.0587978200689, -3.72712018673408 57.059107028884, -3.72678863100862 57.0592569467232, -3.72611115459401 57.059547202318, -3.72576547256591 57.0596874377732, -3.72506069223546 57.0599579330241, -3.72470183393947 57.0600881006629, -3.72397167427792 57.0603380967969, -3.72360062624057 57.0604578385279, -3.72284710328255 57.0606866449918, -3.7224648852472 57.0607956316948, -3.72169006266918 57.0610026217121, -3.72129772567772 57.0611005535362, -3.72050374199367 57.0612851557329, -3.72010236436307 57.0613717635304, -3.71929139163619 57.0615334727332, -3.71888207729566 57.0616085181472, -3.718056349201 57.061746888476, -3.71764022340627 57.061810165127, -3.71680202319739 57.0619248142929, -3.71638023050971 57.0619761482686, -3.71553183856994 57.0620667641523, -3.7155168286683 57.0620681461562, -3.7123388984078 57.0621912420703, -3.70917308641621 57.0619805299246, -3.7061373981006 57.0614438626651, -3.70334497916145 57.0606012428046, -3.70089989085359 57.0594840755595, -3.69889322701452 57.0581339963274, -3.69739971849808 57.0566013165802, -3.69647495184701 57.0549431465396, -3.66361604541272 56.9655790439758, -3.66338296308559 56.9647371794344, -3.66329708601667 56.9638203856964, -3.66359726974339 56.9621206362813, -3.6639725003783 56.9612848643869, -3.66440941897458 56.9605886605441, -3.66482381111998 56.9600592284313, -3.66552236628472 56.9593310341911, -3.6679846023737 56.957574973039, -3.66812408315294 56.9574986107823, -3.66837448730937 56.9573660377596, -3.66939008396216 56.9568816770531, -3.67179558466287 56.9560059418416, -3.67182693029712 56.9559966256657, -3.67318322400336 56.9556376500538, -3.67653999081098 56.9550742172844, -3.76376923586395 56.9458210371797))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[-3.76376923586395, 56.9458210371797], [-3.76702890019692, 56.9456549732376], [-3.77028810198257, 56.9458435620981], [-3.77341792042187, 56.9463793424718], [-3.77629454280465, 56.9472411191681], [-3.77880415356066, 56.9483948000747], [-3.78084743153296, 56.9497947425299], [-3.7823434786977, 56.9513855562817], [-3.78323302524956, 56.953104292248], [-3.78330431095847, 56.9533234986844], [-3.78343224924143, 56.9537870761862], [-3.78348507669044, 56.9540196617682], [-3.78356837465387, 56.9544861048356], [-3.78359881701821, 56.954719806245], [-3.78363724556636, 56.9551878482602], [-3.78364521819242, 56.9554220271189], [-3.78363866886948, 56.9558903816325], [-3.78362414886708, 56.9561243982459], [-3.78357263665087, 56.9565917936478], [-3.78353566220409, 56.9568250087248], [-3.78343932733162, 56.9572901547211], [-3.78337999859311, 56.957521931292], [-3.78323909902186, 56.9579835719767], [-3.78315757658266, 56.9582132766559], [-3.78297249657253, 56.9586701428188], [-3.78286900200154, 56.9588971481263], [-3.78276004665108, 56.9591234003319], [-3.74134616233358, 57.0405868401959], [-3.741226476886, 57.0408104163506], [-3.73478739659465, 57.0527188622535], [-3.73466116172448, 57.0529431224879], [-3.73438707715556, 57.0533878347822], [-3.73423932482157, 57.0536081284563], [-3.73392260240989, 57.0540442898064], [-3.73375373789726, 57.0542600117615], [-3.73339523545673, 57.0546864387483], [-3.73320572161754, 57.054896995903], [-3.73280642819671, 57.0553125088621], [-3.7325967848514, 57.0555173226565], [-3.732157793975, 57.0559207818849], [-3.7319285965646, 57.0561192891597], [-3.73145110959412, 57.0565095881991], [-3.73120298695919, 57.0567012433552], [-3.7306883234293, 57.0570773023726], [-3.7304219569454, 57.0572615786561], [-3.72987152229878, 57.0576223698446], [-3.72958764332668, 57.0577987606273], [-3.72900295430568, 57.0581432887667], [-3.728702342741, 57.0583113090759], [-3.72808499578843, 57.0586386322353], [-3.72776847718413, 57.0587978200689], [-3.72712018673408, 57.059107028884], [-3.72678863100862, 57.0592569467232], [-3.72611115459401, 57.059547202318], [-3.72576547256591, 57.0596874377732], [-3.72506069223546, 57.0599579330241], [-3.72470183393947, 57.0600881006629], [-3.72397167427792, 57.0603380967969], [-3.72360062624057, 57.0604578385279], [-3.72284710328255, 57.0606866449918], [-3.7224648852472, 57.0607956316948], [-3.72169006266918, 57.0610026217121], [-3.72129772567772, 57.0611005535362], [-3.72050374199367, 57.0612851557329], [-3.72010236436307, 57.0613717635304], [-3.71929139163619, 57.0615334727332], [-3.71888207729566, 57.0616085181472], [-3.718056349201, 57.061746888476], [-3.71764022340627, 57.061810165127], [-3.71680202319739, 57.0619248142929], [-3.71638023050971, 57.0619761482686], [-3.71553183856994, 57.0620667641523], [-3.7155168286683, 57.0620681461562], [-3.7123388984078, 57.0621912420703], [-3.70917308641621, 57.0619805299246], [-3.7061373981006, 57.0614438626651], [-3.70334497916145, 57.0606012428046], [-3.70089989085359, 57.0594840755595], [-3.69889322701452, 57.0581339963274], [-3.69739971849808, 57.0566013165802], [-3.69647495184701, 57.0549431465396], [-3.66361604541272, 56.9655790439758], [-3.66338296308559, 56.9647371794344], [-3.66329708601667, 56.9638203856964], [-3.66359726974339, 56.9621206362813], [-3.6639725003783, 56.9612848643869], [-3.66440941897458, 56.9605886605441], [-3.66482381111998, 56.9600592284313], [-3.66552236628472, 56.9593310341911], [-3.6679846023737, 56.957574973039], [-3.66812408315294, 56.9574986107823], [-3.66837448730937, 56.9573660377596], [-3.66939008396216, 56.9568816770531], [-3.67179558466287, 56.9560059418416], [-3.67182693029712, 56.9559966256657], [-3.67318322400336, 56.9556376500538], [-3.67653999081098, 56.9550742172844], [-3.76376923586395, 56.9458210371797]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;1282d821-64ec-4224-972b-00b7fc1d925c&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T090956_20230717T090958_TOU_049187_df20.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 146134753, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:01:39.952654Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:07:14.552030Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:07:14.552030Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T090956_20230717T090958_TOU_049187_df20&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;ddde74e251d45a56485510ccc8c58a47&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:07:12.877369Z&#x27;}, {&#x27;Value&#x27;: &#x27;818aae61acbb1748513e6b90ea54a79ad0005f7d0d356cb68f1acdb77209b778&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:07:13.132810Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:09:56.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:09:58.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((11.176149 42.607979, 11.182536 42.587482, 11.153824 42.587135, 11.155831 42.581955, 11.155519 42.5765, 11.153003 42.571278, 11.148359 42.566261, 11.142253 42.562759, 11.135924 42.560658, 11.128093 42.560581, 11.121958 42.561001, 11.117853 42.562218, 11.11678 42.562298, 11.109444 42.565048, 11.102566 42.570312, 11.100119 42.577579, 11.100384 42.583088, 11.097826 42.585972, 11.075997 42.5854, 11.076056 42.550156, 11.081214 42.553459, 11.085212 42.556377, 11.087559 42.557632, 11.0896 42.558357, 11.099176 42.56097, 11.101114 42.561363, 11.10425 42.561581, 11.117423 42.561283, 11.120481 42.560947, 11.122741 42.560352, 11.124855 42.559467, 11.131512 42.555195, 11.158712 42.540314, 11.1613 42.538239, 11.162619 42.536499, 11.163457 42.534649, 11.163814 42.532417, 11.066736 42.516438, 11.065769 42.518986, 11.065641 42.521011, 11.067959 42.538422, 11.051722 42.563351, 11.048627 42.569679, 11.046855 42.574898, 11.043306 42.577168, 11.038747 42.580711, 11.035575 42.583687, 11.032269 42.587406, 11.027113 42.59449, 11.018795 42.609619, 11.176149 42.607979)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[11.176149, 42.607979], [11.182536, 42.587482], [11.153824, 42.587135], [11.155831, 42.581955], [11.155519, 42.5765], [11.153003, 42.571278], [11.148359, 42.566261], [11.142253, 42.562759], [11.135924, 42.560658], [11.128093, 42.560581], [11.121958, 42.561001], [11.117853, 42.562218], [11.11678, 42.562298], [11.109444, 42.565048], [11.102566, 42.570312], [11.100119, 42.577579], [11.100384, 42.583088], [11.097826, 42.585972], [11.075997, 42.5854], [11.076056, 42.550156], [11.081214, 42.553459], [11.085212, 42.556377], [11.087559, 42.557632], [11.0896, 42.558357], [11.099176, 42.56097], [11.101114, 42.561363], [11.10425, 42.561581], [11.117423, 42.561283], [11.120481, 42.560947], [11.122741, 42.560352], [11.124855, 42.559467], [11.131512, 42.555195], [11.158712, 42.540314], [11.1613, 42.538239], [11.162619, 42.536499], [11.163457, 42.534649], [11.163814, 42.532417], [11.066736, 42.516438], [11.065769, 42.518986], [11.065641, 42.521011], [11.067959, 42.538422], [11.051722, 42.563351], [11.048627, 42.569679], [11.046855, 42.574898], [11.043306, 42.577168], [11.038747, 42.580711], [11.035575, 42.583687], [11.032269, 42.587406], [11.027113, 42.59449], [11.018795, 42.609619], [11.176149, 42.607979]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;26d176ef-f7d2-4306-b083-845195afe147&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091050_20230717T091053_TOU_049187_0436.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 91181697, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:09:33.840362Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:15:21.981296Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:15:21.981296Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091050_20230717T091053_TOU_049187_0436&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;6fdbb3626a50ae42d384e17b02d05a8e&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:15:20.500272Z&#x27;}, {&#x27;Value&#x27;: &#x27;0ef8d897d88b775a3a5ba00db258ee8be822b7611f5794846b5b16177b52a140&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:15:20.664829Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:50.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:53.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.094834 45.936954, 10.09477 45.900177, 10.012331 45.880756, 10.012965 45.870567, 9.973799 45.871365, 9.96207 45.9063, 10.094834 45.936954)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.094834, 45.936954], [10.09477, 45.900177], [10.012331, 45.880756], [10.012965, 45.870567], [9.973799, 45.871365], [9.96207, 45.9063], [10.094834, 45.936954]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;0dd3aace-59fd-40a2-9c01-23b0e3014369&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230807T090526_20230807T090528_TOU_049499_144b.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 349851489, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:38:58.294516Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:44:41.546787Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:44:41.546787Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/08/07/DM02_HRS_MS2_1D_20230807T090526_20230807T090528_TOU_049499_144b&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;e8239a3272a9b5918855990a54af5409&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:44:39.973806Z&#x27;}, {&#x27;Value&#x27;: &#x27;fca0acb3882e12aeb1934ec781d6ab08dc711c0aa108090890bfcd3d4443af2a&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:44:40.522241Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-08-07T09:05:26.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-08-07T09:05:28.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((11.764155 43.067669, 11.77142 43.043636, 11.784634 43.002068, 11.794694 42.969143, 11.644989 42.944054, 11.607416 43.064236, 11.656625 43.072433, 11.659796 43.070648, 11.758041 43.086918, 11.764155 43.067669)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[11.764155, 43.067669], [11.77142, 43.043636], [11.784634, 43.002068], [11.794694, 42.969143], [11.644989, 42.944054], [11.607416, 43.064236], [11.656625, 43.072433], [11.659796, 43.070648], [11.758041, 43.086918], [11.764155, 43.067669]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;f4ff4e60-e93e-4987-96be-6b1371f907dd&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091005_20230717T091007_TOU_049187_94c8.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 101955039, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:02:56.518461Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:09:16.607039Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:09:16.607039Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091005_20230717T091007_TOU_049187_94c8&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;908b4b304167ba582f77f44e8c9ba0d8&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:09:14.081031Z&#x27;}, {&#x27;Value&#x27;: &#x27;bca88212a28f44604f6fb14d5aa89b914efaa879ac858e5b939ed710b0a31815&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:09:14.323809Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:05.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:07.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.922547 43.20454, 10.932958 43.200165, 10.939593 43.192654, 10.940345 43.187878, 10.951566 43.191753, 10.960651 43.191814, 10.968766 43.191387, 10.973744 43.19009, 10.977578 43.189331, 10.9846 43.185913, 10.990906 43.179333, 10.993095 43.170959, 10.990544 43.160416, 10.989278 43.158764, 10.987644 43.154938, 10.979859 43.147991, 10.975769 43.145267, 10.970318 43.143303, 10.959989 43.142502, 10.941602 43.145214, 10.925189 43.152065, 10.923965 43.15604, 10.915763 43.150978, 10.881219 43.141529, 10.882062 43.197876, 10.907193 43.202007, 10.922547 43.20454)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.922547, 43.20454], [10.932958, 43.200165], [10.939593, 43.192654], [10.940345, 43.187878], [10.951566, 43.191753], [10.960651, 43.191814], [10.968766, 43.191387], [10.973744, 43.19009], [10.977578, 43.189331], [10.9846, 43.185913], [10.990906, 43.179333], [10.993095, 43.170959], [10.990544, 43.160416], [10.989278, 43.158764], [10.987644, 43.154938], [10.979859, 43.147991], [10.975769, 43.145267], [10.970318, 43.143303], [10.959989, 43.142502], [10.941602, 43.145214], [10.925189, 43.152065], [10.923965, 43.15604], [10.915763, 43.150978], [10.881219, 43.141529], [10.882062, 43.197876], [10.907193, 43.202007], [10.922547, 43.20454]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;076f0d1c-eeca-4f6e-8686-6548bd94f947&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085635_20230716T085637_TOU_049172_46c0.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 349251146, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:56:33.158421Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:02:11.523149Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:02:11.523149Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085635_20230716T085637_TOU_049172_46c0&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;12bf9798ba33df92d389addb5be8f74d&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:02:09.760601Z&#x27;}, {&#x27;Value&#x27;: &#x27;d2953fb54b96b22f8cb7fec2a7a58f1ffde17f70a71a64b62a8e36029fc54825&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:02:10.519272Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:35.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:37.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.609849 43.603836, 12.652244 43.482052, 12.505759 43.455727, 12.505176 43.456211, 12.504179 43.457836, 12.4952 43.486954, 12.4953 43.487865, 12.495653 43.488743, 12.496237 43.489552, 12.497025 43.490257, 12.498 43.490829, 12.5 43.491425, 12.476493 43.566498, 12.477159 43.566605, 12.473145 43.579277, 12.524056 43.588417, 12.609849 43.603836)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.609849, 43.603836], [12.652244, 43.482052], [12.505759, 43.455727], [12.505176, 43.456211], [12.504179, 43.457836], [12.4952, 43.486954], [12.4953, 43.487865], [12.495653, 43.488743], [12.496237, 43.489552], [12.497025, 43.490257], [12.498, 43.490829], [12.5, 43.491425], [12.476493, 43.566498], [12.477159, 43.566605], [12.473145, 43.579277], [12.524056, 43.588417], [12.609849, 43.603836]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;8b85781a-90d0-4739-b706-678b9a5c1077&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085633_20230716T085635_TOU_049172_e536.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 351503255, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:56:08.113937Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:02:13.077717Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:02:13.077717Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085633_20230716T085635_TOU_049172_e536&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;7f182814878ce55ce09ff5ff32141da4&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:02:11.098730Z&#x27;}, {&#x27;Value&#x27;: &#x27;dbad4d4f6614f4a75c9ed47283a217ed94fd799b6989238f0c064a20a8de759f&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:02:11.626403Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:33.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:35.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.620481 43.488358, 12.64707 43.492985, 12.649029 43.492088, 12.689095 43.373791, 12.54422 43.347515, 12.510142 43.456001, 12.511024 43.456142, 12.507332 43.467949, 12.558234 43.477127, 12.620481 43.488358)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.620481, 43.488358], [12.64707, 43.492985], [12.649029, 43.492088], [12.689095, 43.373791], [12.54422, 43.347515], [12.510142, 43.456001], [12.511024, 43.456142], [12.507332, 43.467949], [12.558234, 43.477127], [12.620481, 43.488358]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;2fc17ba8-2461-4159-b99c-4573fa27020e&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230716T085631_20230716T085633_TOU_049172_a5bc.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 368252258, &#x27;OriginDate&#x27;: &#x27;2025-03-12T15:56:00.393627Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:02:18.870595Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:02:18.870595Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/16/DM02_HRS_MS2_1D_20230716T085631_20230716T085633_TOU_049172_a5bc&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;5692595098d75f9b8f3276a38924a38e&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:02:17.191311Z&#x27;}, {&#x27;Value&#x27;: &#x27;8f08c0273b25588842edb171c50d7e011a3c0c80d98e960c3df79d6a680a293f&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:02:17.736570Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-16T08:56:31.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-16T08:56:33.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((12.685653 43.382786, 12.727233 43.261055, 12.576741 43.234005, 12.572994 43.244946, 12.565024 43.269527, 12.567412 43.270161, 12.543991 43.345657, 12.544765 43.345779, 12.541322 43.356754, 12.61753 43.370518, 12.685653 43.382786)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[12.685653, 43.382786], [12.727233, 43.261055], [12.576741, 43.234005], [12.572994, 43.244946], [12.565024, 43.269527], [12.567412, 43.270161], [12.543991, 43.345657], [12.544765, 43.345779], [12.541322, 43.356754], [12.61753, 43.370518], [12.685653, 43.382786]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;ccfa34b4-4f0c-4a27-8e63-ce4b0e3c08ce&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091009_20230717T091011_TOU_049187_8669.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 51649331, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:03:42.953863Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:09:11.042883Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:09:11.042883Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091009_20230717T091011_TOU_049187_8669&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;8390a0c439bed35a49d0f03b7a86dee3&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:09:09.737788Z&#x27;}, {&#x27;Value&#x27;: &#x27;f8f4c15eeb192008f92c7c2a72adad95f0e580710772f0981335d6e25146d283&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:09:09.838892Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:09.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:11.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.954215 43.331306, 10.95554 43.326561, 10.959103 43.315853, 10.883043 43.303314, 10.883751 43.351139, 10.884027 43.351471, 10.90289 43.353771, 10.919021 43.351124, 10.93199 43.345078, 10.937531 43.341255, 10.939748 43.340225, 10.951488 43.339127, 10.954215 43.331306)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.954215, 43.331306], [10.95554, 43.326561], [10.959103, 43.315853], [10.883043, 43.303314], [10.883751, 43.351139], [10.884027, 43.351471], [10.90289, 43.353771], [10.919021, 43.351124], [10.93199, 43.345078], [10.937531, 43.341255], [10.939748, 43.340225], [10.951488, 43.339127], [10.954215, 43.331306]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;701cfc64-5cea-46ca-ae96-86c05b5461ab&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230815T091735_20230815T091738_TOU_049618_92de.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 199750212, &#x27;OriginDate&#x27;: &#x27;2025-03-12T17:14:11.800449Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T17:19:56.425774Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T17:19:56.425774Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/08/15/DM02_HRS_MS2_1D_20230815T091735_20230815T091738_TOU_049618_92de&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;f740dda2a53ce5eea8288a31c67c5806&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T17:19:55.165421Z&#x27;}, {&#x27;Value&#x27;: &#x27;3989cffb4ab2ddb8b7b864f000e072f71ed0e5ce11127668ef419e5e0efbf885&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T17:19:55.483347Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-08-15T09:17:35.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-08-15T09:17:38.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((8.376796 45.037495, 8.375982 45.065205, 8.367979 45.065079, 8.363938 45.077465, 8.37557 45.079334, 8.375502 45.081665, 8.386144 45.083374, 8.40234 45.083622, 8.520469 45.102451, 8.545755 45.024429, 8.428808 45.021614, 8.382524 45.019985, 8.376796 45.037495)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[8.376796, 45.037495], [8.375982, 45.065205], [8.367979, 45.065079], [8.363938, 45.077465], [8.37557, 45.079334], [8.375502, 45.081665], [8.386144, 45.083374], [8.40234, 45.083622], [8.520469, 45.102451], [8.545755, 45.024429], [8.428808, 45.021614], [8.382524, 45.019985], [8.376796, 45.037495]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;34736d9b-bd2b-4a95-9360-317facf737bc&#x27;, &#x27;Name&#x27;: &#x27;DEM1_SAR_DGE_30_20130522T103029_20140523T111413_ADS_000000_2974_bf5f8c79.DEM&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 11553003, &#x27;OriginDate&#x27;: &#x27;2024-05-01T20:38:53.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-05-06T14:49:03.105025Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-05-06T14:49:04.572663Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/COP-DEM_GLO-30-DGED/SAR_DGE_30_A4AD/2013/05/22/DEM1_SAR_DGE_30_20130522T103029_20140523T111413_ADS_000000_2974_bf5f8c79&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;b5674672d2b6a5306e351c22fd54dcc7&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-05-06T14:49:04.300426Z&#x27;}, {&#x27;Value&#x27;: &#x27;1537bcdf2b9b923d65319849328836d584eab21e1120c698fab0994a3c02393d&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-05-06T14:49:04.331011Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2013-05-22T10:31:01.000000Z&#x27;, &#x27;End&#x27;: &#x27;2013-05-22T10:31:02.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((108 -90, 109 -90, 109 -89, 108 -89, 108 -90))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[108.0, -90.0], [109.0, -90.0], [109.0, -89.0], [108.0, -89.0], [108.0, -90.0]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;c5919081-599e-4564-b0de-733798272820&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230815T091737_20230815T091739_TOU_049618_fc0e.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 301816154, &#x27;OriginDate&#x27;: &#x27;2025-03-12T17:14:49.664430Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T17:21:00.023814Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T17:21:00.023814Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/08/15/DM02_HRS_MS2_1D_20230815T091737_20230815T091739_TOU_049618_fc0e&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;76fa9306f6118fddbd71eb70730d9644&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T17:20:58.179827Z&#x27;}, {&#x27;Value&#x27;: &#x27;f033f10eb0d6315b62b2beb606d723a56c40b650540dd4b63ef494e8d11feeb7&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T17:20:58.635016Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-08-15T09:17:37.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-08-15T09:17:39.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((8.375854 45.069809, 8.372096 45.198315, 8.484105 45.216362, 8.523809 45.093449, 8.375854 45.069809)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[8.375854, 45.069809], [8.372096, 45.198315], [8.484105, 45.216362], [8.523809, 45.093449], [8.375854, 45.069809]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;feab5ac8-af02-492a-92a9-541b2c897cd8&#x27;, &#x27;Name&#x27;: &#x27;PH1B_PHR_MS__2A_20180819T094810_20180819T094813_TOU_1234_1c7e.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 761092400, &#x27;OriginDate&#x27;: &#x27;2024-02-25T17:18:36.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-02-26T20:18:53.838296Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-02-26T20:19:00.248616Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2018/PHR_MS__2A_E1F0/2018/08/19/PH1B_PHR_MS__2A_20180819T094810_20180819T094813_TOU_1234_1c7e&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;8705c7525c6d7353b9cf527ddd31441e&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-02-26T20:18:58.951021Z&#x27;}, {&#x27;Value&#x27;: &#x27;c675b9328ed1ec2805d248f2681d84c90d5113f135bdfd78a1602de7f9f3a0ff&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-02-26T20:19:00.127589Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2018-08-19T09:48:10.000000Z&#x27;, &#x27;End&#x27;: &#x27;2018-08-19T09:48:13.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((20.4465982654362 45.979178697259, 20.446580952963 45.97929855017, 20.4465510604366 45.9943528681098, 20.4465511468878 45.9944003775366, 20.4474619800781 46.1516154482972, 20.4477027954279 46.1533041629742, 20.448396477613 46.1549294548351, 20.4495183414078 46.1564333950773, 20.4510284310995 46.1577623755517, 20.4528729410204 46.1588690209861, 20.4548513541432 46.159659997129, 20.4690209375796 46.1597523335584, 20.6715800499633 46.1395822539207, 20.6714707606871 46.0365826543646, 20.6606240419051 45.9820254953919, 20.6600364841222 45.9803193221901, 20.6590240939789 45.978788710386, 20.5159092236934 45.9795722425787, 20.4465982654362 45.979178697259))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[20.4465982654362, 45.979178697259], [20.446580952963, 45.97929855017], [20.4465510604366, 45.9943528681098], [20.4465511468878, 45.9944003775366], [20.4474619800781, 46.1516154482972], [20.4477027954279, 46.1533041629742], [20.448396477613, 46.1549294548351], [20.4495183414078, 46.1564333950773], [20.4510284310995, 46.1577623755517], [20.4528729410204, 46.1588690209861], [20.4548513541432, 46.159659997129], [20.4690209375796, 46.1597523335584], [20.6715800499633, 46.1395822539207], [20.6714707606871, 46.0365826543646], [20.6606240419051, 45.9820254953919], [20.6600364841222, 45.9803193221901], [20.6590240939789, 45.978788710386], [20.5159092236934, 45.9795722425787], [20.4465982654362, 45.979178697259]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;7bed0724-6046-4d0b-8ce9-36b44ac4bb27&#x27;, &#x27;Name&#x27;: &#x27;CS00_SAR_HIM_1C_20230612T083552_20230612T083558_MAT_0_1bb8.HDF5&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 333833677, &#x27;OriginDate&#x27;: &#x27;2024-07-21T07:10:39.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-07-22T08:21:26.190818Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-07-22T08:21:29.978923Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/SAR_SEA_ICE/SAR_HIM_1C_6F15/2023/06/12/CS00_SAR_HIM_1C_20230612T083552_20230612T083558_MAT_0_1bb8&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;e5fde74ad2c5b0e2aef73148bde9002e&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-07-22T08:21:29.135508Z&#x27;}, {&#x27;Value&#x27;: &#x27;8609a7ac686cf938a77ef7077047827a1d275099127f13fe604b77a414bbddfe&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-07-22T08:21:29.853113Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-06-12T08:35:52.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-06-12T08:35:58.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((-44.43129686 60.33440973, -44.43815162 59.93479287, -43.6870226 59.92945467, -43.67100845 60.32898507, -44.43129686 60.33440973))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[-44.43129686, 60.33440973], [-44.43815162, 59.93479287], [-43.6870226, 59.92945467], [-43.67100845, 60.32898507], [-44.43129686, 60.33440973]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;35987569-eb6f-421d-9292-6b45b2818f75&#x27;, &#x27;Name&#x27;: &#x27;RS02_SAR_SW_SCW_20230609T080316_20230609T080433_TRS_80830_0000&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 370497041, &#x27;OriginDate&#x27;: &#x27;2024-07-21T07:10:39.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-07-22T08:22:33.677754Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-07-22T08:22:36.947519Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/SAR_SEA_ICE/SAR_SW_SCW_6F15/2023/06/09/RS02_SAR_SW_SCW_20230609T080316_20230609T080433_TRS_80830_0000&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;3f7c2146bbbf16d5a4dfd5f2a507e6ef&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-07-22T08:22:36.251130Z&#x27;}, {&#x27;Value&#x27;: &#x27;4ca1264b53b8246ef55371f4484b21e65184109b0a74e34e82726043433552ce&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-07-22T08:22:36.846256Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-06-09T08:03:16.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-06-09T08:04:33.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((10.19 80.66, 37.3 83.27, 1.14 87.12, -19.3 82.97, 10.19 80.66))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[10.19, 80.66], [37.3, 83.27], [1.14, 87.12], [-19.3, 82.97], [10.19, 80.66]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;c9503105-0a71-42f9-9db1-9035703c4bd1&#x27;, &#x27;Name&#x27;: &#x27;RS02_SAR_SW_SCW_20230514T203738_20230514T203854_GAT_80466_0000&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 371047047, &#x27;OriginDate&#x27;: &#x27;2024-07-21T07:10:25.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-07-22T08:23:34.923444Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-07-22T08:23:40.195354Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/SAR_SEA_ICE/SAR_SW_SCW_6F15/2023/05/14/RS02_SAR_SW_SCW_20230514T203738_20230514T203854_GAT_80466_0000&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;6a301ef0af7c4bd146308f16626adf8f&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-07-22T08:23:39.503594Z&#x27;}, {&#x27;Value&#x27;: &#x27;907ffcb8168ea959e0d74db07264dc20b39817a43d48ec193d9d7c79f478a3b7&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-07-22T08:23:40.095938Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-05-14T20:37:38.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-05-14T20:38:54.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((-51.43 61.82, -49.03 57.43, -40.29 58.32, -41.45 62.77, -51.43 61.82))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[-51.43, 61.82], [-49.03, 57.43], [-40.29, 58.32], [-41.45, 62.77], [-51.43, 61.82]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;16d7d686-f0a2-442e-b1f6-3061acd13939&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091023_20230717T091025_TOU_049187_bec2.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 144929578, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:06:19.166992Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:12:11.767039Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:12:11.767039Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091023_20230717T091025_TOU_049187_bec2&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;7738982da7d04847c5bc620e79f98b67&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:12:09.903335Z&#x27;}, {&#x27;Value&#x27;: &#x27;5d3e7601e1541bd3b54b37fc10e512fc6c3321629f9d513ea174cc95013865c6&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:12:10.132100Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:23.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:25.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.527029 44.178749, 10.51508 44.216183, 10.584258 44.215679, 10.584842 44.270859, 10.582673 44.270805, 10.577518 44.272034, 10.569746 44.273636, 10.563918 44.276409, 10.541923 44.29332, 10.540548 44.295494, 10.530897 44.305721, 10.530633 44.30621, 10.530643 44.306732, 10.531163 44.307411, 10.532061 44.307766, 10.61116 44.320667, 10.611968 44.320667, 10.612939 44.320278, 10.613285 44.319904, 10.613455 44.319336, 10.612992 44.278687, 10.61268 44.278137, 10.611962 44.277695, 10.602655 44.274689, 10.623314 44.215408, 10.623826 44.214886, 10.630532 44.195698, 10.5751 44.186573, 10.527029 44.178749)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.527029, 44.178749], [10.51508, 44.216183], [10.584258, 44.215679], [10.584842, 44.270859], [10.582673, 44.270805], [10.577518, 44.272034], [10.569746, 44.273636], [10.563918, 44.276409], [10.541923, 44.29332], [10.540548, 44.295494], [10.530897, 44.305721], [10.530633, 44.30621], [10.530643, 44.306732], [10.531163, 44.307411], [10.532061, 44.307766], [10.61116, 44.320667], [10.611968, 44.320667], [10.612939, 44.320278], [10.613285, 44.319904], [10.613455, 44.319336], [10.612992, 44.278687], [10.61268, 44.278137], [10.611962, 44.277695], [10.602655, 44.274689], [10.623314, 44.215408], [10.623826, 44.214886], [10.630532, 44.195698], [10.5751, 44.186573], [10.527029, 44.178749]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;72fe0468-27d9-44ec-aa60-7195472d07f4&#x27;, &#x27;Name&#x27;: &#x27;RS02_SAR_SW_SCW_20230617T204905_20230617T205022_GAT_80952_0000&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 388970411, &#x27;OriginDate&#x27;: &#x27;2024-07-21T07:10:26.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-07-22T07:33:21.848558Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-07-22T08:49:38.428703Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/SAR_SEA_ICE/SAR_SW_SCW_6F15/2023/06/17/RS02_SAR_SW_SCW_20230617T204905_20230617T205022_GAT_80952_0000&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;23393a40450137122fd92598bcf3f55d&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-07-22T08:49:37.693165Z&#x27;}, {&#x27;Value&#x27;: &#x27;ea1e2266f2a36f6df63f6469a8a4ee97be2f39e5d3d5098fe345e8f3d0851cf6&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-07-22T08:49:38.317735Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-06-17T20:49:05.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-06-17T20:50:22.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((-62.8 72.31, -58 68.04, -45.37 69.1, -47.22 73.55, -62.8 72.31))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[-62.8, 72.31], [-58.0, 68.04], [-45.37, 69.1], [-47.22, 73.55], [-62.8, 72.31]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;f33f358c-c310-4216-91cc-1474df4bc734&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230807T090521_20230807T090523_TOU_049499_0bac.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 349560467, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:38:09.909341Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:44:28.712156Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:44:28.712156Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/08/07/DM02_HRS_MS2_1D_20230807T090521_20230807T090523_TOU_049499_0bac&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;0e64de7b3739735bf4433c8b15cd63c8&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:44:26.924541Z&#x27;}, {&#x27;Value&#x27;: &#x27;ca150f7eb0789f602b847a9016157ce7384865da991bc9b6c7bc56666276c826&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:44:27.462445Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-08-07T09:05:21.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-08-07T09:05:23.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((11.858958 42.757198, 11.895475 42.641571, 11.746259 42.616631, 11.723517 42.690388, 11.710932 42.730194, 11.788638 42.743248, 11.788735 42.745491, 11.858958 42.757198)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[11.858958, 42.757198], [11.895475, 42.641571], [11.746259, 42.616631], [11.723517, 42.690388], [11.710932, 42.730194], [11.788638, 42.743248], [11.788735, 42.745491], [11.858958, 42.757198]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;61eada6e-14e5-4cb2-a578-b44b3c7af932&#x27;, &#x27;Name&#x27;: &#x27;SP06_NAO_MS4__3_20180705T091411_20180705T091431_TOU_1234_b65b_COG.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 6564601, &#x27;OriginDate&#x27;: &#x27;2025-02-24T15:58:37.614679Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-02-24T16:59:25.388619Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-02-24T16:59:25.388619Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2018/NAO_MS4__3_E1F0-COG/2018/07/05/SP06_NAO_MS4__3_20180705T091411_20180705T091431_TOU_1234_b65b_COG&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;eccd0f21c20ed2b9a9d117dae8dbe203&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:59:24.369000Z&#x27;}, {&#x27;Value&#x27;: &#x27;7790c77baa334a1046b269ba61fec06734269cfd783bec4e6136548875f98d15&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T16:59:24.408850Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2018-07-05T09:14:11.000000Z&#x27;, &#x27;End&#x27;: &#x27;2018-07-05T09:14:31.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((25.9745240097854 55.7712305552325, 25.9716493943847 55.77176159735, 25.9690076961422 55.7725872575835, 25.9666938296937 55.7736778771573, 25.9647909524338 55.7749942760742, 25.9633674770475 55.7764891584729, 25.962474610093 55.7781088097868, 25.9621445054515 55.7797950251007, 25.9624223336419 55.7815886722624, 25.9633352985948 55.7833165158846, 25.9648465699639 55.7849087018943, 25.9806047311205 55.8013618328201, 25.9806166665655 55.8013742362772, 25.9806646861181 55.8014237666139, 25.9806767603313 55.8014361282032, 25.9807253340021 55.8014854900861, 25.9807375465073 55.8014978093194, 25.9807866724016 55.8015470008204, 25.9807990227173 55.8015592772111, 25.9808486988654 55.8016082963552, 25.9808611865042 55.8016205294185, 25.9809114109676 55.8016693742907, 25.9809240354371 55.8016815635434, 25.9809748062301 55.8017302322099, 25.9809875670323 55.8017423771707, 25.9810388821589 55.8017908677157, 25.9810517787904 55.8018029679048, 25.9811036362071 55.8018512783951, 25.981116668159 55.8018633333345, 25.9811690658448 55.8019114618849, 25.9811822326032 55.8019234710986, 25.9812351684579 55.8019714157781, 25.9812484695032 55.8019833787918, 25.9813019414844 55.8020311377482, 26.0086983237006 55.8264432984855, 26.0087117764653 55.8264552116531, 26.0087658543422 55.8265027702065, 26.0087794403859 55.8265146362011, 26.0088340503228 55.826562005136, 26.0088477691095 55.8265738234889, 26.0089029089278 55.8266210009134, 26.0089167599162 55.826632771158, 26.008972427452 55.826679755219, 26.0089864100956 55.8266914768901, 26.0090426031601 55.826738265738, 26.0090567169072 55.8267499383728, 26.0091134332617 55.8267965301417, 26.0091276775554 55.8268081532792, 26.0091849149858 55.8268545461486, 26.0091992892641 55.8268661193297, 26.009257045494 55.8269123114524, 26.0092715491896 55.8269238342199, 26.0093298219497 55.8269698237794, 26.0093444544905 55.8269812956782, 26.0094032414898 55.8270270808646, 26.0094180022982 55.8270385014416, 26.0094773011784 55.8270840804165, 26.0094921896719 55.8270954492206, 26.00955199815 55.8271408202276, 26.0095670137412 55.8271521368097, 26.0096273294042 55.8271972980166, 26.0096424715003 55.8272085619298, 26.0097032920097 55.8272535115841, 26.0097185600134 55.8272647223834, 26.0097798829243 55.8273094586768, 26.0097952762328 55.8273206159194, 26.0098570991781 55.8273651371234, 26.0098726171841 55.8273762403687, 26.0099349376864 55.8274205446976, 26.0099505797773 55.827431593507, 26.0100133953807 55.8274756792136, 26.0100291609392 55.8274866731506, 26.0100924691744 55.8275305385006, 26.0101083575783 55.827541477131, 26.0101721559552 55.8275851203975, 26.0101881665774 55.8275960032892, 26.0102524525499 55.827639422729, 26.0102685847585 55.8276502494522, 26.0103333558147 55.8276934433677, 26.0103496089729 55.8277042134946, 26.0104148625362 55.8277471801663, 26.0104312360024 55.8277578932716, 26.0104969695151 55.827800631014, 26.0105134626431 55.8278112866745, 26.0105796735128 55.8278537938008, 26.0105962856516 55.8278643915956, 26.0106629712404 55.8279066664111, 26.0106797017343 55.8279172059215, 26.0107468594292 55.8279592467688, 26.0107637076176 55.8279697275786, 26.0108313347641 55.8280115327947, 26.0108482999821 55.8280219544898, 26.0109163939164 55.8280635224268, 26.0109334754942 55.8280738845956, 26.0110020335156 55.8281152136038, 26.011019230779 55.8281255158369, 26.0110882501737 55.8281666042796, 26.0111055624438 55.8281768461702, 26.0111750405307 55.82821769245, 26.011192467124 55.8282278735934, 26.0112624010984 55.8282684760604, 26.011279941327 55.8282785960545, 26.0113503284701 55.8283189531295, 26.0113679816414 55.8283290115745, 26.0114388191852 55.8283691216693, 26.0114565846024 55.8283791181678, 26.0115278696941 55.8284189796662, 26.0115457466559 55.8284289138234, 26.0116174765462 55.8284685251872, 26.0116354643467 55.8284783966108, 26.0117076361682 55.8285177562554, 26.0117257340972 55.8285275645552, 26.0117983449874 55.8285666709189, 26.0118165523305 55.8285764157077, 26.0118895994557 55.8286152672636, 26.011907915494 55.8286249481563, 26.0119813959597 55.8286635433639, 26.01199981997 55.8286731599782, 26.0120737308546 55.8287114973023, 26.0120922621094 55.8287210492582, 26.012166600532 55.8287591272037, 26.0121852382998 55.8287686141239, 26.0122600012891 55.828806431168, 26.012278744834 55.8288158526778, 26.0123539294616 55.8288534073386, 26.0123727780433 55.8288627630657, 26.0124483813245 55.8289000538517, 26.0124673341989 55.8289093434267, 26.0125433531615 55.8289463688712, 26.0125624095804 55.8289555919269, 26.0126388412246 55.8289923505682, 26.0126580004354 55.8290015067404, 26.0127348417123 55.8290379971115, 26.0127541029583 55.8290470860385, 26.0128313508842 55.8290833067219, 26.0128507134051 55.8290923280446, 26.0129283648896 55.8291282775906, 26.0129478279207 55.8291372309527, 26.013025879919 55.829172907951, 26.0130454426917 55.8291817929988, 26.0131238921003 55.8292171960304, 26.0131435538422 55.8292260124129, 26.013222397585 55.8292611400891, 26.0132421575196 55.8292698874579, 26.0133213924806 55.8293047383898, 26.0133412498276 55.8293134163994, 26.01342087286 55.8293479892024, 26.0134408268353 55.8293565975101, 26.0135208348133 55.8293908908265, 26.0135408846289 55.8293994290921, 26.0136212743851 55.8294334415638, 26.0136414192492 55.8294419094501, 26.0137221876131 55.8294756397351, 26.0137424267302 55.8294840369075, 26.0138235705049 55.8295174836704, 26.0138439030756 55.8295258097972, 26.0139254190597 55.829558971718, 26.0139458442811 55.8295672264702, 26.0140277292666 55.8296001022433, 26.0140482463321 55.829608285295, 26.0141304970666 55.8296408736142, 26.0141511051658 55.8296489846419, 26.0142337183975 55.8296812842186, 26.0142544167166 55.829689322902, 26.0143373892102 55.8297213324709, 26.0143581769318 55.8297292984924, 26.0144415054014 55.8297610167853, 26.0144623817044 55.8297689098302, 26.0145460628422 55.8298003355877, 26.0145670269021 55.8298081553442, 26.0146510574149 55.8298392873292, 26.0146721084038 55.8298470334884, 26.0147564849596 55.8298778704663, 26.014777622046 55.8298855427221, 26.0148623413517 55.829916083489, 26.0148835637009 55.8299236815384, 26.0149686223574 55.8299539248686, 26.0149899291311 55.8299614484113, 26.0150753238167 55.8299913931235, 26.0150967141734 55.8299988418624, 26.0151824414961 55.8300284867669, 26.015203914591 55.8300358604076, 26.0152899711744 55.8300652043366, 26.0153115261592 55.8300725025879, 26.0153979086131 55.830101544385, 26.0154195446366 55.8301087669586, 26.015506249516 55.8301375054653, 26.0155279657235 55.8301446520759, 26.0156149896309 55.8301730861661, 26.0156367851647 55.8301801565312, 26.0157241246752 55.8302082850855, 26.0157459986744 55.8302152789259, 26.0158336503022 55.8302431008214, 26.0158556019029 55.8302500178608, 26.0159435622019 55.8302775320036, 26.0159655905369 55.8302843719687, 26.0160538560458 55.8303115772759, 26.016075960245 55.8303183398964, 26.0161645274635 55.8303452352888, 26.0161867066538 55.8303519202977, 26.0162755720829 55.8303785047126, 26.0162978253882 55.8303851118457, 26.0163869855233 55.8304113842346, 26.0164093120646 55.8304179132308, 26.0164987633757 55.8304438725534, 26.016521162271 55.8304503231549, 26.0166109012246 55.8304759683857, 26.0166333715893 55.8304823403376, 26.0167233946733 55.8305076704726, 26.0167459356197 55.8305139635232, 26.016836239228 55.8305389775475, 26.0168588498656 55.8305451914482, 26.0169494304442 55.8305698883776, 26.0169721098799 55.8305760228828, 26.0170629638966 55.8306004017538, 26.0170857112345 55.8306064566212, 26.0171768350377 55.830630516454, 26.0171996493793 55.8306364914444, 26.0172910393993 55.8306602312964, 26.0173139198432 55.8306661261737, 26.0174055724743 55.8306895451081, 26.0174285181168 55.8306953596395, 26.0175204297186 55.8307184567261, 26.0175434396533 55.8307241906818, 26.0176356066088 55.8307469650116, 26.0176586799266 55.8307526181651, 26.0177510986066 55.8307750688411, 26.017774234396 55.8307806409691, 26.0178669011319 55.8308027671001, 26.017890098479 55.8308082579824, 26.0179830096021 55.8308300586924, 26.0180062675904 55.8308354681121, 26.018099419433 55.8308569425406, 26.0181227371438 55.8308622702839, 26.0182161260779 55.8308834175943, 26.0182395025901 55.8308886634509, 26.0183331248352 55.8309094827871, 26.0183565592251 55.8309146465496, 26.0184504111635 55.8309351371071, 26.0184739025055 55.8309402185715, 26.0185679803824 55.8309603795305, 26.0185915277483 55.8309653784961, 26.0186858278652 55.830985209064, 26.0187094303249 55.8309901253333, 26.0188039489494 55.8310096247251, 26.0188276055703 55.8310144581039, 26.0189223389904 55.8310336255538, 26.0189460488381 55.8310383758511, 26.0190409932622 55.831057210592, 26.0190647553998 55.8310618776201, 26.0191599071255 55.8310803789175, 26.0191837206143 55.8310849624921, 26.0192790758624 55.8311031296111, 26.0193029397616 55.8311076295511, 26.0193984947596 55.831125461773, 26.0194224081265 55.8311298779006, 26.0195181591176 55.8311473745244, 26.0195421210073 55.831151706665, 26.0196380641954 55.8311688669969, 26.0196620736613 55.8311731149796, 26.0197582052528 55.8311899383411, 26.0197822613464 55.8311941019979, 26.0198785775513 55.8312105877259, 26.0199026793221 55.8312146668923, 26.0199991763273 55.831230814334, 26.020023322823 55.831234808849, 26.020119996827 55.8312506173684, 26.0201441870937 55.831254527074, 26.0202410342699 55.8312699960453, 26.020265267352 55.8312738207871, 26.0203622838753 55.8312889495994, 26.0203865588152 55.8312926892264, 26.0204837408576 55.8313074772827, 26.0205080566963 55.831311131647, 26.0206054004066 55.8313255783614, 26.0206297561834 55.8313291473187, 26.0207272577204 55.8313432521212, 26.020751652473 55.8313467355305, 26.0208493079908 55.8313604978646, 26.0208737407554 55.8313638955883, 26.0209715463932 55.8313773149101, 26.0209960162045 55.831380626814, 26.0210939680795 55.8313937025908, 26.0211184739707 55.831396928544, 26.0212165682605 55.8314096602655, 26.0212411092634 55.8314128001405, 26.021339342032 55.8314251872959, 26.0213639171769 55.8314282409688, 26.0214622845942 55.8314402830752, 26.0214868929101 55.8314432504252, 26.0215853910569 55.8314549470028, 26.0216100315717 55.8314578279128, 26.0217086565578 55.8314691784998, 26.0217333282978 55.831471972856, 26.0218320762544 55.8314829770071, 26.0218567782449 55.831485684699, 26.021955645239 55.831496341976, 26.021980376504 55.8314989628967, 26.0220793586482 55.8315092728807, 26.0221041182105 55.8315118069266, 26.0222032115953 55.8315217692103, 26.0222279984767 55.8315242162813, 26.0223271991604 55.8315338304685, 26.0223520123814 55.831536190468, 26.0224513164808 55.8315454561825, 26.0224761550612 55.8315477290172, 26.0225755586346 55.8315566458911, 26.0226004215929 55.8315588314712, 26.0226999207084 55.831567399152, 26.0227248070622 55.8315694973912, 26.022824397778 55.8315777155396, 26.0228493065441 55.831579726355, 26.0229489849699 55.83158759465, 26.0229739151641 55.8315895179621, 26.0230736773223 55.8315970360896, 26.0230986279596 55.8315988718226, 26.0231984699025 55.8316060394853, 26.023223439997 55.8316077875666, 26.0233233578221 55.8316146044844, 26.0233483463872 55.8316162648448, 26.0234483361053 55.8316227307455, 26.0234733421537 55.8316243033196, 26.0235733998287 55.8316304179489, 26.0235984223724 55.8316319026745, 26.023698544056 55.8316376657911, 26.0237235821063 55.8316390626095, 26.0238237638392 55.8316444739855, 26.0238488164067 55.8316457828417, 26.0239490542186 55.8316508422627, 26.0239741203135 55.8316520631049, 26.0240744102694 55.8316567703724, 26.0240994889013 55.8316579031523, 26.0241998270205 55.8316622580796, 26.0242249171986 55.8316633027525, 26.0243252995027 55.8316673051669, 26.0243504002355 55.8316682616916, 26.0244508228103 55.8316719114371, 26.024475933106 55.8316727797758, 26.0245763919035 55.8316760767053, 26.02460151077 55.8316768568237, 26.0247020019002 55.8316798008098, 26.0247271283451 55.831680492677, 26.0248276477968 55.831683083602, 26.0248527808272 55.8316836871908, 26.0249533246153 55.8316859249522, 26.0249784632381 55.8316864402387, 26.0250790274384 55.8316883247492, 26.0251041706603 55.8316887517132, 26.0252047512445 55.8316902828973, 26.0252298980723 55.8316906215218, 26.0253304911117 55.8316917993198, 26.0253556405515 55.8316920495915, 26.0254562420438 55.8316928739566, 26.0254813931021 55.8316930358655, 26.0255819990772 55.8316935067654, 26.02560715076 55.8316935803052, 26.0257077572558 55.8316936977212, 26.0257329085695 55.8316936828891, 26.0258335115981 55.8316934468166, 26.0258586615489 55.8316933436131, 26.0259592571329 55.8316927540616, 26.0259844047271 55.8316925624908, 26.0260849888916 55.8316916194838, 26.0261101331355 55.8316913395533, 26.0262107019252 55.8316900431277, 26.0262358418253 55.8316896748486, 26.0263363912499 55.831688025056, 26.0263615258129 55.8316875684428, 26.0264620518964 55.8316855653485, 26.0264871801292 55.8316850204194, 26.0265876789213 55.8316826641021, 26.026612799831 55.8316820308785, 26.0267132673118 55.8316793214327, 26.0267383799058 55.8316785999397, 26.026838812188 55.8316755374701, 26.0268639154741 55.8316747277363, 26.0269643085016 55.8316713123667, 26.026989401488 55.8316704144239, 26.0270897513436 55.8316666462878, 26.0271148330387 55.8316656601717, 26.0272151357603 55.8316615394177, 26.0272402051732 55.8316604651671, 26.0273404567724 55.8316559919592, 26.0273655129125 55.8316548296168, 26.0274657094308 55.8316500041317, 26.0274907513081 55.8316487537433, 26.0275908888264 55.8316435761698, 26.0276159154515 55.8316422377848, 26.0277159899548 55.8316367083306, 26.0277410003388 55.8316352820019, 26.0278410079024 55.831629400884, 26.0278660010571 55.831627886668, 26.0279659377442 55.8316216541179, 26.0279909126822 55.8316200520744, 26.0280907745188 55.8316134683399, 26.0281157302533 55.8316117785323, 26.0282155132993 55.8316048438734, 26.0282404488442 55.8316030663684, 26.0283401491679 55.8315957810583, 26.0283650635379 55.8315939159263, 26.0284646772058 55.8315862802524, 26.0284895694166 55.8315843275669, 26.0285890924394 55.8315763418353, 26.0286139615075 55.8315743016736, 26.028713390036 55.8315659661932, 26.0287382349789 55.8315638386359, 26.0288375650356 55.83155515374, 26.0288623848715 55.8315529388711, 26.0289616125229 55.8315439049038, 26.0289864062712 55.831541602811, 26.029085527618 55.8315322201275, 26.0291102942991 55.8315298309016, 26.0292093054141 55.8315200998736, 26.0292340440496 55.8315176236092, 26.0293329410346 55.8315075446199, 26.0293576506469 55.8315049814147, 26.0294564295959 55.8314945548623, 26.0294811092089 55.8314919048176, 26.0295797661978 55.8314811311162, 26.0296044148362 55.8314783943368, 26.0297029459668 55.8314672739125, 26.0297275626568 55.8314644505065, 26.0298259640787 55.8314529837937, 26.0298505478478 55.8314500738726, 26.0299488156161 55.8314382613311, 26.029973365493 55.8314352650101, 26.0300714957561 55.8314231071031, 26.0300960107708 55.8314200245004, 26.0301939996594 55.8314075217073, 26.0302184788433 55.8314043529447, 26.0303163224619 55.8313915057626, 26.0303407648479 55.8313882509655, 26.0304384593381 55.8313750599012, 26.0304628639606 55.8313717191981, 26.0305604054944 55.8313581847684, 26.0305847713891 55.8313547582913, 26.0306821560548 55.8313408810391, 26.030706482259 55.8313373689235, 26.030803706252 55.8313231493911, 26.0308279918047 55.8313195517757, 26.0309250512831 55.8313049905251, 26.0309492952248 55.831301307552, 26.0310461863338 55.8312864051616, 26.0310703877067 55.8312826369764, 26.0311671066198 55.8312673940348, 26.0311912644677 55.8312635407863, 26.0312878073736 55.8312479578944, 26.0313119207421 55.831244019735, 26.0314082838222 55.8312280975092, 26.0314323517587 55.8312240745945, 26.0315285312229 55.8312078136611, 26.0315525527765 55.83120370615, 26.0316485448148 55.8311871071531, 26.0316725190365 55.8311829152079, 26.0317683198149 55.8311659788109, 26.0317922457575 55.8311617025972, 26.0318878515622 55.8311444294567, 26.0319117282807 55.8311400691436, 26.0320071352943 55.8311224599492, 26.0320309618452 55.8311180157089, 26.0321261662951 55.8311000711572, 26.032149941737 55.8310955431654, 26.0322449398776 55.8310772639625, 26.0322686632715 55.831072652398, 26.0323634513502 55.831054039266, 26.0323871217587 55.8310493443111, 26.0324816960139 55.8310303979889, 26.032505312502 55.831025619829, 26.0325996692041 55.831006341064, 26.0326232308388 55.831001479888, 26.0327173662909 55.8309818694355, 26.0327408721415 55.8309769254354, 26.0328347825711 55.8309569840815, 26.0328582317089 55.8309519574527, 26.0329519134451 55.830931685977, 26.0329753049437 55.8309265769182, 26.0330687542814 55.8309059761226, 26.0330920872168 55.8309007848355, 26.0331853004447 55.8308798555383, 26.0332085738952 55.8308745822281, 26.0333015473395 55.8308533252545, 26.0333247603856 55.8308479701295, 26.0334174904035 55.8308263863125, 26.0334406421283 55.8308209495843, 26.0335331249961 55.8307990397907, 26.0335562144851 55.8307935216741, 26.0336484466088 55.8307712867556, 26.0336714729498 55.8307656874688, 26.0337634506503 55.8307431283124, 26.0337864129337 55.8307374480765, 26.033878132591 55.8307145655705, 26.0339010299098 55.8307088046099, 26.0339924878993 55.8306855996585, 26.0340153193489 55.8306797582009, 26.0341065120535 55.8306562317223, 26.0341292767322 55.8306503099984, 26.0342202005528 55.8306264629213, 26.0342428975612 55.8306204611651, 26.0343335489093 55.8305962944308, 26.0343561773508 55.8305902128795, 26.0344465526453 55.830565727443, 26.0344691116262 55.8305595663368, 26.0345592072917 55.8305347631669, 26.034581695921 55.8305285227493, 26.0346715083946 55.8305034028271, 26.0346939257838 55.8304970833447, 26.0347834515465 55.8304716476548, 26.0348057968102 55.8304652493571, 26.0348950322744 55.830439498919, 26.0349173045299 55.830433022059, 26.0350062462257 55.8304069578742, 26.0350284445934 55.8304004027077, 26.0351170889593 55.8303740258203, 26.0351392125622 55.8303673926064, 26.0352275561443 55.8303407040443, 26.0352496041087 55.8303339930449, 26.0353376433831 55.8303069938731, 26.0353596148381 55.8303002053533, 26.0354473463261 55.8302728966388, 26.035469240404 55.8302660308671, 26.0355566606726 55.8302384136788, 26.0355784765085 55.8302314709262, 26.0356655820729 55.8302035463654, 26.0356873188051 55.8301965269063, 26.0357741062343 55.8301682960733, 26.0357957630043 55.830161200185, 26.0358822288824 55.8301326641912, 26.0359038048349 55.830125492154, 26.0359899457292 55.8300966521326, 26.036011440012 55.83008940423, 26.0360972525297 55.8300602613173, 26.0361186642939 55.8300529378355, 26.0362041450482 55.830023493182, 26.0362254734481 55.8300160944105, 26.0363106190497 55.8299863491842, 26.036331863243 55.8299788754151, 26.0364166703387 55.8299488307878, 26.0364378294863 55.8299412823165, 26.0365222947445 55.8299109394688, 26.0365433680108 55.8299033165936, 26.0366274880555 55.8298726767386, 26.0366484746082 55.8298649797605, 26.0367322461446 55.829834044099, 26.036753145155 55.8298262733222, 26.0368365648861 55.8297950430719, 26.0368573755286 55.8297871988033, 26.0369404401192 55.8297556752134, 26.0369611615721 55.829747757763, 26.0370438677731 55.8297159420671, 26.0370644992181 55.8297079517476, 26.0371468437603 55.8296758452037, 26.0371673843825 55.8296677823309, 26.0372493640162 55.8296353862065, 26.0372698130045 55.8296272510987, 26.0373514244656 55.8295945666844, 26.0373717810125 55.8295863596632, 26.037453021126 55.8295533882308, 26.0374732844275 55.8295451096203, 26.0375541499364 55.8295118524923, 26.0375743191924 55.8295035026197, 26.0376548069225 55.8294699611021, 26.0376748813365 55.8294615402972, 26.0377549881279 55.8294277157074, 26.0377749669071 55.8294192243029, 26.0378546895619 55.8293851179917, 26.0378745719175 55.829376556323, 26.0379539073101 55.8293421696284, 26.037973692457 55.8293335380337, 26.0380526374651 55.8292988723093, 26.0380723246219 55.8292901711297, 26.0381508760927 55.8292552277607, 26.0381704644821 55.8292464573399, 26.0382486193577 55.8292112376872, 26.0382681082062 55.8292023983717, 26.0383458633526 55.8291669038482, 26.0383652518907 55.8291579959872, 26.0384426042787 55.8291222279765, 26.0384618917408 55.8291132519218, 26.0385388382916 55.8290772118482, 26.0385580239162 55.8290681679545, 26.0386345616029 55.8290318572365, 26.0386536446325 55.829022745861, 26.0387297704247 55.8289861659369, 26.0387487501056 55.8289769874396, 26.038824461008 55.8289401397496, 26.038843336591 55.828930894493, 26.0389186296154 55.8288937804921, 26.0389374003552 55.8288844688415, 26.0390122725089 55.8288470900056, 26.0390309376644 55.8288377123288, 26.039105386016 55.8288000701222, 26.0391239448502 55.8287906267898, 26.0391979664413 55.8287527227091, 26.0392164182216 55.828743214094, 26.0392900101451 55.8287050496288, 26.039308354143 55.8286954761066, 26.0393815134769 55.828657052773, 26.0393997489681 55.8286474147219, 26.0394724728372 55.828608734031, 26.0394905991017 55.8285990318318, 26.0395628846396 55.828560095309, 26.0395809009619 55.8285503293449, 26.0396527452907 55.8285111385413, 26.0396706509596 55.8285013091981, 26.0397420512781 55.8284618656426, 26.0397598455866 55.8284519733086, 26.0398307990331 55.8284122785832, 26.0398484812788 55.8284023236492, 26.0399189850908 55.8283623793004, 26.0428765282775 55.8266824753695, 26.0428940963482 55.8266724578435, 26.0429641420664 55.8266322639254, 26.0429815966831 55.826622184591, 26.0430511872047 55.8265817442345, 26.0430685276785 55.8265716034897, 26.0431376602679 55.8265309182855, 26.0431548859142 55.826520716531, 26.0432235578179 55.8264797881006, 26.0432406679568 55.8264695257394, 26.0433088764823 55.8264283556889, 26.0433258704383 55.8264180331263, 26.0433936128942 55.8263766230811, 26.0434104899966 55.8263662407249, 26.0434777636928 55.8263245923308, 26.0434945232753 55.8263141505911, 26.0435613255736 55.8262722654827, 26.0435779669748 55.8262617647719, 26.0436442952381 55.8262196446034, 26.0436608178011 55.8262090853364, 26.043726669384 55.8261667317895, 26.0437430724567 55.8261561143833, 26.0438084448025 55.8261135291035, 26.0438247277374 55.8261028539775, 26.0438896182335 55.826060038668, 26.043905780388 55.8260493062439, 26.0439701864987 55.8260062625789, 26.0439862272349 55.8259954732806, 26.0440501463794 55.8259522029866, 26.0440660650643 55.8259413572403, 26.0441294947605 55.825897861999, 26.0441452907657 55.8258869602331, 26.044208228488 55.8258432417776, 26.0442239011903 55.8258322844227, 26.0442863444735 55.8257883444669, 26.0443018932542 55.8257773319558, 26.0443638396051 55.8257331722557, 26.0443792638506 55.8257221050234, 26.044440710847 55.8256777273075, 26.0444560099486 55.825666605791, 26.0445169551621 55.8256220118144, 26.0445321285161 55.8256108364532, 26.0445925695421 55.8255660279771, 26.0446076165497 55.8255547992125, 26.0446675509893 55.8255097780168, 26.0446824710568 55.8254984962923, 26.0447418965632 55.8254532641418, 26.0447566891018 55.8254419299031, 26.0448156033289 55.825396488585, 26.0448302677549 55.8253851022797, 26.0448886683505 55.8253394536103, 26.0449032040853 55.8253280156882, 26.0449610887914 55.8252821614343, 26.0449754952614 55.825270672347, 26.0450328617574 55.8252246143484, 26.0450471383942 55.8252130745499, 26.0451039844262 55.8251668146184, 26.0451181306665 55.8251552245643, 26.045174453997 55.8251087645226, 26.0451884692826 55.8250971246708, 26.0452442676862 55.8250504663564, 26.0452581514642 55.8250387771665, 26.0453134227277 55.8249919224324, 26.0453271744505 55.8249801843663, 26.0453819164263 55.8249331350348, 26.0453955355511 55.8249213485559, 26.0454497460469 55.8248741065133, 26.0454632320365 55.8248622720872, 26.0455169089268 55.824814839188, 26.0455302612492 55.8248029572822, 26.0455834024046 55.8247553354105, 26.0455966205331 55.8247434064941, 26.0456492238841 55.8246955975064, 26.0456623072973 55.8246836220507, 26.0457143707397 55.8246356278618, 26.0457273189213 55.8246236063397, 26.0457788404174 55.8245754288304, 26.0457916528569 55.8245633617167, 26.0458426303778 55.8245150027864, 26.0458553065696 55.8245028905577, 26.0459057380876 55.8244543521326, 26.0459182775317 55.8244421952672, 26.045968161066 55.8243934792564, 26.0459805632679 55.8243812782345, 26.0460298968559 55.824332386557, 26.0460421613265 55.8243201418605, 26.0460909430251 55.8242710764444, 26.0461030692806 55.8242587885569, 26.0461512971473 55.8242095513589, 26.0461632847095 55.8241972207656, 26.0462109568617 55.8241478137104, 26.0462228052578 55.8241354408983, 26.0462699198125 55.8240858659401, 26.0462816285752 55.8240734513979, 26.0463281836617 55.8240237105079, 26.0463397523293 55.8240112547259, 26.0463857461226 55.8239613498569, 26.0463971742389 55.823948853327, 26.0464426049268 55.8238987864483, 26.0464538920411 55.823886249664, 26.046498757826 55.8238360227596, 26.0465099034932 55.823823446216, 26.0465542026078 55.8237730612675, 26.0465652063885 55.8237604454614, 26.0466089370865 55.8237099044581, 26.0466197985468 55.8236972498875, 26.0466629591 55.8236465548301, 26.0466736778117 55.823633861995, 26.0467162665255 55.8235830148773, 26.0467268420659 55.8235702842788, 26.0467688572614 55.8235192871084, 26.0467792892136 55.8235065192493, 26.0468207292305 55.8234553740448, 26.0468310171833 55.8234425694294, 26.0468718803816 55.8233912782184, 26.0468820239294 55.8233784373522, 26.0469223087133 55.8233270021417, 26.0469323074562 55.8233141255319, 26.0469720122206 55.8232625483746, 26.0469818657645 55.8232496365298, 26.0470209889616 55.8231979194404, 26.0470306969181 55.8231849728703, 26.0470692369907 55.8231331179107, 26.0470787989772 55.8231201371268, 26.0471167544187 55.8230681463283, 26.0471261700582 55.823055131843, 26.0471635393676 55.8230030072654, 26.0471728082891 55.8229899595928, 26.0472095899843 55.8229377033079, 26.0472187118225 55.8229246229631, 26.0472549044704 55.822872237011, 26.0472638788658 55.8228591245107, 26.0472994810273 55.8228066109788, 26.0473083076263 55.8227934668408, 26.0473433179117 55.8227408277829, 26.0473519963664 55.8227276525261, 26.0473864133758 55.8226748900521, 26.0473949433444 55.8226616841969, 26.0474287657452 55.822608800354, 26.0474371468914 55.8225955644218, 26.0474703733331 55.8225425613265, 26.0474786053269 55.82252929584, 26.0475112345111 55.8224761755682, 26.0475193170281 55.8224628810513, 26.0475513476588 55.822409645718, 26.0475592803807 55.8223963226957, 26.0475907112157 55.8223429743704, 26.0475984938298 55.8223296233686, 26.0476293236052 55.822276164202, 26.0476369558051 55.822262785748, 26.0476671833217 55.8222092178251, 26.0476746648069 55.8221958124473, 26.0477042888815 55.8221421378696, 26.0477116193572 55.8221287060973, 26.0477406388009 55.8220749270252, 26.0477478179785 55.8220614693888, 26.0477762316685 55.8220075879088, 26.0477832592653 55.8219941049396, 26.0478110660766 55.8219401231908, 26.0478179418158 55.8219266154212, 26.0478451406462 55.8218725355499, 26.0478518642572 55.8218590035133, 26.0478784540467 55.8218048276333, 26.0478850252647 55.8217912718641, 26.0479110049649 55.8217370021173, 26.0479174235313 55.8217234231508, 26.04794279211 55.8216690617003, 26.0479490577721 55.8216554600726, 26.0479738142429 55.8216010090396, 26.0479799267541 55.8215873852877, 26.0480040701306 55.8215328468483, 26.0480100292504 55.8215192015102, 26.0480335585987 55.8214645777815, 26.0480393640925 55.821450911396, 26.0480622784688 55.8213962045761, 26.0480679301083 55.8213825176828, 26.0480902286222 55.8213277299056, 26.0480957261851 55.821314023045, 26.0481174079598 55.8212591564723, 26.0481227512296 55.8212454301855, 26.048143815404 55.8211904870052, 26.0481490041707 55.8211767418343, 26.0481694499258 55.8211217241908, 26.0481744839853 55.8211079606785, 26.0481943105089 55.821052870766, 26.0481991896633 55.8210390894556, 26.0482183961829 55.82098392943, 26.0482231202403 55.8209701308658, 26.0482417059925 55.8209149029292, 26.0482462747673 55.8209010876559, 26.0482642390337 55.8208457939521, 26.0482686523463 55.8208319625152, 26.0482859944105 55.8207766052592, 26.0482902520874 55.8207627582049, 26.0483069712703 55.8207073395757, 26.0483110731442 55.8206934774507, 26.0483271687905 55.8206379996318, 26.0483311147004 55.8206241229833, 26.0483465861797 55.8205685881574, 26.0483503759706 55.8205546975334, 26.0483652226684 55.8204991079195, 26.0483688561915 55.8204852038684, 26.0483830775357 55.8204295616204, 26.0483865546483 55.8204156446911, 26.0484001500697 55.820359952049, 26.0484034706354 55.8203460227911, 26.0484164396075 55.8202902819265, 26.048419603496 55.8202763408899, 26.0484319455079 55.8202205540121, 26.0484349525951 55.8202066017471, 26.0484466671635 55.8201507710557, 26.0484495173316 55.8201368081133, 26.0484606039965 55.8200809358171, 26.0484632971338 55.8200669627485, 26.0484737554623 55.820011051045, 26.0484762914633 55.8199970684019, 26.0484861210431 55.8199411195142, 26.0484884998085 55.8199271278486, 26.0484977002583 55.8198711439658, 26.048499921695 55.8198571438301, 26.048508492653 55.8198011271741, 26.0485105566742 55.8197871191211, 26.0485184978047 55.8197310719085, 26.0485204043297 55.8197170564913, 26.0485277153247 55.8196609809191, 26.0485294642791 55.8196469586908, 26.0485361448515 55.8195908569873, 26.0485377361671 55.8195768285016, 26.0485437860572 55.8195207028766, 26.048545219672 55.8195066686874, 26.0485506386442 55.8194505213582, 26.0485519145025 55.8194364820196, 26.0485567023475 55.8193803151879, 26.0485578203996 55.819366271254, 26.0485619769294 55.8193100871666, 26.0485629371322 55.8192960391918, 26.048566462188 55.8192398400414, 26.0485672645044 55.8192257885805, 26.0485701579499 55.8191695765891, 26.0485708023491 55.8191555221968, 26.0485730640724 55.8190992996135, 26.0485735505298 55.8190852428445, 26.0485751804471 55.8190290118278, 26.0485755089442 55.8190149532371, 26.0485765069926 55.8189587160764, 26.0485766775174 55.818944656219, 26.048577043662 55.8188884150832, 26.0485770562087 55.8188743545141, 26.0485767904379 55.8188181116472, 26.0485766450067 55.8188040509216, 26.0485757473347 55.8187478085382, 26.0485754439322 55.818733748211, 26.0485739143979 55.8186775085382, 26.048573453037 55.8186634491647, 26.0485712917038 55.8186072144099, 26.0485706724036 55.8185931565449, 26.0485678793598 55.8185369289234, 26.0485671021454 55.818522873122, 26.048563677506 55.8184666548807, 26.0485627424092 55.8184526016977, 26.048558686312 55.818396395038, 26.0485575933703 55.8183823450281, 26.0485529059786 55.8183261521664, 26.0485516552361 55.8183121058844, 26.0485463367389 55.8182559290474, 26.0485449282459 55.8182418870476, 26.0485389788542 55.8181857284309, 26.048537412667 55.8181716912677, 26.0485308326246 55.8181155531373, 26.048529108806 55.8181015213648, 26.0485218983681 55.8180454058702, 26.0485200169868 55.8180313800423, 26.048512176449 55.8179752894589, 26.0485101375803 55.8179612701294, 26.0485016672505 55.8179052066347, 26.0484994709756 55.8178911943569, 26.0484903711949 55.8178351601857, 26.0484880176014 55.8178211555126, 26.0484782887294 55.8177651528589, 26.0455051090879 55.8010299374867, 26.0455026013384 55.8010159408912, 26.0454922561682 55.8009599716321, 26.0454895913595 55.800945983742, 26.0454786181662 55.8008900504333, 26.0454757964044 55.8008760718007, 26.0454641956164 55.800820176608, 26.0454612170136 55.8008062077847, 26.045448989096 55.8007503529341, 26.0454458537706 55.8007363944715, 26.0454329992098 55.8006805821694, 26.0454297072865 55.8006666346184, 26.0454162265946 55.8006108670732, 26.0454127782042 55.8005969309845, 26.0453986719102 55.800541210371, 26.0453950671895 55.8005272862945, 26.0453803358595 55.8004716148368, 26.0453765749518 55.8004577033222, 26.0453612191704 55.8004020832164, 26.0453573022248 55.8003881848129, 26.0453413225972 55.800332618239, 26.0453372497692 55.8003187334951, 26.0453206469362 55.8002632226696, 26.0453164183874 55.8002493521335, 26.045299192999 55.8001938992195, 26.0452948088972 55.8001800434385, 26.0452769616398 55.8001246506357, 26.0452724221588 55.8001108101568, 26.0452539537497 55.8000554796801, 26.0452492590694 55.8000416550496, 26.0452301702246 55.7999863890344, 26.0452253205312 55.799972580798, 26.0452056120184 55.7999173814584, 26.0452006075041 55.7999035901611, 26.045180280104 55.7998484596737, 26.0451751209672 55.7998346858598, 26.0451541754774 55.7997796263794, 26.0451488619225 55.7997658705926, 26.045127299182 55.7997108843165, 26.0451218314195 55.7996971470997, 26.0450996522802 55.7996422361915, 26.0450940305268 55.799628518087, 26.0445572205629 55.7983371526785, 26.0445514454707 55.7983234541992, 26.0445280379186 55.7982687004045, 26.0445221092915 55.7982550221189, 26.0444980880648 55.7982003501762, 26.0444920061375 55.7981866926241, 26.0444673721842 55.7981321046846, 26.0444611371975 55.7981184684051, 26.0444358915041 55.7980639666474, 26.0444295037049 55.7980503521788, 26.044403647261 55.7979959387321, 26.0443971069023 55.7979823466117, 26.0321966236999 55.7726229272871, 26.0310053783176 55.7709392225215, 26.0293723603804 55.7695188165462, 26.0272940974918 55.7682938614894, 26.0248443131549 55.7673077899581, 26.0221098833164 55.7665955621821, 26.0191877581307 55.7661824284788, 26.0161815295934 55.7660830355812, 26.0131977658508 55.7663009082429, 25.9745240097854 55.7712305552325))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[25.9745240097854, 55.7712305552325], [25.9716493943847, 55.77176159735], [25.9690076961422, 55.7725872575835], [25.9666938296937, 55.7736778771573], [25.9647909524338, 55.7749942760742], [25.9633674770475, 55.7764891584729], [25.962474610093, 55.7781088097868], [25.9621445054515, 55.7797950251007], [25.9624223336419, 55.7815886722624], [25.9633352985948, 55.7833165158846], [25.9648465699639, 55.7849087018943], [25.9806047311205, 55.8013618328201], [25.9806166665655, 55.8013742362772], [25.9806646861181, 55.8014237666139], [25.9806767603313, 55.8014361282032], [25.9807253340021, 55.8014854900861], [25.9807375465073, 55.8014978093194], [25.9807866724016, 55.8015470008204], [25.9807990227173, 55.8015592772111], [25.9808486988654, 55.8016082963552], [25.9808611865042, 55.8016205294185], [25.9809114109676, 55.8016693742907], [25.9809240354371, 55.8016815635434], [25.9809748062301, 55.8017302322099], [25.9809875670323, 55.8017423771707], [25.9810388821589, 55.8017908677157], [25.9810517787904, 55.8018029679048], [25.9811036362071, 55.8018512783951], [25.981116668159, 55.8018633333345], [25.9811690658448, 55.8019114618849], [25.9811822326032, 55.8019234710986], [25.9812351684579, 55.8019714157781], [25.9812484695032, 55.8019833787918], [25.9813019414844, 55.8020311377482], [26.0086983237006, 55.8264432984855], [26.0087117764653, 55.8264552116531], [26.0087658543422, 55.8265027702065], [26.0087794403859, 55.8265146362011], [26.0088340503228, 55.826562005136], [26.0088477691095, 55.8265738234889], [26.0089029089278, 55.8266210009134], [26.0089167599162, 55.826632771158], [26.008972427452, 55.826679755219], [26.0089864100956, 55.8266914768901], [26.0090426031601, 55.826738265738], [26.0090567169072, 55.8267499383728], [26.0091134332617, 55.8267965301417], [26.0091276775554, 55.8268081532792], [26.0091849149858, 55.8268545461486], [26.0091992892641, 55.8268661193297], [26.009257045494, 55.8269123114524], [26.0092715491896, 55.8269238342199], [26.0093298219497, 55.8269698237794], [26.0093444544905, 55.8269812956782], [26.0094032414898, 55.8270270808646], [26.0094180022982, 55.8270385014416], [26.0094773011784, 55.8270840804165], [26.0094921896719, 55.8270954492206], [26.00955199815, 55.8271408202276], [26.0095670137412, 55.8271521368097], [26.0096273294042, 55.8271972980166], [26.0096424715003, 55.8272085619298], [26.0097032920097, 55.8272535115841], [26.0097185600134, 55.8272647223834], [26.0097798829243, 55.8273094586768], [26.0097952762328, 55.8273206159194], [26.0098570991781, 55.8273651371234], [26.0098726171841, 55.8273762403687], [26.0099349376864, 55.8274205446976], [26.0099505797773, 55.827431593507], [26.0100133953807, 55.8274756792136], [26.0100291609392, 55.8274866731506], [26.0100924691744, 55.8275305385006], [26.0101083575783, 55.827541477131], [26.0101721559552, 55.8275851203975], [26.0101881665774, 55.8275960032892], [26.0102524525499, 55.827639422729], [26.0102685847585, 55.8276502494522], [26.0103333558147, 55.8276934433677], [26.0103496089729, 55.8277042134946], [26.0104148625362, 55.8277471801663], [26.0104312360024, 55.8277578932716], [26.0104969695151, 55.827800631014], [26.0105134626431, 55.8278112866745], [26.0105796735128, 55.8278537938008], [26.0105962856516, 55.8278643915956], [26.0106629712404, 55.8279066664111], [26.0106797017343, 55.8279172059215], [26.0107468594292, 55.8279592467688], [26.0107637076176, 55.8279697275786], [26.0108313347641, 55.8280115327947], [26.0108482999821, 55.8280219544898], [26.0109163939164, 55.8280635224268], [26.0109334754942, 55.8280738845956], [26.0110020335156, 55.8281152136038], [26.011019230779, 55.8281255158369], [26.0110882501737, 55.8281666042796], [26.0111055624438, 55.8281768461702], [26.0111750405307, 55.82821769245], [26.011192467124, 55.8282278735934], [26.0112624010984, 55.8282684760604], [26.011279941327, 55.8282785960545], [26.0113503284701, 55.8283189531295], [26.0113679816414, 55.8283290115745], [26.0114388191852, 55.8283691216693], [26.0114565846024, 55.8283791181678], [26.0115278696941, 55.8284189796662], [26.0115457466559, 55.8284289138234], [26.0116174765462, 55.8284685251872], [26.0116354643467, 55.8284783966108], [26.0117076361682, 55.8285177562554], [26.0117257340972, 55.8285275645552], [26.0117983449874, 55.8285666709189], [26.0118165523305, 55.8285764157077], [26.0118895994557, 55.8286152672636], [26.011907915494, 55.8286249481563], [26.0119813959597, 55.8286635433639], [26.01199981997, 55.8286731599782], [26.0120737308546, 55.8287114973023], [26.0120922621094, 55.8287210492582], [26.012166600532, 55.8287591272037], [26.0121852382998, 55.8287686141239], [26.0122600012891, 55.828806431168], [26.012278744834, 55.8288158526778], [26.0123539294616, 55.8288534073386], [26.0123727780433, 55.8288627630657], [26.0124483813245, 55.8289000538517], [26.0124673341989, 55.8289093434267], [26.0125433531615, 55.8289463688712], [26.0125624095804, 55.8289555919269], [26.0126388412246, 55.8289923505682], [26.0126580004354, 55.8290015067404], [26.0127348417123, 55.8290379971115], [26.0127541029583, 55.8290470860385], [26.0128313508842, 55.8290833067219], [26.0128507134051, 55.8290923280446], [26.0129283648896, 55.8291282775906], [26.0129478279207, 55.8291372309527], [26.013025879919, 55.829172907951], [26.0130454426917, 55.8291817929988], [26.0131238921003, 55.8292171960304], [26.0131435538422, 55.8292260124129], [26.013222397585, 55.8292611400891], [26.0132421575196, 55.8292698874579], [26.0133213924806, 55.8293047383898], [26.0133412498276, 55.8293134163994], [26.01342087286, 55.8293479892024], [26.0134408268353, 55.8293565975101], [26.0135208348133, 55.8293908908265], [26.0135408846289, 55.8293994290921], [26.0136212743851, 55.8294334415638], [26.0136414192492, 55.8294419094501], [26.0137221876131, 55.8294756397351], [26.0137424267302, 55.8294840369075], [26.0138235705049, 55.8295174836704], [26.0138439030756, 55.8295258097972], [26.0139254190597, 55.829558971718], [26.0139458442811, 55.8295672264702], [26.0140277292666, 55.8296001022433], [26.0140482463321, 55.829608285295], [26.0141304970666, 55.8296408736142], [26.0141511051658, 55.8296489846419], [26.0142337183975, 55.8296812842186], [26.0142544167166, 55.829689322902], [26.0143373892102, 55.8297213324709], [26.0143581769318, 55.8297292984924], [26.0144415054014, 55.8297610167853], [26.0144623817044, 55.8297689098302], [26.0145460628422, 55.8298003355877], [26.0145670269021, 55.8298081553442], [26.0146510574149, 55.8298392873292], [26.0146721084038, 55.8298470334884], [26.0147564849596, 55.8298778704663], [26.014777622046, 55.8298855427221], [26.0148623413517, 55.829916083489], [26.0148835637009, 55.8299236815384], [26.0149686223574, 55.8299539248686], [26.0149899291311, 55.8299614484113], [26.0150753238167, 55.8299913931235], [26.0150967141734, 55.8299988418624], [26.0151824414961, 55.8300284867669], [26.015203914591, 55.8300358604076], [26.0152899711744, 55.8300652043366], [26.0153115261592, 55.8300725025879], [26.0153979086131, 55.830101544385], [26.0154195446366, 55.8301087669586], [26.015506249516, 55.8301375054653], [26.0155279657235, 55.8301446520759], [26.0156149896309, 55.8301730861661], [26.0156367851647, 55.8301801565312], [26.0157241246752, 55.8302082850855], [26.0157459986744, 55.8302152789259], [26.0158336503022, 55.8302431008214], [26.0158556019029, 55.8302500178608], [26.0159435622019, 55.8302775320036], [26.0159655905369, 55.8302843719687], [26.0160538560458, 55.8303115772759], [26.016075960245, 55.8303183398964], [26.0161645274635, 55.8303452352888], [26.0161867066538, 55.8303519202977], [26.0162755720829, 55.8303785047126], [26.0162978253882, 55.8303851118457], [26.0163869855233, 55.8304113842346], [26.0164093120646, 55.8304179132308], [26.0164987633757, 55.8304438725534], [26.016521162271, 55.8304503231549], [26.0166109012246, 55.8304759683857], [26.0166333715893, 55.8304823403376], [26.0167233946733, 55.8305076704726], [26.0167459356197, 55.8305139635232], [26.016836239228, 55.8305389775475], [26.0168588498656, 55.8305451914482], [26.0169494304442, 55.8305698883776], [26.0169721098799, 55.8305760228828], [26.0170629638966, 55.8306004017538], [26.0170857112345, 55.8306064566212], [26.0171768350377, 55.830630516454], [26.0171996493793, 55.8306364914444], [26.0172910393993, 55.8306602312964], [26.0173139198432, 55.8306661261737], [26.0174055724743, 55.8306895451081], [26.0174285181168, 55.8306953596395], [26.0175204297186, 55.8307184567261], [26.0175434396533, 55.8307241906818], [26.0176356066088, 55.8307469650116], [26.0176586799266, 55.8307526181651], [26.0177510986066, 55.8307750688411], [26.017774234396, 55.8307806409691], [26.0178669011319, 55.8308027671001], [26.017890098479, 55.8308082579824], [26.0179830096021, 55.8308300586924], [26.0180062675904, 55.8308354681121], [26.018099419433, 55.8308569425406], [26.0181227371438, 55.8308622702839], [26.0182161260779, 55.8308834175943], [26.0182395025901, 55.8308886634509], [26.0183331248352, 55.8309094827871], [26.0183565592251, 55.8309146465496], [26.0184504111635, 55.8309351371071], [26.0184739025055, 55.8309402185715], [26.0185679803824, 55.8309603795305], [26.0185915277483, 55.8309653784961], [26.0186858278652, 55.830985209064], [26.0187094303249, 55.8309901253333], [26.0188039489494, 55.8310096247251], [26.0188276055703, 55.8310144581039], [26.0189223389904, 55.8310336255538], [26.0189460488381, 55.8310383758511], [26.0190409932622, 55.831057210592], [26.0190647553998, 55.8310618776201], [26.0191599071255, 55.8310803789175], [26.0191837206143, 55.8310849624921], [26.0192790758624, 55.8311031296111], [26.0193029397616, 55.8311076295511], [26.0193984947596, 55.831125461773], [26.0194224081265, 55.8311298779006], [26.0195181591176, 55.8311473745244], [26.0195421210073, 55.831151706665], [26.0196380641954, 55.8311688669969], [26.0196620736613, 55.8311731149796], [26.0197582052528, 55.8311899383411], [26.0197822613464, 55.8311941019979], [26.0198785775513, 55.8312105877259], [26.0199026793221, 55.8312146668923], [26.0199991763273, 55.831230814334], [26.020023322823, 55.831234808849], [26.020119996827, 55.8312506173684], [26.0201441870937, 55.831254527074], [26.0202410342699, 55.8312699960453], [26.020265267352, 55.8312738207871], [26.0203622838753, 55.8312889495994], [26.0203865588152, 55.8312926892264], [26.0204837408576, 55.8313074772827], [26.0205080566963, 55.831311131647], [26.0206054004066, 55.8313255783614], [26.0206297561834, 55.8313291473187], [26.0207272577204, 55.8313432521212], [26.020751652473, 55.8313467355305], [26.0208493079908, 55.8313604978646], [26.0208737407554, 55.8313638955883], [26.0209715463932, 55.8313773149101], [26.0209960162045, 55.831380626814], [26.0210939680795, 55.8313937025908], [26.0211184739707, 55.831396928544], [26.0212165682605, 55.8314096602655], [26.0212411092634, 55.8314128001405], [26.021339342032, 55.8314251872959], [26.0213639171769, 55.8314282409688], [26.0214622845942, 55.8314402830752], [26.0214868929101, 55.8314432504252], [26.0215853910569, 55.8314549470028], [26.0216100315717, 55.8314578279128], [26.0217086565578, 55.8314691784998], [26.0217333282978, 55.831471972856], [26.0218320762544, 55.8314829770071], [26.0218567782449, 55.831485684699], [26.021955645239, 55.831496341976], [26.021980376504, 55.8314989628967], [26.0220793586482, 55.8315092728807], [26.0221041182105, 55.8315118069266], [26.0222032115953, 55.8315217692103], [26.0222279984767, 55.8315242162813], [26.0223271991604, 55.8315338304685], [26.0223520123814, 55.831536190468], [26.0224513164808, 55.8315454561825], [26.0224761550612, 55.8315477290172], [26.0225755586346, 55.8315566458911], [26.0226004215929, 55.8315588314712], [26.0226999207084, 55.831567399152], [26.0227248070622, 55.8315694973912], [26.022824397778, 55.8315777155396], [26.0228493065441, 55.831579726355], [26.0229489849699, 55.83158759465], [26.0229739151641, 55.8315895179621], [26.0230736773223, 55.8315970360896], [26.0230986279596, 55.8315988718226], [26.0231984699025, 55.8316060394853], [26.023223439997, 55.8316077875666], [26.0233233578221, 55.8316146044844], [26.0233483463872, 55.8316162648448], [26.0234483361053, 55.8316227307455], [26.0234733421537, 55.8316243033196], [26.0235733998287, 55.8316304179489], [26.0235984223724, 55.8316319026745], [26.023698544056, 55.8316376657911], [26.0237235821063, 55.8316390626095], [26.0238237638392, 55.8316444739855], [26.0238488164067, 55.8316457828417], [26.0239490542186, 55.8316508422627], [26.0239741203135, 55.8316520631049], [26.0240744102694, 55.8316567703724], [26.0240994889013, 55.8316579031523], [26.0241998270205, 55.8316622580796], [26.0242249171986, 55.8316633027525], [26.0243252995027, 55.8316673051669], [26.0243504002355, 55.8316682616916], [26.0244508228103, 55.8316719114371], [26.024475933106, 55.8316727797758], [26.0245763919035, 55.8316760767053], [26.02460151077, 55.8316768568237], [26.0247020019002, 55.8316798008098], [26.0247271283451, 55.831680492677], [26.0248276477968, 55.831683083602], [26.0248527808272, 55.8316836871908], [26.0249533246153, 55.8316859249522], [26.0249784632381, 55.8316864402387], [26.0250790274384, 55.8316883247492], [26.0251041706603, 55.8316887517132], [26.0252047512445, 55.8316902828973], [26.0252298980723, 55.8316906215218], [26.0253304911117, 55.8316917993198], [26.0253556405515, 55.8316920495915], [26.0254562420438, 55.8316928739566], [26.0254813931021, 55.8316930358655], [26.0255819990772, 55.8316935067654], [26.02560715076, 55.8316935803052], [26.0257077572558, 55.8316936977212], [26.0257329085695, 55.8316936828891], [26.0258335115981, 55.8316934468166], [26.0258586615489, 55.8316933436131], [26.0259592571329, 55.8316927540616], [26.0259844047271, 55.8316925624908], [26.0260849888916, 55.8316916194838], [26.0261101331355, 55.8316913395533], [26.0262107019252, 55.8316900431277], [26.0262358418253, 55.8316896748486], [26.0263363912499, 55.831688025056], [26.0263615258129, 55.8316875684428], [26.0264620518964, 55.8316855653485], [26.0264871801292, 55.8316850204194], [26.0265876789213, 55.8316826641021], [26.026612799831, 55.8316820308785], [26.0267132673118, 55.8316793214327], [26.0267383799058, 55.8316785999397], [26.026838812188, 55.8316755374701], [26.0268639154741, 55.8316747277363], [26.0269643085016, 55.8316713123667], [26.026989401488, 55.8316704144239], [26.0270897513436, 55.8316666462878], [26.0271148330387, 55.8316656601717], [26.0272151357603, 55.8316615394177], [26.0272402051732, 55.8316604651671], [26.0273404567724, 55.8316559919592], [26.0273655129125, 55.8316548296168], [26.0274657094308, 55.8316500041317], [26.0274907513081, 55.8316487537433], [26.0275908888264, 55.8316435761698], [26.0276159154515, 55.8316422377848], [26.0277159899548, 55.8316367083306], [26.0277410003388, 55.8316352820019], [26.0278410079024, 55.831629400884], [26.0278660010571, 55.831627886668], [26.0279659377442, 55.8316216541179], [26.0279909126822, 55.8316200520744], [26.0280907745188, 55.8316134683399], [26.0281157302533, 55.8316117785323], [26.0282155132993, 55.8316048438734], [26.0282404488442, 55.8316030663684], [26.0283401491679, 55.8315957810583], [26.0283650635379, 55.8315939159263], [26.0284646772058, 55.8315862802524], [26.0284895694166, 55.8315843275669], [26.0285890924394, 55.8315763418353], [26.0286139615075, 55.8315743016736], [26.028713390036, 55.8315659661932], [26.0287382349789, 55.8315638386359], [26.0288375650356, 55.83155515374], [26.0288623848715, 55.8315529388711], [26.0289616125229, 55.8315439049038], [26.0289864062712, 55.831541602811], [26.029085527618, 55.8315322201275], [26.0291102942991, 55.8315298309016], [26.0292093054141, 55.8315200998736], [26.0292340440496, 55.8315176236092], [26.0293329410346, 55.8315075446199], [26.0293576506469, 55.8315049814147], [26.0294564295959, 55.8314945548623], [26.0294811092089, 55.8314919048176], [26.0295797661978, 55.8314811311162], [26.0296044148362, 55.8314783943368], [26.0297029459668, 55.8314672739125], [26.0297275626568, 55.8314644505065], [26.0298259640787, 55.8314529837937], [26.0298505478478, 55.8314500738726], [26.0299488156161, 55.8314382613311], [26.029973365493, 55.8314352650101], [26.0300714957561, 55.8314231071031], [26.0300960107708, 55.8314200245004], [26.0301939996594, 55.8314075217073], [26.0302184788433, 55.8314043529447], [26.0303163224619, 55.8313915057626], [26.0303407648479, 55.8313882509655], [26.0304384593381, 55.8313750599012], [26.0304628639606, 55.8313717191981], [26.0305604054944, 55.8313581847684], [26.0305847713891, 55.8313547582913], [26.0306821560548, 55.8313408810391], [26.030706482259, 55.8313373689235], [26.030803706252, 55.8313231493911], [26.0308279918047, 55.8313195517757], [26.0309250512831, 55.8313049905251], [26.0309492952248, 55.831301307552], [26.0310461863338, 55.8312864051616], [26.0310703877067, 55.8312826369764], [26.0311671066198, 55.8312673940348], [26.0311912644677, 55.8312635407863], [26.0312878073736, 55.8312479578944], [26.0313119207421, 55.831244019735], [26.0314082838222, 55.8312280975092], [26.0314323517587, 55.8312240745945], [26.0315285312229, 55.8312078136611], [26.0315525527765, 55.83120370615], [26.0316485448148, 55.8311871071531], [26.0316725190365, 55.8311829152079], [26.0317683198149, 55.8311659788109], [26.0317922457575, 55.8311617025972], [26.0318878515622, 55.8311444294567], [26.0319117282807, 55.8311400691436], [26.0320071352943, 55.8311224599492], [26.0320309618452, 55.8311180157089], [26.0321261662951, 55.8311000711572], [26.032149941737, 55.8310955431654], [26.0322449398776, 55.8310772639625], [26.0322686632715, 55.831072652398], [26.0323634513502, 55.831054039266], [26.0323871217587, 55.8310493443111], [26.0324816960139, 55.8310303979889], [26.032505312502, 55.831025619829], [26.0325996692041, 55.831006341064], [26.0326232308388, 55.831001479888], [26.0327173662909, 55.8309818694355], [26.0327408721415, 55.8309769254354], [26.0328347825711, 55.8309569840815], [26.0328582317089, 55.8309519574527], [26.0329519134451, 55.830931685977], [26.0329753049437, 55.8309265769182], [26.0330687542814, 55.8309059761226], [26.0330920872168, 55.8309007848355], [26.0331853004447, 55.8308798555383], [26.0332085738952, 55.8308745822281], [26.0333015473395, 55.8308533252545], [26.0333247603856, 55.8308479701295], [26.0334174904035, 55.8308263863125], [26.0334406421283, 55.8308209495843], [26.0335331249961, 55.8307990397907], [26.0335562144851, 55.8307935216741], [26.0336484466088, 55.8307712867556], [26.0336714729498, 55.8307656874688], [26.0337634506503, 55.8307431283124], [26.0337864129337, 55.8307374480765], [26.033878132591, 55.8307145655705], [26.0339010299098, 55.8307088046099], [26.0339924878993, 55.8306855996585], [26.0340153193489, 55.8306797582009], [26.0341065120535, 55.8306562317223], [26.0341292767322, 55.8306503099984], [26.0342202005528, 55.8306264629213], [26.0342428975612, 55.8306204611651], [26.0343335489093, 55.8305962944308], [26.0343561773508, 55.8305902128795], [26.0344465526453, 55.830565727443], [26.0344691116262, 55.8305595663368], [26.0345592072917, 55.8305347631669], [26.034581695921, 55.8305285227493], [26.0346715083946, 55.8305034028271], [26.0346939257838, 55.8304970833447], [26.0347834515465, 55.8304716476548], [26.0348057968102, 55.8304652493571], [26.0348950322744, 55.830439498919], [26.0349173045299, 55.830433022059], [26.0350062462257, 55.8304069578742], [26.0350284445934, 55.8304004027077], [26.0351170889593, 55.8303740258203], [26.0351392125622, 55.8303673926064], [26.0352275561443, 55.8303407040443], [26.0352496041087, 55.8303339930449], [26.0353376433831, 55.8303069938731], [26.0353596148381, 55.8303002053533], [26.0354473463261, 55.8302728966388], [26.035469240404, 55.8302660308671], [26.0355566606726, 55.8302384136788], [26.0355784765085, 55.8302314709262], [26.0356655820729, 55.8302035463654], [26.0356873188051, 55.8301965269063], [26.0357741062343, 55.8301682960733], [26.0357957630043, 55.830161200185], [26.0358822288824, 55.8301326641912], [26.0359038048349, 55.830125492154], [26.0359899457292, 55.8300966521326], [26.036011440012, 55.83008940423], [26.0360972525297, 55.8300602613173], [26.0361186642939, 55.8300529378355], [26.0362041450482, 55.830023493182], [26.0362254734481, 55.8300160944105], [26.0363106190497, 55.8299863491842], [26.036331863243, 55.8299788754151], [26.0364166703387, 55.8299488307878], [26.0364378294863, 55.8299412823165], [26.0365222947445, 55.8299109394688], [26.0365433680108, 55.8299033165936], [26.0366274880555, 55.8298726767386], [26.0366484746082, 55.8298649797605], [26.0367322461446, 55.829834044099], [26.036753145155, 55.8298262733222], [26.0368365648861, 55.8297950430719], [26.0368573755286, 55.8297871988033], [26.0369404401192, 55.8297556752134], [26.0369611615721, 55.829747757763], [26.0370438677731, 55.8297159420671], [26.0370644992181, 55.8297079517476], [26.0371468437603, 55.8296758452037], [26.0371673843825, 55.8296677823309], [26.0372493640162, 55.8296353862065], [26.0372698130045, 55.8296272510987], [26.0373514244656, 55.8295945666844], [26.0373717810125, 55.8295863596632], [26.037453021126, 55.8295533882308], [26.0374732844275, 55.8295451096203], [26.0375541499364, 55.8295118524923], [26.0375743191924, 55.8295035026197], [26.0376548069225, 55.8294699611021], [26.0376748813365, 55.8294615402972], [26.0377549881279, 55.8294277157074], [26.0377749669071, 55.8294192243029], [26.0378546895619, 55.8293851179917], [26.0378745719175, 55.829376556323], [26.0379539073101, 55.8293421696284], [26.037973692457, 55.8293335380337], [26.0380526374651, 55.8292988723093], [26.0380723246219, 55.8292901711297], [26.0381508760927, 55.8292552277607], [26.0381704644821, 55.8292464573399], [26.0382486193577, 55.8292112376872], [26.0382681082062, 55.8292023983717], [26.0383458633526, 55.8291669038482], [26.0383652518907, 55.8291579959872], [26.0384426042787, 55.8291222279765], [26.0384618917408, 55.8291132519218], [26.0385388382916, 55.8290772118482], [26.0385580239162, 55.8290681679545], [26.0386345616029, 55.8290318572365], [26.0386536446325, 55.829022745861], [26.0387297704247, 55.8289861659369], [26.0387487501056, 55.8289769874396], [26.038824461008, 55.8289401397496], [26.038843336591, 55.828930894493], [26.0389186296154, 55.8288937804921], [26.0389374003552, 55.8288844688415], [26.0390122725089, 55.8288470900056], [26.0390309376644, 55.8288377123288], [26.039105386016, 55.8288000701222], [26.0391239448502, 55.8287906267898], [26.0391979664413, 55.8287527227091], [26.0392164182216, 55.828743214094], [26.0392900101451, 55.8287050496288], [26.039308354143, 55.8286954761066], [26.0393815134769, 55.828657052773], [26.0393997489681, 55.8286474147219], [26.0394724728372, 55.828608734031], [26.0394905991017, 55.8285990318318], [26.0395628846396, 55.828560095309], [26.0395809009619, 55.8285503293449], [26.0396527452907, 55.8285111385413], [26.0396706509596, 55.8285013091981], [26.0397420512781, 55.8284618656426], [26.0397598455866, 55.8284519733086], [26.0398307990331, 55.8284122785832], [26.0398484812788, 55.8284023236492], [26.0399189850908, 55.8283623793004], [26.0428765282775, 55.8266824753695], [26.0428940963482, 55.8266724578435], [26.0429641420664, 55.8266322639254], [26.0429815966831, 55.826622184591], [26.0430511872047, 55.8265817442345], [26.0430685276785, 55.8265716034897], [26.0431376602679, 55.8265309182855], [26.0431548859142, 55.826520716531], [26.0432235578179, 55.8264797881006], [26.0432406679568, 55.8264695257394], [26.0433088764823, 55.8264283556889], [26.0433258704383, 55.8264180331263], [26.0433936128942, 55.8263766230811], [26.0434104899966, 55.8263662407249], [26.0434777636928, 55.8263245923308], [26.0434945232753, 55.8263141505911], [26.0435613255736, 55.8262722654827], [26.0435779669748, 55.8262617647719], [26.0436442952381, 55.8262196446034], [26.0436608178011, 55.8262090853364], [26.043726669384, 55.8261667317895], [26.0437430724567, 55.8261561143833], [26.0438084448025, 55.8261135291035], [26.0438247277374, 55.8261028539775], [26.0438896182335, 55.826060038668], [26.043905780388, 55.8260493062439], [26.0439701864987, 55.8260062625789], [26.0439862272349, 55.8259954732806], [26.0440501463794, 55.8259522029866], [26.0440660650643, 55.8259413572403], [26.0441294947605, 55.825897861999], [26.0441452907657, 55.8258869602331], [26.044208228488, 55.8258432417776], [26.0442239011903, 55.8258322844227], [26.0442863444735, 55.8257883444669], [26.0443018932542, 55.8257773319558], [26.0443638396051, 55.8257331722557], [26.0443792638506, 55.8257221050234], [26.044440710847, 55.8256777273075], [26.0444560099486, 55.825666605791], [26.0445169551621, 55.8256220118144], [26.0445321285161, 55.8256108364532], [26.0445925695421, 55.8255660279771], [26.0446076165497, 55.8255547992125], [26.0446675509893, 55.8255097780168], [26.0446824710568, 55.8254984962923], [26.0447418965632, 55.8254532641418], [26.0447566891018, 55.8254419299031], [26.0448156033289, 55.825396488585], [26.0448302677549, 55.8253851022797], [26.0448886683505, 55.8253394536103], [26.0449032040853, 55.8253280156882], [26.0449610887914, 55.8252821614343], [26.0449754952614, 55.825270672347], [26.0450328617574, 55.8252246143484], [26.0450471383942, 55.8252130745499], [26.0451039844262, 55.8251668146184], [26.0451181306665, 55.8251552245643], [26.045174453997, 55.8251087645226], [26.0451884692826, 55.8250971246708], [26.0452442676862, 55.8250504663564], [26.0452581514642, 55.8250387771665], [26.0453134227277, 55.8249919224324], [26.0453271744505, 55.8249801843663], [26.0453819164263, 55.8249331350348], [26.0453955355511, 55.8249213485559], [26.0454497460469, 55.8248741065133], [26.0454632320365, 55.8248622720872], [26.0455169089268, 55.824814839188], [26.0455302612492, 55.8248029572822], [26.0455834024046, 55.8247553354105], [26.0455966205331, 55.8247434064941], [26.0456492238841, 55.8246955975064], [26.0456623072973, 55.8246836220507], [26.0457143707397, 55.8246356278618], [26.0457273189213, 55.8246236063397], [26.0457788404174, 55.8245754288304], [26.0457916528569, 55.8245633617167], [26.0458426303778, 55.8245150027864], [26.0458553065696, 55.8245028905577], [26.0459057380876, 55.8244543521326], [26.0459182775317, 55.8244421952672], [26.045968161066, 55.8243934792564], [26.0459805632679, 55.8243812782345], [26.0460298968559, 55.824332386557], [26.0460421613265, 55.8243201418605], [26.0460909430251, 55.8242710764444], [26.0461030692806, 55.8242587885569], [26.0461512971473, 55.8242095513589], [26.0461632847095, 55.8241972207656], [26.0462109568617, 55.8241478137104], [26.0462228052578, 55.8241354408983], [26.0462699198125, 55.8240858659401], [26.0462816285752, 55.8240734513979], [26.0463281836617, 55.8240237105079], [26.0463397523293, 55.8240112547259], [26.0463857461226, 55.8239613498569], [26.0463971742389, 55.823948853327], [26.0464426049268, 55.8238987864483], [26.0464538920411, 55.823886249664], [26.046498757826, 55.8238360227596], [26.0465099034932, 55.823823446216], [26.0465542026078, 55.8237730612675], [26.0465652063885, 55.8237604454614], [26.0466089370865, 55.8237099044581], [26.0466197985468, 55.8236972498875], [26.0466629591, 55.8236465548301], [26.0466736778117, 55.823633861995], [26.0467162665255, 55.8235830148773], [26.0467268420659, 55.8235702842788], [26.0467688572614, 55.8235192871084], [26.0467792892136, 55.8235065192493], [26.0468207292305, 55.8234553740448], [26.0468310171833, 55.8234425694294], [26.0468718803816, 55.8233912782184], [26.0468820239294, 55.8233784373522], [26.0469223087133, 55.8233270021417], [26.0469323074562, 55.8233141255319], [26.0469720122206, 55.8232625483746], [26.0469818657645, 55.8232496365298], [26.0470209889616, 55.8231979194404], [26.0470306969181, 55.8231849728703], [26.0470692369907, 55.8231331179107], [26.0470787989772, 55.8231201371268], [26.0471167544187, 55.8230681463283], [26.0471261700582, 55.823055131843], [26.0471635393676, 55.8230030072654], [26.0471728082891, 55.8229899595928], [26.0472095899843, 55.8229377033079], [26.0472187118225, 55.8229246229631], [26.0472549044704, 55.822872237011], [26.0472638788658, 55.8228591245107], [26.0472994810273, 55.8228066109788], [26.0473083076263, 55.8227934668408], [26.0473433179117, 55.8227408277829], [26.0473519963664, 55.8227276525261], [26.0473864133758, 55.8226748900521], [26.0473949433444, 55.8226616841969], [26.0474287657452, 55.822608800354], [26.0474371468914, 55.8225955644218], [26.0474703733331, 55.8225425613265], [26.0474786053269, 55.82252929584], [26.0475112345111, 55.8224761755682], [26.0475193170281, 55.8224628810513], [26.0475513476588, 55.822409645718], [26.0475592803807, 55.8223963226957], [26.0475907112157, 55.8223429743704], [26.0475984938298, 55.8223296233686], [26.0476293236052, 55.822276164202], [26.0476369558051, 55.822262785748], [26.0476671833217, 55.8222092178251], [26.0476746648069, 55.8221958124473], [26.0477042888815, 55.8221421378696], [26.0477116193572, 55.8221287060973], [26.0477406388009, 55.8220749270252], [26.0477478179785, 55.8220614693888], [26.0477762316685, 55.8220075879088], [26.0477832592653, 55.8219941049396], [26.0478110660766, 55.8219401231908], [26.0478179418158, 55.8219266154212], [26.0478451406462, 55.8218725355499], [26.0478518642572, 55.8218590035133], [26.0478784540467, 55.8218048276333], [26.0478850252647, 55.8217912718641], [26.0479110049649, 55.8217370021173], [26.0479174235313, 55.8217234231508], [26.04794279211, 55.8216690617003], [26.0479490577721, 55.8216554600726], [26.0479738142429, 55.8216010090396], [26.0479799267541, 55.8215873852877], [26.0480040701306, 55.8215328468483], [26.0480100292504, 55.8215192015102], [26.0480335585987, 55.8214645777815], [26.0480393640925, 55.821450911396], [26.0480622784688, 55.8213962045761], [26.0480679301083, 55.8213825176828], [26.0480902286222, 55.8213277299056], [26.0480957261851, 55.821314023045], [26.0481174079598, 55.8212591564723], [26.0481227512296, 55.8212454301855], [26.048143815404, 55.8211904870052], [26.0481490041707, 55.8211767418343], [26.0481694499258, 55.8211217241908], [26.0481744839853, 55.8211079606785], [26.0481943105089, 55.821052870766], [26.0481991896633, 55.8210390894556], [26.0482183961829, 55.82098392943], [26.0482231202403, 55.8209701308658], [26.0482417059925, 55.8209149029292], [26.0482462747673, 55.8209010876559], [26.0482642390337, 55.8208457939521], [26.0482686523463, 55.8208319625152], [26.0482859944105, 55.8207766052592], [26.0482902520874, 55.8207627582049], [26.0483069712703, 55.8207073395757], [26.0483110731442, 55.8206934774507], [26.0483271687905, 55.8206379996318], [26.0483311147004, 55.8206241229833], [26.0483465861797, 55.8205685881574], [26.0483503759706, 55.8205546975334], [26.0483652226684, 55.8204991079195], [26.0483688561915, 55.8204852038684], [26.0483830775357, 55.8204295616204], [26.0483865546483, 55.8204156446911], [26.0484001500697, 55.820359952049], [26.0484034706354, 55.8203460227911], [26.0484164396075, 55.8202902819265], [26.048419603496, 55.8202763408899], [26.0484319455079, 55.8202205540121], [26.0484349525951, 55.8202066017471], [26.0484466671635, 55.8201507710557], [26.0484495173316, 55.8201368081133], [26.0484606039965, 55.8200809358171], [26.0484632971338, 55.8200669627485], [26.0484737554623, 55.820011051045], [26.0484762914633, 55.8199970684019], [26.0484861210431, 55.8199411195142], [26.0484884998085, 55.8199271278486], [26.0484977002583, 55.8198711439658], [26.048499921695, 55.8198571438301], [26.048508492653, 55.8198011271741], [26.0485105566742, 55.8197871191211], [26.0485184978047, 55.8197310719085], [26.0485204043297, 55.8197170564913], [26.0485277153247, 55.8196609809191], [26.0485294642791, 55.8196469586908], [26.0485361448515, 55.8195908569873], [26.0485377361671, 55.8195768285016], [26.0485437860572, 55.8195207028766], [26.048545219672, 55.8195066686874], [26.0485506386442, 55.8194505213582], [26.0485519145025, 55.8194364820196], [26.0485567023475, 55.8193803151879], [26.0485578203996, 55.819366271254], [26.0485619769294, 55.8193100871666], [26.0485629371322, 55.8192960391918], [26.048566462188, 55.8192398400414], [26.0485672645044, 55.8192257885805], [26.0485701579499, 55.8191695765891], [26.0485708023491, 55.8191555221968], [26.0485730640724, 55.8190992996135], [26.0485735505298, 55.8190852428445], [26.0485751804471, 55.8190290118278], [26.0485755089442, 55.8190149532371], [26.0485765069926, 55.8189587160764], [26.0485766775174, 55.818944656219], [26.048577043662, 55.8188884150832], [26.0485770562087, 55.8188743545141], [26.0485767904379, 55.8188181116472], [26.0485766450067, 55.8188040509216], [26.0485757473347, 55.8187478085382], [26.0485754439322, 55.818733748211], [26.0485739143979, 55.8186775085382], [26.048573453037, 55.8186634491647], [26.0485712917038, 55.8186072144099], [26.0485706724036, 55.8185931565449], [26.0485678793598, 55.8185369289234], [26.0485671021454, 55.818522873122], [26.048563677506, 55.8184666548807], [26.0485627424092, 55.8184526016977], [26.048558686312, 55.818396395038], [26.0485575933703, 55.8183823450281], [26.0485529059786, 55.8183261521664], [26.0485516552361, 55.8183121058844], [26.0485463367389, 55.8182559290474], [26.0485449282459, 55.8182418870476], [26.0485389788542, 55.8181857284309], [26.048537412667, 55.8181716912677], [26.0485308326246, 55.8181155531373], [26.048529108806, 55.8181015213648], [26.0485218983681, 55.8180454058702], [26.0485200169868, 55.8180313800423], [26.048512176449, 55.8179752894589], [26.0485101375803, 55.8179612701294], [26.0485016672505, 55.8179052066347], [26.0484994709756, 55.8178911943569], [26.0484903711949, 55.8178351601857], [26.0484880176014, 55.8178211555126], [26.0484782887294, 55.8177651528589], [26.0455051090879, 55.8010299374867], [26.0455026013384, 55.8010159408912], [26.0454922561682, 55.8009599716321], [26.0454895913595, 55.800945983742], [26.0454786181662, 55.8008900504333], [26.0454757964044, 55.8008760718007], [26.0454641956164, 55.800820176608], [26.0454612170136, 55.8008062077847], [26.045448989096, 55.8007503529341], [26.0454458537706, 55.8007363944715], [26.0454329992098, 55.8006805821694], [26.0454297072865, 55.8006666346184], [26.0454162265946, 55.8006108670732], [26.0454127782042, 55.8005969309845], [26.0453986719102, 55.800541210371], [26.0453950671895, 55.8005272862945], [26.0453803358595, 55.8004716148368], [26.0453765749518, 55.8004577033222], [26.0453612191704, 55.8004020832164], [26.0453573022248, 55.8003881848129], [26.0453413225972, 55.800332618239], [26.0453372497692, 55.8003187334951], [26.0453206469362, 55.8002632226696], [26.0453164183874, 55.8002493521335], [26.045299192999, 55.8001938992195], [26.0452948088972, 55.8001800434385], [26.0452769616398, 55.8001246506357], [26.0452724221588, 55.8001108101568], [26.0452539537497, 55.8000554796801], [26.0452492590694, 55.8000416550496], [26.0452301702246, 55.7999863890344], [26.0452253205312, 55.799972580798], [26.0452056120184, 55.7999173814584], [26.0452006075041, 55.7999035901611], [26.045180280104, 55.7998484596737], [26.0451751209672, 55.7998346858598], [26.0451541754774, 55.7997796263794], [26.0451488619225, 55.7997658705926], [26.045127299182, 55.7997108843165], [26.0451218314195, 55.7996971470997], [26.0450996522802, 55.7996422361915], [26.0450940305268, 55.799628518087], [26.0445572205629, 55.7983371526785], [26.0445514454707, 55.7983234541992], [26.0445280379186, 55.7982687004045], [26.0445221092915, 55.7982550221189], [26.0444980880648, 55.7982003501762], [26.0444920061375, 55.7981866926241], [26.0444673721842, 55.7981321046846], [26.0444611371975, 55.7981184684051], [26.0444358915041, 55.7980639666474], [26.0444295037049, 55.7980503521788], [26.044403647261, 55.7979959387321], [26.0443971069023, 55.7979823466117], [26.0321966236999, 55.7726229272871], [26.0310053783176, 55.7709392225215], [26.0293723603804, 55.7695188165462], [26.0272940974918, 55.7682938614894], [26.0248443131549, 55.7673077899581], [26.0221098833164, 55.7665955621821], [26.0191877581307, 55.7661824284788], [26.0161815295934, 55.7660830355812], [26.0131977658508, 55.7663009082429], [25.9745240097854, 55.7712305552325]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;f49b4ea5-0886-42ee-b01e-8938bf0af54b&#x27;, &#x27;Name&#x27;: &#x27;PH1A_PHR_MS___3_20180908T094354_20180908T094400_TOU_1234_06c0.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 610488074, &#x27;OriginDate&#x27;: &#x27;2024-02-25T17:18:31.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-02-26T19:45:59.232727Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-02-26T19:46:04.221464Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2018/PHR_MS___3_E1F0/2018/09/08/PH1A_PHR_MS___3_20180908T094354_20180908T094400_TOU_1234_06c0&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;d804b19c4a7bb221ba911ea878583e5b&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-02-26T19:46:03.105886Z&#x27;}, {&#x27;Value&#x27;: &#x27;ef272ccfd156b1359fd8f7d52fac8ea67613c258a8a5232cc5d7237cb7f422b4&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-02-26T19:46:04.097866Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2018-09-08T09:43:54.000000Z&#x27;, &#x27;End&#x27;: &#x27;2018-09-08T09:44:00.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((19.6255611628541 45.6644160405933, 19.740955483686 45.6710696833563, 19.7434593321442 45.6708910253431, 19.7458682363602 45.6703733460008, 19.7480895851635 45.6695365493559, 19.766579667659 45.662242837385, 19.7685465618893 45.6612033814554, 19.7701972476685 45.6599212321123, 19.7714712526968 45.6584433801993, 19.7723219213229 45.6568239847481, 19.7727181208076 45.6551223867448, 19.7781780428266 45.5919280335285, 19.778469910255 45.5876240857081, 19.7782878243706 45.5318247688225, 19.7773859733911 45.5310131844584, 19.7755802341854 45.5299036010272, 19.7735091661151 45.5290524331551, 19.7712458987245 45.5284897317397, 19.7688703385461 45.5282353627048, 19.7664663513374 45.5282983065641, 19.592647706047 45.5442831211942, 19.592647706047 45.5442831211942, 19.5606297922661 45.5471955450108, 19.5580867360031 45.5476147144031, 19.5557142278354 45.5483870698802, 19.5536107506558 45.5494805549152, 19.5518636349517 45.5508497817888, 19.5505454348321 45.5524379132941, 19.5497109141525 45.5541790198026, 19.5456040312213 45.5660215264822, 19.545363898382 45.5677611151641, 19.5454227456006 45.6529293176386, 19.5456543118622 45.6546258350387, 19.546338095885 45.656259382627, 19.547449583384 45.657771303917, 19.5489488932753 45.6591073051139, 19.5507822061257 45.6602194061831, 19.5528836951146 45.6610676655443, 19.5551778903629 45.6616216161727, 19.6101186240624 45.6704584874383, 19.6126285095442 45.6707282094014, 19.6151678483222 45.6706452672795, 19.6151678483247 45.6706452672792, 19.6175872114117 45.670225320083, 19.6198481317307 45.6694860498513, 19.6218654973216 45.6684552897863, 19.6235633772905 45.667171845311, 19.6248778811868 45.6656840314033, 19.6255611628541 45.6644160405933))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[19.6255611628541, 45.6644160405933], [19.740955483686, 45.6710696833563], [19.7434593321442, 45.6708910253431], [19.7458682363602, 45.6703733460008], [19.7480895851635, 45.6695365493559], [19.766579667659, 45.662242837385], [19.7685465618893, 45.6612033814554], [19.7701972476685, 45.6599212321123], [19.7714712526968, 45.6584433801993], [19.7723219213229, 45.6568239847481], [19.7727181208076, 45.6551223867448], [19.7781780428266, 45.5919280335285], [19.778469910255, 45.5876240857081], [19.7782878243706, 45.5318247688225], [19.7773859733911, 45.5310131844584], [19.7755802341854, 45.5299036010272], [19.7735091661151, 45.5290524331551], [19.7712458987245, 45.5284897317397], [19.7688703385461, 45.5282353627048], [19.7664663513374, 45.5282983065641], [19.592647706047, 45.5442831211942], [19.592647706047, 45.5442831211942], [19.5606297922661, 45.5471955450108], [19.5580867360031, 45.5476147144031], [19.5557142278354, 45.5483870698802], [19.5536107506558, 45.5494805549152], [19.5518636349517, 45.5508497817888], [19.5505454348321, 45.5524379132941], [19.5497109141525, 45.5541790198026], [19.5456040312213, 45.5660215264822], [19.545363898382, 45.5677611151641], [19.5454227456006, 45.6529293176386], [19.5456543118622, 45.6546258350387], [19.546338095885, 45.656259382627], [19.547449583384, 45.657771303917], [19.5489488932753, 45.6591073051139], [19.5507822061257, 45.6602194061831], [19.5528836951146, 45.6610676655443], [19.5551778903629, 45.6616216161727], [19.6101186240624, 45.6704584874383], [19.6126285095442, 45.6707282094014], [19.6151678483222, 45.6706452672795], [19.6151678483247, 45.6706452672792], [19.6175872114117, 45.670225320083], [19.6198481317307, 45.6694860498513], [19.6218654973216, 45.6684552897863], [19.6235633772905, 45.667171845311], [19.6248778811868, 45.6656840314033], [19.6255611628541, 45.6644160405933]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;fc4c0cf8-b2b6-45b2-8312-f0587878b12e&#x27;, &#x27;Name&#x27;: &#x27;SP06_NAO_MS4__3_20180706T095526_20180706T095530_TOU_1234_f2bf_COG.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 23669560, &#x27;OriginDate&#x27;: &#x27;2025-02-24T16:00:37.816030Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-02-24T17:01:29.573410Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-02-24T17:01:29.573410Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2018/NAO_MS4__3_E1F0-COG/2018/07/06/SP06_NAO_MS4__3_20180706T095526_20180706T095530_TOU_1234_f2bf_COG&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;089bd244e92b245a5d0ef86da8ccbc8a&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T17:01:28.626489Z&#x27;}, {&#x27;Value&#x27;: &#x27;ee01d28a6449f818db1e3f12c84b29a9dbb78b4c693db74e4f4668c350f5a85c&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-02-24T17:01:28.691153Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2018-07-06T09:55:26.000000Z&#x27;, &#x27;End&#x27;: &#x27;2018-07-06T09:55:30.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((18.7978273987759 59.9652364134993, 18.7944764380098 59.9656145065211, 18.7913355692094 59.9663084502839, 18.7885209239272 59.9672925905429, 18.7861365983175 59.9685305415893, 18.7842708063646 59.9699765290117, 18.7829926156937 59.9715770795932, 18.7823493862813 59.973272996379, 18.7823650077087 59.9750015463151, 18.783039001731 59.9766987798757, 18.8298068444999 60.0576878028479, 18.829806844501 60.0576878028498, 18.8298294435937 60.0577254903447, 18.8311815189144 60.0593634302393, 18.8643779653949 60.0963745079075, 18.8690041791947 60.1006650080052, 18.8710396513786 60.102143254622, 18.8736174469242 60.1033921903832, 18.8766353221951 60.1043622540167, 18.8799735365953 60.1050149474876, 18.8834996091757 60.1053243666745, 18.8870735860971 60.1052782315138, 18.9061851331464 60.1040685622686, 18.9090787159627 60.103761821875, 18.909629395005 60.1036742099706, 18.9118417300424 60.1032175860922, 18.9143079006195 60.1024790630896, 18.9163883517897 60.101608353679, 18.9175866417901 60.1009625325533, 18.919057638526 60.0999494143911, 18.9201249258493 60.0989594778182, 18.920570560659 60.0984312533382, 18.9211331206269 60.0975723425982, 18.9213461665572 60.0971389094842, 18.9515960627483 60.0304025567792, 18.9525426325891 60.0279457828637, 18.9525462042619 60.0279090845221, 18.9524072340976 60.0262960640919, 18.936292082511 59.9657511418462, 18.9355043090554 59.9640554314361, 18.9340825940633 59.9624655352202, 18.9320802316964 59.9610409583631, 18.9295722211407 59.9598350120657, 18.9266524538732 59.9588928211406, 18.9234301993537 59.9582496382366, 18.9200260205788 59.9579295272841, 18.9165672714508 59.9579444649667, 18.9164840283456 59.9579488975556, 18.7978273987759 59.9652364134993))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[18.7978273987759, 59.9652364134993], [18.7944764380098, 59.9656145065211], [18.7913355692094, 59.9663084502839], [18.7885209239272, 59.9672925905429], [18.7861365983175, 59.9685305415893], [18.7842708063646, 59.9699765290117], [18.7829926156937, 59.9715770795932], [18.7823493862813, 59.973272996379], [18.7823650077087, 59.9750015463151], [18.783039001731, 59.9766987798757], [18.8298068444999, 60.0576878028479], [18.829806844501, 60.0576878028498], [18.8298294435937, 60.0577254903447], [18.8311815189144, 60.0593634302393], [18.8643779653949, 60.0963745079075], [18.8690041791947, 60.1006650080052], [18.8710396513786, 60.102143254622], [18.8736174469242, 60.1033921903832], [18.8766353221951, 60.1043622540167], [18.8799735365953, 60.1050149474876], [18.8834996091757, 60.1053243666745], [18.8870735860971, 60.1052782315138], [18.9061851331464, 60.1040685622686], [18.9090787159627, 60.103761821875], [18.909629395005, 60.1036742099706], [18.9118417300424, 60.1032175860922], [18.9143079006195, 60.1024790630896], [18.9163883517897, 60.101608353679], [18.9175866417901, 60.1009625325533], [18.919057638526, 60.0999494143911], [18.9201249258493, 60.0989594778182], [18.920570560659, 60.0984312533382], [18.9211331206269, 60.0975723425982], [18.9213461665572, 60.0971389094842], [18.9515960627483, 60.0304025567792], [18.9525426325891, 60.0279457828637], [18.9525462042619, 60.0279090845221], [18.9524072340976, 60.0262960640919], [18.936292082511, 59.9657511418462], [18.9355043090554, 59.9640554314361], [18.9340825940633, 59.9624655352202], [18.9320802316964, 59.9610409583631], [18.9295722211407, 59.9598350120657], [18.9266524538732, 59.9588928211406], [18.9234301993537, 59.9582496382366], [18.9200260205788, 59.9579295272841], [18.9165672714508, 59.9579444649667], [18.9164840283456, 59.9579488975556], [18.7978273987759, 59.9652364134993]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;3b323fa6-8ad0-4df7-a016-230b7ce68818&#x27;, &#x27;Name&#x27;: &#x27;RS02_SAR_SW_SCW_20231201T161332_20231201T161448_GAT_83336_0000&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 379826364, &#x27;OriginDate&#x27;: &#x27;2024-07-21T07:10:37.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-07-22T07:36:10.102121Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-07-22T09:00:20.698618Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/SAR_SEA_ICE/SAR_SW_SCW_6F15/2023/12/01/RS02_SAR_SW_SCW_20231201T161332_20231201T161448_GAT_83336_0000&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;7f125b2eef99ee49b84fc4aa778b7ade&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-07-22T09:00:19.987835Z&#x27;}, {&#x27;Value&#x27;: &#x27;01319f4ea6404c6f549a4fa53ac2ab969051cb2dfcae3ce64d16caa8b609cca8&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-07-22T09:00:20.593040Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-12-01T16:13:32.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-12-01T16:14:48.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((13.74 63.36, 16.34 58.97, 25.47 59.87, 24.25 64.32, 13.74 63.36))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[13.74, 63.36], [16.34, 58.97], [25.47, 59.87], [24.25, 64.32], [13.74, 63.36]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;05e62d2d-2dca-43d0-994d-673f96f0b7f1&#x27;, &#x27;Name&#x27;: &#x27;PH1A_PHR_BUN__3_20160816T084845_20160816T084854_TOU_1234_4685.DIMA&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 213286999, &#x27;OriginDate&#x27;: &#x27;2024-03-11T09:26:10.000000Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2024-03-14T04:28:33.145124Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2024-03-14T04:28:37.743450Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2015/PHR_BUN__3_71F4/2016/08/16/PH1A_PHR_BUN__3_20160816T084845_20160816T084854_TOU_1234_4685&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;bd19e50cb3233a0733402bd2c119e1a0&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-03-14T04:28:37.154963Z&#x27;}, {&#x27;Value&#x27;: &#x27;559247d2e22dd24970b345a772f46e84f878a69e4341ca629686db10d238392f&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2024-03-14T04:28:37.580158Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2016-08-16T08:48:45.000000Z&#x27;, &#x27;End&#x27;: &#x27;2016-08-16T08:48:54.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;POLYGON ((32.623640202289 40.1073003597303, 32.6216661204475 40.1092287793998, 32.6200744544806 40.1119915180141, 32.6201578941387 40.1151788622101, 32.6218919292727 40.1178545392001, 32.6475939292727 40.1404585392183, 32.6503069570277 40.1418059578355, 32.6533307394056 40.1416248593508, 32.6558635529417 40.1399632600848, 32.6625594241987 40.13247818999, 32.6673540387995 40.132427578925, 32.6727045106634 40.1410673432776, 32.674381618488 40.1428235465047, 32.6766251684873 40.1437527525266, 32.6908301684873 40.1464077525287, 32.6919220625277 40.1462892125259, 32.691755175312 40.0590634981298, 32.6915780092268 40.0590211091908, 32.6768150092268 40.0594931091911, 32.675202051977 40.0597725498512, 32.6638642864511 40.0634184588615, 32.6268836641236 40.0605200903421, 32.6239103873266 40.0610661461612, 32.6216008440037 40.0630166746815, 32.6205648819763 40.0658566279465, 32.6179028819763 40.0953756279703, 32.6185195122645 40.0985732235405, 32.6221355122645 40.1056752235462, 32.623640202289 40.1073003597303))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[32.623640202289, 40.1073003597303], [32.6216661204475, 40.1092287793998], [32.6200744544806, 40.1119915180141], [32.6201578941387, 40.1151788622101], [32.6218919292727, 40.1178545392001], [32.6475939292727, 40.1404585392183], [32.6503069570277, 40.1418059578355], [32.6533307394056, 40.1416248593508], [32.6558635529417, 40.1399632600848], [32.6625594241987, 40.13247818999], [32.6673540387995, 40.132427578925], [32.6727045106634, 40.1410673432776], [32.674381618488, 40.1428235465047], [32.6766251684873, 40.1437527525266], [32.6908301684873, 40.1464077525287], [32.6919220625277, 40.1462892125259], [32.691755175312, 40.0590634981298], [32.6915780092268, 40.0590211091908], [32.6768150092268, 40.0594931091911], [32.675202051977, 40.0597725498512], [32.6638642864511, 40.0634184588615], [32.6268836641236, 40.0605200903421], [32.6239103873266, 40.0610661461612], [32.6216008440037, 40.0630166746815], [32.6205648819763, 40.0658566279465], [32.6179028819763, 40.0953756279703], [32.6185195122645, 40.0985732235405], [32.6221355122645, 40.1056752235462], [32.623640202289, 40.1073003597303]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;ef1a3331-9a04-4548-832e-9ff8127e4a44&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230725T092249_20230725T092251_TOU_049306_c396.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 141862743, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:19:37.817553Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:25:23.827761Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:25:23.827761Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/25/DM02_HRS_MS2_1D_20230725T092249_20230725T092251_TOU_049306_c396&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;93c3ae81f51973657c90960d6bd58d54&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:25:21.112204Z&#x27;}, {&#x27;Value&#x27;: &#x27;a6f36b5cebee25e350cd296fd821eb928936ae115043663ed5bf86e146dac2d3&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:25:21.335179Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-25T09:22:49.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-25T09:22:51.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((7.442967 44.848282, 7.443818 44.846329, 7.534256 44.860783, 7.546185 44.823616, 7.451753 44.821358, 7.451518 44.817841, 7.45113 44.816242, 7.45016 44.813686, 7.449336 44.812164, 7.447736 44.809864, 7.444801 44.806854, 7.442484 44.805073, 7.43989 44.803467, 7.437931 44.802486, 7.433505 44.800785, 7.428781 44.799648, 7.437672 44.773991, 7.437789 44.771423, 7.438879 44.77145, 7.448279 44.744217, 7.410179 44.743279, 7.404063 44.762444, 7.404789 44.762558, 7.393471 44.798283, 7.389792 44.798191, 7.377063 44.837723, 7.402708 44.841827, 7.442967 44.848282)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[7.442967, 44.848282], [7.443818, 44.846329], [7.534256, 44.860783], [7.546185, 44.823616], [7.451753, 44.821358], [7.451518, 44.817841], [7.45113, 44.816242], [7.45016, 44.813686], [7.449336, 44.812164], [7.447736, 44.809864], [7.444801, 44.806854], [7.442484, 44.805073], [7.43989, 44.803467], [7.437931, 44.802486], [7.433505, 44.800785], [7.428781, 44.799648], [7.437672, 44.773991], [7.437789, 44.771423], [7.438879, 44.77145], [7.448279, 44.744217], [7.410179, 44.743279], [7.404063, 44.762444], [7.404789, 44.762558], [7.393471, 44.798283], [7.389792, 44.798191], [7.377063, 44.837723], [7.402708, 44.841827], [7.442967, 44.848282]]]]}}, {&#x27;@odata.mediaContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;Id&#x27;: &#x27;56611c33-9b95-4be7-9928-61119d3959a3&#x27;, &#x27;Name&#x27;: &#x27;DM02_HRS_MS2_1D_20230717T091021_20230717T091024_TOU_049187_399a.SAFE&#x27;, &#x27;ContentType&#x27;: &#x27;application/octet-stream&#x27;, &#x27;ContentLength&#x27;: 260529980, &#x27;OriginDate&#x27;: &#x27;2025-03-12T16:06:01.349694Z&#x27;, &#x27;PublicationDate&#x27;: &#x27;2025-03-12T16:12:16.643942Z&#x27;, &#x27;ModificationDate&#x27;: &#x27;2025-03-12T16:12:16.643942Z&#x27;, &#x27;Online&#x27;: True, &#x27;EvictionDate&#x27;: &#x27;9999-12-31T23:59:59.999999Z&#x27;, &#x27;S3Path&#x27;: &#x27;/eodata/CCM/VHR_IMAGE_2024/HRS_MS2_1D_0476/2023/07/17/DM02_HRS_MS2_1D_20230717T091021_20230717T091024_TOU_049187_399a&#x27;, &#x27;Checksum&#x27;: [{&#x27;Value&#x27;: &#x27;fcafc3d88d0b74031de8701b89b84231&#x27;, &#x27;Algorithm&#x27;: &#x27;MD5&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:12:14.976059Z&#x27;}, {&#x27;Value&#x27;: &#x27;68b472ac9088380f2d4800df275cec4e58fab9eb110d739b57149e137131abda&#x27;, &#x27;Algorithm&#x27;: &#x27;BLAKE3&#x27;, &#x27;ChecksumDate&#x27;: &#x27;2025-03-12T16:12:15.368549Z&#x27;}], &#x27;ContentDate&#x27;: {&#x27;Start&#x27;: &#x27;2023-07-17T09:10:21.000000Z&#x27;, &#x27;End&#x27;: &#x27;2023-07-17T09:10:24.000000Z&#x27;}, &#x27;Footprint&#x27;: &quot;geography&#x27;SRID=4326;MULTIPOLYGON (((10.637899 44.208771, 10.638816 44.206997, 10.649474 44.176468, 10.649859 44.17411, 10.649779 44.173107, 10.64924 44.17128, 10.648186 44.169521, 10.64744 44.168674, 10.64574 44.167263, 10.644678 44.166615, 10.642415 44.165619, 10.639975 44.164982, 10.667048 44.087326, 10.608999 44.077732, 10.608976 44.075603, 10.561772 44.067818, 10.523644 44.190113, 10.549246 44.194271, 10.637899 44.208771)))&#x27;&quot;, &#x27;GeoFootprint&#x27;: {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10.637899, 44.208771], [10.638816, 44.206997], [10.649474, 44.176468], [10.649859, 44.17411], [10.649779, 44.173107], [10.64924, 44.17128], [10.648186, 44.169521], [10.64744, 44.168674], [10.64574, 44.167263], [10.644678, 44.166615], [10.642415, 44.165619], [10.639975, 44.164982], [10.667048, 44.087326], [10.608999, 44.077732], [10.608976, 44.075603], [10.561772, 44.067818], [10.523644, 44.190113], [10.549246, 44.194271], [10.637899, 44.208771]]]]}}], &#x27;@odata.nextLink&#x27;: &#x27;https://catalogue.dataspace.copernicus.eu/odata/v1/Products?%24filter=Collection%2FName+eq+%27CCM%27+and+Attributes%2FOData.CSC.StringAttribute%2Fany%28att%3Aatt%2FName+eq+%27productType%27%29&amp;%24top=100&amp;%24skip=100&#x27;}"}, {"fullname": "cpom.dems.get_cop90_dem.df", "modulename": "cpom.dems.get_cop90_dem", "qualname": "df", "kind": "variable", "doc": "<p></p>\n", "default_value": "     @odata.mediaContentType  ...                                       GeoFootprint\n0   application/octet-stream  ...  {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[-3.02754...\n1   application/octet-stream  ...  {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[-6.66172...\n2   application/octet-stream  ...  {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[14.30016...\n3   application/octet-stream  ...  {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[15.01334...\n4   application/octet-stream  ...  {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[14...\n..                       ...  ...                                                ...\n95  application/octet-stream  ...  {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[18.79782...\n96  application/octet-stream  ...  {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[13.74, 6...\n97  application/octet-stream  ...  {&#x27;type&#x27;: &#x27;Polygon&#x27;, &#x27;coordinates&#x27;: [[[32.62364...\n98  application/octet-stream  ...  {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[7....\n99  application/octet-stream  ...  {&#x27;type&#x27;: &#x27;MultiPolygon&#x27;, &#x27;coordinates&#x27;: [[[[10...\n\n[100 rows x 15 columns]"}, {"fullname": "cpom.dems.tests", "modulename": "cpom.dems.tests", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "cpom.dems.tests.test_dems", "modulename": "cpom.dems.tests.test_dems", "kind": "module", "doc": "<p>pytests for Dem class</p>\n"}, {"fullname": "cpom.dems.tests.test_dems.pytestmark", "modulename": "cpom.dems.tests.test_dems", "qualname": "pytestmark", "kind": "variable", "doc": "<p></p>\n", "default_value": "MarkDecorator(mark=Mark(name=&#x27;requires_external_data&#x27;, args=(), kwargs={}))"}, {"fullname": "cpom.dems.tests.test_dems.log", "modulename": "cpom.dems.tests.test_dems", "qualname": "log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger cpom.dems.tests.test_dems (WARNING)&gt;"}, {"fullname": "cpom.dems.tests.test_dems.test_dems_all", "modulename": "cpom.dems.tests.test_dems", "qualname": "test_dems_all", "kind": "function", "doc": "<p>load DEMs and test interpolated elevations to tolerance of 1m</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dem_name (str):</strong>  _description_</li>\n<li><strong>lats (np.ndarray):</strong>  latitude values</li>\n<li><strong>lons (np.ndarray):</strong>  longitude values</li>\n<li><strong>elevs (np.ndarray:</strong>  expected elevation values</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dem_name</span>, </span><span class=\"param\"><span class=\"n\">lats</span>, </span><span class=\"param\"><span class=\"n\">lons</span>, </span><span class=\"param\"><span class=\"n\">elevs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.tests.test_dems.test_dems_zarr", "modulename": "cpom.dems.tests.test_dems", "qualname": "test_dems_zarr", "kind": "function", "doc": "<p>load Zarr format DEMs and test interpolated elevations to tolerance of 1m</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dem_name_zarr (str):</strong>  _description_</li>\n<li><strong>lats (np.ndarray):</strong>  latitude values</li>\n<li><strong>lons (np.ndarray):</strong>  longitude values</li>\n<li><strong>elevs (np.ndarray:</strong>  expected elevation values</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dem_name_zarr</span>, </span><span class=\"param\"><span class=\"n\">lats</span>, </span><span class=\"param\"><span class=\"n\">lons</span>, </span><span class=\"param\"><span class=\"n\">elevs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.tests.test_dems.test_compare_dems_zarr_and_tiff", "modulename": "cpom.dems.tests.test_dems", "qualname": "test_compare_dems_zarr_and_tiff", "kind": "function", "doc": "<p>Compare zarr and tiff DEMs to a tolerance of 0.001m</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dem_name (str):</strong>  name of Dem object using Tiff format</li>\n<li><strong>dem_name_zarr (str):</strong>  name of Dem object using Zarr format</li>\n<li><strong>lats (np.ndarray):</strong>  latitude values</li>\n<li><strong>lons (np.ndarray):</strong>  longitude values</li>\n<li><strong>elevs (np.ndarray:</strong>  expected elevation values</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dem_name</span>, </span><span class=\"param\"><span class=\"n\">dem_name_zarr</span>, </span><span class=\"param\"><span class=\"n\">lats</span>, </span><span class=\"param\"><span class=\"n\">lons</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.dems.tests.test_dems.test_grn_dems_zarr", "modulename": "cpom.dems.tests.test_dems", "qualname": "test_grn_dems_zarr", "kind": "function", "doc": "<p>load Zarr format DEMs and test interpolated elevations to tolerance of 1m</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dem_name_zarr (str):</strong>  _description_</li>\n<li><strong>lats (np.ndarray):</strong>  latitude values</li>\n<li><strong>lons (np.ndarray):</strong>  longitude values</li>\n<li><strong>elevs (np.ndarray:</strong>  expected elevation values</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dem_name_zarr</span>, </span><span class=\"param\"><span class=\"n\">lats</span>, </span><span class=\"param\"><span class=\"n\">lons</span>, </span><span class=\"param\"><span class=\"n\">elevs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.gridding", "modulename": "cpom.gridding", "kind": "module", "doc": "<h1 id=\"modules-to-support-gridding\">Modules to Support Gridding</h1>\n\n<p>gridareas.py: provides class GridArea: class to define and use named grid areas for polar regions</p>\n\n<p>gridding.py: provides function griddata() to bin irregular data (x,y,vals) in to a \n             2d rectangular grid of cell size: binsize in meters</p>\n"}, {"fullname": "cpom.gridding.gridareas", "modulename": "cpom.gridding.gridareas", "kind": "module", "doc": "<p>Class to define rectangular polar stereo grid areas for processing output. Does not define the\ngrids internal spacing.</p>\n\n<p>Each area is defined by projection, bottom left corner x,y coordinates in m, width and height in m</p>\n\n<p>Author: Alan Muir (CPOM/UCL)\nDate: 2019\nCopyright: UCL/MSSL/CPOM. Not to be used outside CPOM/MSSL without permission of author </p>\n\n<p>History:\nUpdated 24/09/21 by Lin Gilbert to use pyproj CRS rather than Proj</p>\n"}, {"fullname": "cpom.gridding.gridareas.all_grid_areas", "modulename": "cpom.gridding.gridareas", "qualname": "all_grid_areas", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;antarctica&#x27;, &#x27;greenland&#x27;, &#x27;antarctic_ocean&#x27;, &#x27;greenland_wider_area&#x27;, &#x27;greenland_centre&#x27;, &#x27;amundsen_sea_area&#x27;, &#x27;spirit_all&#x27;, &#x27;ross_1600km&#x27;, &#x27;filchner_1300km&#x27;, &#x27;arctic_russia&#x27;, &#x27;svalbard&#x27;, &#x27;novaya_zemlya&#x27;, &#x27;franz_josef_land&#x27;, &#x27;severnaya_zemlya&#x27;, &#x27;arctic&#x27;, &#x27;chongtar&#x27;]"}, {"fullname": "cpom.gridding.gridareas.GridArea", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea", "kind": "class", "doc": "<p>class to define and use named grid areas for polar regions</p>\n"}, {"fullname": "cpom.gridding.gridareas.GridArea.__init__", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.__init__", "kind": "function", "doc": "<p>initialization function for GridArea class</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>name (str):</strong>  GridArea area name</li>\n<li><strong>binsize (int):</strong>  bin size of grid to use in m</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">binsize</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, {"fullname": "cpom.gridding.gridareas.GridArea.name", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.gridding.gridareas.GridArea.binsize", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.binsize", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.gridding.gridareas.GridArea.halfbinsize", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.halfbinsize", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.gridding.gridareas.GridArea.crs_wgs", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.crs_wgs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.gridding.gridareas.GridArea.maxxm", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.maxxm", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.gridding.gridareas.GridArea.maxym", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.maxym", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.gridding.gridareas.GridArea.cell_x_centres", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.cell_x_centres", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.gridding.gridareas.GridArea.cell_y_centres", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.cell_y_centres", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.gridding.gridareas.GridArea.crs_bng", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.crs_bng", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.gridding.gridareas.GridArea.xy_to_lonlat_transformer", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.xy_to_lonlat_transformer", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.gridding.gridareas.GridArea.lonlat_to_xy_transformer", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.lonlat_to_xy_transformer", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.gridding.gridareas.GridArea.info", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.info", "kind": "function", "doc": "<p>print info on the class instance</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.gridding.gridareas.GridArea.get_ncols_nrows", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.get_ncols_nrows", "kind": "function", "doc": "<p>returns the number of grid columns (x) and rows (y) for a given bin size in m</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.gridding.gridareas.GridArea.get_col_row_from_x_y", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.get_col_row_from_x_y", "kind": "function", "doc": "<p>returns the grid column and row for a given x,y and bin size in m</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.gridding.gridareas.GridArea.get_cellcentre_x_y_from_col_row", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.get_cellcentre_x_y_from_col_row", "kind": "function", "doc": "<p>returns cell centre x,y in (m) from the grid column and row indices and bin size</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">col</span>, </span><span class=\"param\"><span class=\"n\">row</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.gridding.gridareas.GridArea.get_cellcentre_lat_lon_from_col_row", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.get_cellcentre_lat_lon_from_col_row", "kind": "function", "doc": "<p>returns latitude and longitude E of cell centre from the grid column and row indices\nand bin size</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">col</span>, </span><span class=\"param\"><span class=\"n\">row</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.gridding.gridareas.GridArea.get_xy_relative_to_cellcentre", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.get_xy_relative_to_cellcentre", "kind": "function", "doc": "<p>returns  the offset in x and y from grid cell (ncol,nrow) centre</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">col</span>, </span><span class=\"param\"><span class=\"n\">row</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.gridding.gridareas.GridArea.transform_x_y_to_lat_lon", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.transform_x_y_to_lat_lon", "kind": "function", "doc": "<p>returns latitude and longitude E of cell centre from the arrays of x,y</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.gridding.gridareas.GridArea.transform_lat_lon_to_x_y", "modulename": "cpom.gridding.gridareas", "qualname": "GridArea.transform_lat_lon_to_x_y", "kind": "function", "doc": "<p>returns x,y in grid projection of latitude and longitude E</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">lats</span>, </span><span class=\"param\"><span class=\"n\">lons</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.gridding.gridding", "modulename": "cpom.gridding.gridding", "kind": "module", "doc": "<p>Module for irregular data gridding functions optimised for typical satellite data uses</p>\n\n<p>Author: Alan Muir (CPOM/UCL)\nDate: 2019\nCopyright: UCL/MSSL/CPOM. Not to be used outside CPOM/MSSL without permission of author</p>\n"}, {"fullname": "cpom.gridding.gridding.griddata", "modulename": "cpom.gridding.gridding", "qualname": "griddata", "kind": "function", "doc": "<p>bin irregular data (x,y,vals) in to a 2d rectangular grid of cell size: binsize in meters.\ngrid coordinates defined by x,y extrema : origin xmin-binsize/2., ymin - binsize/2.\nie xmin,ymin is in center of 1st bin (not edge).\nCalculates median (or mean or %value) of binned values.\nNans are allowed but excluded from calculation.\nEmpty bins are set to np.nan</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x : ndarray (1D)\n    float, x values (in meters).\ny : ndarray (1D)\n    float, y values (in meters).\nz : ndarray (1D)\n    corresponding data values.\nbinsize : scalar, optional, units meters\n    The full width and height of each bin on the grid.  If each\n    bin is a cube, then this is the x and y dimension.  This is\n    the step in both directions, x and y. Defaults to 10000 (ie 10km)\ncalc_median : boolean, default=False. Calculate the median value in each bin\nas return grid value\ncalc_mean : boolean, default=False. Calculate the mean value in each bin\nas return grid value\ncalc_percent_of_value : a scalar value or boolean False, default=False.\nCalculate the % of this value in each bin as return grid value</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>grid : ndarray (2D)\n    The evenly gridded data.  The value of each cell is the median,\n    mean or %failure value of\n    the contents of the bin.\ndensity_grid : ndarray (2D) of int, optional\n    xi, yi: the mesh of x,y coordinates for new grid\n     grid of measurement density (number of measurements in each cell)\n     only returned if return_density==True</p>\n\n<h2 id=\"revisions\">Revisions</h2>\n\n<p>2019-11-04  Initial version</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span>,</span><span class=\"param\">\t<span class=\"n\">y</span>,</span><span class=\"param\">\t<span class=\"n\">z</span>,</span><span class=\"param\">\t<span class=\"n\">binsize</span><span class=\"o\">=</span><span class=\"mi\">10000</span>,</span><span class=\"param\">\t<span class=\"n\">calc_median</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">calc_mean</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">calc_percent_of_value</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">return_density</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.masks", "modulename": "cpom.masks", "kind": "module", "doc": "<p>cpom.masks</p>\n\n<h1 id=\"class-to-support-area-masks\">class to support area Masks</h1>\n"}, {"fullname": "cpom.masks.masks", "modulename": "cpom.masks.masks", "kind": "module", "doc": "<p>Class for area masking</p>\n"}, {"fullname": "cpom.masks.masks.log", "modulename": "cpom.masks.masks", "qualname": "log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger cpom.masks.masks (WARNING)&gt;"}, {"fullname": "cpom.masks.masks.mask_list", "modulename": "cpom.masks.masks", "qualname": "mask_list", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;ase_xylimits_mask&#x27;, &#x27;ronne_filchner_xylimits_mask&#x27;, &#x27;greenland_area_xylimits_mask&#x27;, &#x27;antarctica_bedmachine_v2_grid_mask&#x27;, &#x27;greenland_bedmachine_v3_grid_mask&#x27;, &#x27;antarctica_iceandland_dilated_10km_grid_mask&#x27;, &#x27;greenland_iceandland_dilated_10km_grid_mask&#x27;, &#x27;antarctic_grounded_and_floating_2km_grid_mask&#x27;, &#x27;greenland_icesheet_2km_grid_mask&#x27;, &#x27;antarctic_icesheet_2km_grid_mask_rignot2016&#x27;, &#x27;greenland_icesheet_2km_grid_mask_rignot2016&#x27;, &#x27;greenland_icesheet_2km_grid_mask_mouginot2019&#x27;]"}, {"fullname": "cpom.masks.masks.Mask", "modulename": "cpom.masks.masks", "qualname": "Mask", "kind": "class", "doc": "<p>class to handle area masking</p>\n"}, {"fullname": "cpom.masks.masks.Mask.__init__", "modulename": "cpom.masks.masks", "qualname": "Mask.__init__", "kind": "function", "doc": "<p>class initialization</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>mask_name (str):</strong>  mask name, must be in global mask_list</li>\n<li><strong>basin_numbers (list[int], optional):</strong>  list of grid values to select from grid masks\ndef=None</li>\n<li><strong>mask_path (str, optional):</strong>  override default path of mask data file</li>\n<li><strong>store_in_shared_memory (bool, optional):</strong>  stores/access mask array in SharedMemory</li>\n<li><strong>thislog (logging.Logger|None, optional):</strong>  attach to a different log instance</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">mask_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">basin_numbers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mask_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">store_in_shared_memory</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">thislog</span><span class=\"p\">:</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">Logger</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "cpom.masks.masks.Mask.nomask", "modulename": "cpom.masks.masks", "qualname": "Mask.nomask", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.mask_name", "modulename": "cpom.masks.masks", "qualname": "Mask.mask_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.mask_long_name", "modulename": "cpom.masks.masks", "qualname": "Mask.mask_long_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.mask_grid", "modulename": "cpom.masks.masks", "qualname": "Mask.mask_grid", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, {"fullname": "cpom.masks.masks.Mask.basin_numbers", "modulename": "cpom.masks.masks", "qualname": "Mask.basin_numbers", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.store_in_shared_memory", "modulename": "cpom.masks.masks", "qualname": "Mask.store_in_shared_memory", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.shared_mem", "modulename": "cpom.masks.masks", "qualname": "Mask.shared_mem", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Any"}, {"fullname": "cpom.masks.masks.Mask.shared_mem_child", "modulename": "cpom.masks.masks", "qualname": "Mask.shared_mem_child", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.polygons", "modulename": "cpom.masks.masks", "qualname": "Mask.polygons", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.polygons_lon", "modulename": "cpom.masks.masks", "qualname": "Mask.polygons_lon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.polygons_lat", "modulename": "cpom.masks.masks", "qualname": "Mask.polygons_lat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.polygon", "modulename": "cpom.masks.masks", "qualname": "Mask.polygon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.polygon_lon", "modulename": "cpom.masks.masks", "qualname": "Mask.polygon_lon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.polygon_lat", "modulename": "cpom.masks.masks", "qualname": "Mask.polygon_lat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.mask_type", "modulename": "cpom.masks.masks", "qualname": "Mask.mask_type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.crs_wgs", "modulename": "cpom.masks.masks", "qualname": "Mask.crs_wgs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.xy_to_lonlat_transformer", "modulename": "cpom.masks.masks", "qualname": "Mask.xy_to_lonlat_transformer", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.lonlat_to_xy_transformer", "modulename": "cpom.masks.masks", "qualname": "Mask.lonlat_to_xy_transformer", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.masks.Mask.load_netcdf_mask", "modulename": "cpom.masks.masks", "qualname": "Mask.load_netcdf_mask", "kind": "function", "doc": "<p>load mask array from netcdf grid masks</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>mask_file (str) :</strong>  path of netcdf mask file</li>\n<li><strong>flip (bool, optional):</strong>  _description_. Defaults to True.</li>\n<li><strong>nc_mask_var (str):</strong>  variable name in netcdf file containing mask data, def='mask'</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mask_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">flip</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">nc_mask_var</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mask&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.masks.masks.Mask.load_npz_mask", "modulename": "cpom.masks.masks", "qualname": "Mask.load_npz_mask", "kind": "function", "doc": "<p>load mask array from npz grid masks</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>mask_file (str) :</strong>  path of npz mask file</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mask_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.masks.masks.Mask.points_inside", "modulename": "cpom.masks.masks", "qualname": "Mask.points_inside", "kind": "function", "doc": "<p>Given a list of lat,lon or x,y points, find the points that are inside the current mask</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>lats (np.ndarray|list[float]):</strong>  list of latitude points</li>\n<li><strong>lons (np.ndarray|list[float]):</strong>  list of longitude points</li>\n<li><strong>basin_numbers (list[int,], optional):</strong>  list of basin numbers. Defaults to None.</li>\n<li><strong>inputs_are_xy (bool, optional):</strong>  lats, lons are already transformed to x,y.\nDefaults to False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>inmask(np.ndarray) : boolean array same size as input list, indicating whether\n  inputs points are inside (True) or outside (False) mask\n  n_inside (int) : number inside mask</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">basin_numbers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">inputs_are_xy</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.masks.masks.Mask.grid_mask_values", "modulename": "cpom.masks.masks", "qualname": "Mask.grid_mask_values", "kind": "function", "doc": "<p>Return the grid mask value at each input lats, lons interpolated grid location</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>lats (np.ndarray):</strong>  array of latitude (N) values in degrees</li>\n<li><strong>lons (np.ndarray):</strong>  array of longitude (E) values in degrees</li>\n<li><strong>inputs_are_xy (bool):</strong>  inputs are x,y values (m) instead of latitude, longitude values</li>\n<li><strong>unknown_value (int):</strong>  value returned for locations outside mask, or where mask\ngrid includes an unclassified value (unknown_value will be\nsubstituted)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>mask_values (np.ndarray): grid mask value at each input lats, lons interpolated\n                       grid location or np.NaN if outside area</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">inputs_are_xy</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">unknown_value</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.masks.masks.Mask.latlon_to_xy", "modulename": "cpom.masks.masks", "qualname": "Mask.latlon_to_xy", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>lats</strong>:  latitude points in degs</li>\n<li><strong>lons</strong>:  longitude points in degrees E</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>x,y in polar stereo projection of mask</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">lats</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">lons</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.masks.masks.Mask.clean_up", "modulename": "cpom.masks.masks", "qualname": "Mask.clean_up", "kind": "function", "doc": "<p>Free up, close or release any shared memory or other resources associated\nwith mask</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.masks.tests", "modulename": "cpom.masks.tests", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "cpom.masks.tests.test_masks", "modulename": "cpom.masks.tests.test_masks", "kind": "module", "doc": "<p>pytests for masks.py: Mask class</p>\n"}, {"fullname": "cpom.masks.tests.test_masks.pytestmark", "modulename": "cpom.masks.tests.test_masks", "qualname": "pytestmark", "kind": "variable", "doc": "<p></p>\n", "default_value": "MarkDecorator(mark=Mark(name=&#x27;requires_external_data&#x27;, args=(), kwargs={}))"}, {"fullname": "cpom.masks.tests.test_masks.test_mask_points_inside", "modulename": "cpom.masks.tests.test_masks", "qualname": "test_mask_points_inside", "kind": "function", "doc": "<p>test of Mask.points_inside()</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>mask_name (str):</strong>  name of Mask</li>\n<li><strong>indices_inside (list[int]):</strong>  list of indices inside mask, or empty list []</li>\n<li><strong>num_inside (int):</strong>  number of points inside mask</li>\n<li><strong>lats (_type_):</strong>  _description_</li>\n<li><strong>lons (_type_):</strong>  _description_</li>\n<li><strong>grid_values (_type_):</strong>  _description_</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mask_name</span>, </span><span class=\"param\"><span class=\"n\">indices_inside</span>, </span><span class=\"param\"><span class=\"n\">lats</span>, </span><span class=\"param\"><span class=\"n\">lons</span>, </span><span class=\"param\"><span class=\"n\">grid_values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.masks.tests.test_masks.test_mask_grid_mask_values", "modulename": "cpom.masks.tests.test_masks", "qualname": "test_mask_grid_mask_values", "kind": "function", "doc": "<p>test of Mask.grid_mask_values()</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>mask_name (str):</strong>  mask name</li>\n<li><strong>lats (np.ndarray):</strong>  array of latitude N values in degs</li>\n<li><strong>lons (np.ndarray):</strong>  array of longitude E values in degs</li>\n<li><strong>expected_surface_type (list[int or nan]):</strong>  list of expected surface type values</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mask_name</span>, </span><span class=\"param\"><span class=\"n\">lats</span>, </span><span class=\"param\"><span class=\"n\">lons</span>, </span><span class=\"param\"><span class=\"n\">expected_surface_type</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.masks.tests.test_masks.test_mask_loading", "modulename": "cpom.masks.tests.test_masks", "qualname": "test_mask_loading", "kind": "function", "doc": "<p>test loading mask file using non-default path</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness", "modulename": "cpom.roughness", "kind": "module", "doc": "<p>cpom.roughness</p>\n\n<h1 id=\"class-to-readinterpolate-roughness-data\">Class to read/interpolate roughness data</h1>\n\n<h2 id=\"supported-roughness-data-sets\">Supported Roughness Data Sets</h2>\n\n<ul>\n<li>rema_100m_900ws_roughness_zarr \n(Roughness calculated from REMA 100m, J.Phillips 2024)</li>\n<li>arcticdem_100m_900ws_roughness_zarr \n(Roughness calculated from ArcticDEM 100m, J.Phillips 2024)</li>\n</ul>\n"}, {"fullname": "cpom.roughness.roughness", "modulename": "cpom.roughness.roughness", "kind": "module", "doc": "<p>cpom.roughness.roughness</p>\n\n<p>Roughness class to read and interpolate surface Roughness files</p>\n"}, {"fullname": "cpom.roughness.roughness.log", "modulename": "cpom.roughness.roughness", "qualname": "log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger cpom.roughness.roughness (WARNING)&gt;"}, {"fullname": "cpom.roughness.roughness.roughness_list", "modulename": "cpom.roughness.roughness", "qualname": "roughness_list", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;rema_100m_900ws_roughness_zarr&#x27;, &#x27;arcticdem_100m_900ws_roughness_zarr&#x27;]"}, {"fullname": "cpom.roughness.roughness.Roughness", "modulename": "cpom.roughness.roughness", "qualname": "Roughness", "kind": "class", "doc": "<p>class to load and interpolate Polar roughness</p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.__init__", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.__init__", "kind": "function", "doc": "<p>class initialization function</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>name (str):</strong>  roughness name id, must be in global roughness_list</li>\n<li><strong>filled (bool, optional):</strong>  Use filled version of roughness if True. Defaults to True.</li>\n<li><strong>config (dict, optional):</strong>  configuration dictionary, defaults to None</li>\n<li><strong>roughness_dir (str, optional):</strong>  path of directory containing roughness. Defaults to None</li>\n<li><strong>store_in_shared_memory (bool, optional):</strong>  stores/accesses zroughness array in</li>\n<li>SharedMemory</li>\n<li><strong>thislog (logging.Logger|None, optional):</strong>  attach to a different log instance</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  when name not in global roughness_list</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">filled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">roughness_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">store_in_shared_memory</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">thislog</span><span class=\"p\">:</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">Logger</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "cpom.roughness.roughness.Roughness.name", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.crs_wgs", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.crs_wgs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.config", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.config", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.roughness_dir", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.roughness_dir", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.filled", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.filled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.reference_year", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.reference_year", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.xroughness", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.xroughness", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.yroughness", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.yroughness", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.zroughness", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.zroughness", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.zroughness_flip", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.zroughness_flip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.minroughnessx", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.minroughnessx", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.minroughnessy", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.minroughnessy", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.binsize", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.binsize", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.store_in_shared_memory", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.store_in_shared_memory", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.shape", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.shape", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.dtype", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.dtype", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.shared_mem", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.shared_mem", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Any"}, {"fullname": "cpom.roughness.roughness.Roughness.shared_mem_child", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.shared_mem_child", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.npz_type", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.npz_type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.zarr_type", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.zarr_type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.nc_type", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.nc_type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.roughness.roughness.Roughness.get_geotiff_extent", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.get_geotiff_extent", "kind": "function", "doc": "<p>Get info from GeoTIFF on its extent</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fname (str):</strong>  path of GeoTIFF file</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  _description_</li>\n<li><strong>IOError:</strong>  _description_</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple(int,int,int,int,int,int,int): width,height,top_left,top_right,bottom_left,\n  bottom_right,pixel_width</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.roughness.Roughness.get_filename", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.get_filename", "kind": "function", "doc": "<p>Find the path of the roughness file from dir and file names :\nFor the directory, it is chosen in order of preference:\na) self.config[\"roughness_dirs\"][self.name], or\nb) supplied self.roughness_dir, or\nc) default_dir\nThe file name is:\nfilename: is self.filled use filled_filename</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>default_dir (str):</strong>  default dir to find roughness file names</li>\n<li><strong>filename (str):</strong>  file name of roughness (not filled)</li>\n<li><strong>filled_filename (str):</strong>  file name of roughness (not filled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str : path of roughness file</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>OSError :</strong>  directory or file not found</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">default_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">filled_filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.roughness.Roughness.clean_up", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.clean_up", "kind": "function", "doc": "<p>Free up, close or release any shared memory or other resources associated\nwith roughness</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.roughness.Roughness.load_npz", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.load_npz", "kind": "function", "doc": "<p>Load roughness from npz format file</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>npz_file (str):</strong>  path of npz file</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">npz_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.roughness.Roughness.load_zarr", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.load_zarr", "kind": "function", "doc": "<p>Load a .zarr file</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>roughnessfile (str):</strong>  path of .zarr file</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">roughnessfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.roughness.Roughness.load_geotiff", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.load_geotiff", "kind": "function", "doc": "<p>Load a GeoTIFF file</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>roughnessfile (str):</strong>  path of GeoTIFF</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">roughnessfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.roughness.Roughness.load", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.load", "kind": "function", "doc": "<p>load the roughness</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: roughness loaded ok (True), failed (False)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.roughness.Roughness.get_segment", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.get_segment", "kind": "function", "doc": "<p>return a cropped segment of the roughness, flattened or as a grid</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>segment_bounds (List):</strong>  [(minx,maxx),(miny,maxy)]</li>\n<li><strong>grid_xy (bool, optional):</strong>  return segment as a grid. Defaults to True.</li>\n<li><strong>flatten (bool, optional):</strong>  return segment as flattened list. Defaults to False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Tuple[np.ndarray, np.ndarray, np.ndarray]: (xroughness,yroughness,zroughness)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">segment_bounds</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">grid_xy</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">flatten</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.roughness.Roughness.chunked_interpolation", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.chunked_interpolation", "kind": "function", "doc": "<p>Interpolate roughness in chunks to handle large datasets efficiently.</p>\n\n<p>This function performs interpolation on a roughness stored in a Zarr array by\nextracting relevant chunks and creating a sub-grid for interpolation.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x (np.ndarray):</strong>  Array of x coordinates in the roughness's projection (in meters).</li>\n<li><strong>y (np.ndarray):</strong>  Array of y coordinates in the roughness's projection (in meters).</li>\n<li><strong>myyroughness (np.ndarray):</strong>  Flipped y coordinates corresponding to the roughness grid.</li>\n<li><strong>xroughness (np.ndarray):</strong>  x coordinates corresponding to the roughness grid.</li>\n<li><strong>method (str):</strong>  Interpolation method to use ('linear', 'nearest', etc.).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: Interpolated roughness elevation values at the specified coordinates.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">myyroughness</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">xroughness</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.roughness.Roughness.interp_roughness", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.interp_roughness", "kind": "function", "doc": "<p>Interpolate roughness to return elevation values corresponding to\n   cartesian x,y in roughness's projection or lat,lon values</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x (np.ndarray):</strong>  x cartesian coordinates in the roughness's projection in m, or lat vals</li>\n<li><strong>y (np.ndarray):</strong>  x cartesian coordinates in the roughness's projection in m, or lon vals</li>\n<li><strong>method (str, optional):</strong>  linear, nearest, splinef2d. Defaults to \"linear\".</li>\n<li><strong>xy_is_latlon (bool, optional):</strong>  if True, x,y are lat, lon values. Defaults to False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: interpolated roughness elevation values</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;linear&#39;</span>, </span><span class=\"param\"><span class=\"n\">xy_is_latlon</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.roughness.Roughness.gaussian_smooth", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.gaussian_smooth", "kind": "function", "doc": "<p>perform a gaussian smooth on the current loaded roughness\nsigma : degree of smoothing, def=1.0</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sigma</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.roughness.Roughness.hillshade", "modulename": "cpom.roughness.roughness", "qualname": "Roughness.hillshade", "kind": "function", "doc": "<p>Convert the roughness 'z_roughness' values to a hillshade value between 0..255\nazimuth: angle in degrees (0..360)\npitch : angle in degrees (0..90)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">azimuth</span><span class=\"o\">=</span><span class=\"mi\">225</span>, </span><span class=\"param\"><span class=\"n\">pitch</span><span class=\"o\">=</span><span class=\"mi\">45</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.tests", "modulename": "cpom.roughness.tests", "kind": "module", "doc": "<p>pytests for cpom.roughness.roughness.py</p>\n"}, {"fullname": "cpom.roughness.tests.test_roughness", "modulename": "cpom.roughness.tests.test_roughness", "kind": "module", "doc": "<p>test of cpom.roughness.roughness</p>\n"}, {"fullname": "cpom.roughness.tests.test_roughness.pytestmark", "modulename": "cpom.roughness.tests.test_roughness", "qualname": "pytestmark", "kind": "variable", "doc": "<p></p>\n", "default_value": "MarkDecorator(mark=Mark(name=&#x27;requires_external_data&#x27;, args=(), kwargs={}))"}, {"fullname": "cpom.roughness.tests.test_roughness.test_roughness", "modulename": "cpom.roughness.tests.test_roughness", "qualname": "test_roughness", "kind": "function", "doc": "<p>test loading all roughness scenarios</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.tests.test_roughness.test_roughness_ant", "modulename": "cpom.roughness.tests.test_roughness", "qualname": "test_roughness_ant", "kind": "function", "doc": "<p>test Antarctic roughness scenarios</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.tests.test_roughness.test_roughness_grn", "modulename": "cpom.roughness.tests.test_roughness", "qualname": "test_roughness_grn", "kind": "function", "doc": "<p>test Greenland roughness scenarios</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">slope_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.tests.test_roughness.test_slope_map_vostok", "modulename": "cpom.roughness.tests.test_roughness", "qualname": "test_slope_map_vostok", "kind": "function", "doc": "<p>test Antarctic roughness scenarios</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.tests.test_roughness.test_slope_map_ant", "modulename": "cpom.roughness.tests.test_roughness", "qualname": "test_slope_map_ant", "kind": "function", "doc": "<p>test Antarctic roughness scenarios</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">slope_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.tests.test_roughness.test_slope_map_spirit", "modulename": "cpom.roughness.tests.test_roughness", "qualname": "test_slope_map_spirit", "kind": "function", "doc": "<p>test Antarctic roughness scenarios</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">slope_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.roughness.tests.test_roughness.test_slope_map_arctic", "modulename": "cpom.roughness.tests.test_roughness", "qualname": "test_slope_map_arctic", "kind": "function", "doc": "<p>test Antarctic slop scenarios</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">slope_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes", "modulename": "cpom.slopes", "kind": "module", "doc": "<p>cpom.slopes</p>\n\n<h1 id=\"classes-to-readinterpolate-ice-sheet-slope-data\">Classes to read/interpolate ice sheet slope data</h1>\n"}, {"fullname": "cpom.slopes.slopes", "modulename": "cpom.slopes.slopes", "kind": "module", "doc": "<p>cpom.slopes.slopes</p>\n\n<p>Slope class to read and interpolate surface slope files</p>\n"}, {"fullname": "cpom.slopes.slopes.log", "modulename": "cpom.slopes.slopes", "qualname": "log", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger cpom.slopes.slopes (WARNING)&gt;"}, {"fullname": "cpom.slopes.slopes.slope_list", "modulename": "cpom.slopes.slopes", "qualname": "slope_list", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;rema_100m_900ws_slopes_zarr&#x27;, &#x27;arcticdem_100m_900ws_slopes_zarr&#x27;, &#x27;awi_grn_2013_1km_slopes&#x27;, &#x27;cpom_ant_2018_1km_slopes&#x27;]"}, {"fullname": "cpom.slopes.slopes.Slopes", "modulename": "cpom.slopes.slopes", "qualname": "Slopes", "kind": "class", "doc": "<p>class to load and interpolate Polar slopes</p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.__init__", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.__init__", "kind": "function", "doc": "<p>class initialization function</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>name (str):</strong>  slopes name id, must be in global slope_list</li>\n<li><strong>filled (bool, optional):</strong>  Use filled version of slopes if True. Defaults to True.</li>\n<li><strong>config (dict, optional):</strong>  configuration dictionary, defaults to None</li>\n<li><strong>slopes_dir (str, optional):</strong>  path of directory containing slopes. Defaults to None</li>\n<li><strong>store_in_shared_memory (bool, optional):</strong>  stores/accesses zslopes array in SharedMemory</li>\n<li><strong>thislog (logging.Logger|None, optional):</strong>  attach to a different log instance</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  when name not in global slope_list</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">filled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">slopes_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">store_in_shared_memory</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">thislog</span><span class=\"p\">:</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">Logger</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "cpom.slopes.slopes.Slopes.name", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.crs_wgs", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.crs_wgs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.config", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.config", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.slopes_dir", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.slopes_dir", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.filled", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.filled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.reference_year", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.reference_year", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.xslopes", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.xslopes", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.yslopes", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.yslopes", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.zslopes", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.zslopes", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.zslopes_flip", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.zslopes_flip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.minslopesx", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.minslopesx", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.minslopesy", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.minslopesy", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.binsize", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.binsize", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.store_in_shared_memory", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.store_in_shared_memory", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.shape", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.shape", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.dtype", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.dtype", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.shared_mem", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.shared_mem", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Any"}, {"fullname": "cpom.slopes.slopes.Slopes.shared_mem_child", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.shared_mem_child", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.npz_type", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.npz_type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.zarr_type", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.zarr_type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.nc_type", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.nc_type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "cpom.slopes.slopes.Slopes.get_geotiff_extent", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.get_geotiff_extent", "kind": "function", "doc": "<p>Get info from GeoTIFF on its extent</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fname (str):</strong>  path of GeoTIFF file</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  _description_</li>\n<li><strong>IOError:</strong>  _description_</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple(int,int,int,int,int,int,int): width,height,top_left,top_right,bottom_left,\n  bottom_right,pixel_width</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.slopes.Slopes.get_filename", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.get_filename", "kind": "function", "doc": "<p>Find the path of the slopes file from dir and file names :\nFor the directory, it is chosen in order of preference:\na) self.config[\"slopes_dirs\"][self.name], or\nb) supplied self.slopes_dir, or\nc) default_dir\nThe file name is:\nfilename: is self.filled use filled_filename</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>default_dir (str):</strong>  default dir to find slopes file names</li>\n<li><strong>filename (str):</strong>  file name of slopes (not filled)</li>\n<li><strong>filled_filename (str):</strong>  file name of slopes (not filled)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str : path of slopes file</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>OSError :</strong>  directory or file not found</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">default_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">filled_filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.slopes.Slopes.clean_up", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.clean_up", "kind": "function", "doc": "<p>Free up, close or release any shared memory or other resources associated\nwith slopes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.slopes.Slopes.load_npz", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.load_npz", "kind": "function", "doc": "<p>Load slopes from npz format file</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>npz_file (str):</strong>  path of npz file</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">npz_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.slopes.Slopes.load_zarr", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.load_zarr", "kind": "function", "doc": "<p>Load a .zarr file</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>slopesfile (str):</strong>  path of .zarr file</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">slopesfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.slopes.Slopes.load_nc", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.load_nc", "kind": "function", "doc": "<p>load NetCDF slope files</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>slopesfile (str):</strong>  path of netcdf slope file</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">slopesfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.slopes.Slopes.load_geotiff", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.load_geotiff", "kind": "function", "doc": "<p>Load a GeoTIFF file</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>slopesfile (str):</strong>  path of GeoTIFF</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">slopesfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.slopes.Slopes.load", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.load", "kind": "function", "doc": "<p>load the slopes</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: slopes loaded ok (True), failed (False)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.slopes.Slopes.get_segment", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.get_segment", "kind": "function", "doc": "<p>return a cropped segment of the slopes, flattened or as a grid</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>segment_bounds (List):</strong>  [(minx,maxx),(miny,maxy)]</li>\n<li><strong>grid_xy (bool, optional):</strong>  return segment as a grid. Defaults to True.</li>\n<li><strong>flatten (bool, optional):</strong>  return segment as flattened list. Defaults to False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Tuple[np.ndarray, np.ndarray, np.ndarray]: (xslopes,yslopes,zslopes)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">segment_bounds</span><span class=\"p\">:</span> <span class=\"nb\">list</span>,</span><span class=\"param\">\t<span class=\"n\">grid_xy</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">flatten</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.slopes.Slopes.chunked_interpolation", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.chunked_interpolation", "kind": "function", "doc": "<p>Interpolate slopes in chunks to handle large datasets efficiently.</p>\n\n<p>This function performs interpolation on a slopes stored in a Zarr array by\nextracting relevant chunks and creating a sub-grid for interpolation.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x (np.ndarray):</strong>  Array of x coordinates in the slopes's projection (in meters).</li>\n<li><strong>y (np.ndarray):</strong>  Array of y coordinates in the slopes's projection (in meters).</li>\n<li><strong>myyslopes (np.ndarray):</strong>  Flipped y coordinates corresponding to the slopes grid.</li>\n<li><strong>xslopes (np.ndarray):</strong>  x coordinates corresponding to the slopes grid.</li>\n<li><strong>method (str):</strong>  Interpolation method to use ('linear', 'nearest', etc.).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: Interpolated slopes elevation values at the specified coordinates.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">myyslopes</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">xslopes</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.slopes.Slopes.interp_slopes", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.interp_slopes", "kind": "function", "doc": "<p>Interpolate slopes to return elevation values corresponding to\n   cartesian x,y in slopes's projection or lat,lon values</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x (np.ndarray):</strong>  x cartesian coordinates in the slopes's projection in m, or lat values</li>\n<li><strong>y (np.ndarray):</strong>  x cartesian coordinates in the slopes's projection in m, or lon values</li>\n<li><strong>method (str, optional):</strong>  linear, nearest, splinef2d. Defaults to \"linear\".</li>\n<li><strong>xy_is_latlon (bool, optional):</strong>  if True, x,y are lat, lon values. Defaults to False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: interpolated slopes elevation values</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;linear&#39;</span>, </span><span class=\"param\"><span class=\"n\">xy_is_latlon</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.slopes.Slopes.gaussian_smooth", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.gaussian_smooth", "kind": "function", "doc": "<p>perform a gaussian smooth on the current loaded slopes\nsigma : degree of smoothing, def=1.0</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sigma</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.slopes.Slopes.hillshade", "modulename": "cpom.slopes.slopes", "qualname": "Slopes.hillshade", "kind": "function", "doc": "<p>Convert the slopes 'z_slopes' values to a hillshade value between 0..255\nazimuth: angle in degrees (0..360)\npitch : angle in degrees (0..90)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">azimuth</span><span class=\"o\">=</span><span class=\"mi\">225</span>, </span><span class=\"param\"><span class=\"n\">pitch</span><span class=\"o\">=</span><span class=\"mi\">45</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.tests", "modulename": "cpom.slopes.tests", "kind": "module", "doc": "<p>pytests for cpom.slopes.slopes.py</p>\n"}, {"fullname": "cpom.slopes.tests.test_slopes", "modulename": "cpom.slopes.tests.test_slopes", "kind": "module", "doc": "<p>test of cpom.slopes.slopes</p>\n"}, {"fullname": "cpom.slopes.tests.test_slopes.pytestmark", "modulename": "cpom.slopes.tests.test_slopes", "qualname": "pytestmark", "kind": "variable", "doc": "<p></p>\n", "default_value": "MarkDecorator(mark=Mark(name=&#x27;requires_external_data&#x27;, args=(), kwargs={}))"}, {"fullname": "cpom.slopes.tests.test_slopes.test_slopes", "modulename": "cpom.slopes.tests.test_slopes", "qualname": "test_slopes", "kind": "function", "doc": "<p>test loading all slope scenarios</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.tests.test_slopes.test_slopes_ant", "modulename": "cpom.slopes.tests.test_slopes", "qualname": "test_slopes_ant", "kind": "function", "doc": "<p>test Antarctic slop scenarios</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.tests.test_slopes.test_slopes_grn", "modulename": "cpom.slopes.tests.test_slopes", "qualname": "test_slopes_grn", "kind": "function", "doc": "<p>test Greenland slope scenarios</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">slope_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.tests.test_slopes.test_slope_map_vostok", "modulename": "cpom.slopes.tests.test_slopes", "qualname": "test_slope_map_vostok", "kind": "function", "doc": "<p>test Antarctic slope scenarios</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.tests.test_slopes.test_slope_map_ant", "modulename": "cpom.slopes.tests.test_slopes", "qualname": "test_slope_map_ant", "kind": "function", "doc": "<p>test Antarctic slope scenarios</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">slope_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.tests.test_slopes.test_slope_map_spirit", "modulename": "cpom.slopes.tests.test_slopes", "qualname": "test_slope_map_spirit", "kind": "function", "doc": "<p>test Antarctic slope scenarios</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">slope_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "cpom.slopes.tests.test_slopes.test_slope_map_arctic", "modulename": "cpom.slopes.tests.test_slopes", "qualname": "test_slope_map_arctic", "kind": "function", "doc": "<p>test Antarctic slop scenarios</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">slope_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();